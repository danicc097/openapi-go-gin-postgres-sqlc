{
  "folders": [
    {
      "path": "."
    },
    {
      "path": "e2e"
    },
    {
      "path": "frontend"
    }
  ],
  "settings": {
    // see https://github.com/yokoe/vscode-postfix-go/blob/master/src/templates/customTemplate.ts#L5
    "postfixGo.customTemplates": [
      {
        "name": "my_switch",
        "body": "switch ${1:{{expr}}} {\ncase ${2:condition}: \n${0}\n}",
        "description": "A custom switch",
        "when": [
          "identifier"
        ]
      },
    ],
    "cssVariables.lookupFiles": [
      "**/*.css",
      "**/*.scss",
      "**/*.sass",
      "**/*.less",
      "node_modules/@mantine/core/styles.css",
      "frontend/node_modules/@mantine/core/styles.css"
    ],
    "yaml.schemas": {
      "https://raw.githubusercontent.com/docker/cli/master/cli/compose/schema/data/config_schema_v3.8.json": "*compose*.yml",
      // NOTE: ensure no other extensions override yaml.schemas
      ".vscode/openapi-schema.json": "openapi.yaml"
    },
    "yaml.customTags": [
      "tag:yaml.org,2002:merge", // required for broken yaml extension
    ],
    "go.testEnvVars": {
      "POSTGRES_TRACE": "false",
    },
    "remote.SSH.defaultForwardedPorts": [
      // use zipkin instead: https://github.com/jaegertracing/jaeger/issues/3479#issuecomment-1012199971
      // {
      //   "localPort": 4318,
      //   "remotePort": 4318,
      //   "name": "jaeger otlp collector"
      // },
      {
        "localPort": 9411,
        "remotePort": 9411,
        "name": "jaeger zipkin collector"
      },
      {
        "localPort": 16686,
        "remotePort": 16686,
        "name": "jaeger UI"
      }
    ],
    "files.associations": {
      "*.sql": "postgres"
    },
    "vscode-command-help.commands": [
      "oapi-codegen",
      "codegen",
      "air",
      "bin",
      "counterfeiter",
      "godotenv",
      "gofumpt",
      "goimports",
      "golangci-lint",
      "go-test-renamer",
      "gowrap",
      "lib",
      "migrate",
      "mkcert",
      "oasdiff",
      "protoc",
      "protoc-gen-go",
      "protoc-gen-go-grpc",
      "sqlc",
      "stringer",
      "teststat",
      "xo",
      "yq",
      "pnpm",
      "ast-parser"
    ],
    //
    // SQL
    //
    "pgFormatter.configFile": "${workspaceFolder}/.pg_format",
    // as per extension docs, else they're overridden with defaults...
    // https://github.com/bradymholt/vscode-pgFormatter#configuration
    "pgFormatter.placeholder": null,
    "pgFormatter.commaBreak": null,
    "pgFormatter.noSpaceFunction": null,
    "pgFormatter.commaEnd": null,
    "pgFormatter.commaStart": null,
    "pgFormatter.extraFunction": null,
    "pgFormatter.formatType": null,
    "pgFormatter.functionCase": null,
    "pgFormatter.keepNewline": null,
    "pgFormatter.keywordCase": null,
    "pgFormatter.noComment": null,
    "pgFormatter.noExtraLine": null,
    "pgFormatter.noGrouping": null,
    "pgFormatter.perlBinPath": null,
    "pgFormatter.pgFormatterPath": "/usr/local/bin/pg_format",
    "pgFormatter.spaces": null,
    "pgFormatter.tabs": null,
    "pgFormatter.typeCase": null,
    "pgFormatter.wrapComment": null,
    "pgFormatter.wrapLimit": null,
    "vscode-command-help.pre": "source .envrc",
    "typescript.tsdk": "frontend/node_modules/typescript/lib",
    "cSpell.words": [
      "ifaces"
    ],
    "launch": {
      "version": "0.2.0",
      "configurations": [
        {
          "type": "bashdb",
          "request": "launch",
          "name": "Bash-Debug (hardcoded script name)",
          "cwd": "${workspaceFolder}",
          "program": "${workspaceFolder}/bin/project",
          "args": ["pregen"],
          "terminalKind": "integrated"
        }
      ],
      "compounds": []
    }
  }
}
