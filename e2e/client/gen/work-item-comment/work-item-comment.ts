/**
 * Generated by orval v6.23.0 üç∫
 * Do not edit manually.
 * OpenAPI openapi-go-gin-postgres-sqlc
 * openapi-go-gin-postgres-sqlc
 * OpenAPI spec version: 2.0.0
 */
import type { CreateWorkItemCommentRequest } from '../model/createWorkItemCommentRequest'
import type { UpdateWorkItemCommentRequest } from '../model/updateWorkItemCommentRequest'
import type { WorkItemComment } from '../model/workItemComment'
import { customInstance } from '../../api/mutator'

// eslint-disable-next-line
type SecondParameter<T extends (...args: any) => any> = T extends (config: any, args: infer P) => any ? P : never

/**
 * @summary create work item comment.
 */
export const createWorkItemComment = (
  workItemID: number,
  createWorkItemCommentRequest: CreateWorkItemCommentRequest,
  options?: SecondParameter<typeof customInstance>,
) => {
  return customInstance<WorkItemComment>(
    {
      url: `/work-item/${workItemID}/comment/`,
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      data: createWorkItemCommentRequest,
    },
    options,
  )
}
/**
 * @summary get work item comment.
 */
export const getWorkItemComment = (
  workItemID: number,
  id: number,
  options?: SecondParameter<typeof customInstance>,
) => {
  return customInstance<WorkItemComment>({ url: `/work-item/${workItemID}/comment/${id}`, method: 'GET' }, options)
}
/**
 * @summary update work item comment.
 */
export const updateWorkItemComment = (
  workItemID: number,
  id: number,
  updateWorkItemCommentRequest: UpdateWorkItemCommentRequest,
  options?: SecondParameter<typeof customInstance>,
) => {
  return customInstance<WorkItemComment>(
    {
      url: `/work-item/${workItemID}/comment/${id}`,
      method: 'PATCH',
      headers: { 'Content-Type': 'application/json' },
      data: updateWorkItemCommentRequest,
    },
    options,
  )
}
/**
 * @summary delete .
 */
export const deleteWorkItemComment = (
  workItemID: number,
  id: number,
  options?: SecondParameter<typeof customInstance>,
) => {
  return customInstance<void>({ url: `/work-item/${workItemID}/comment/${id}`, method: 'DELETE' }, options)
}
export type CreateWorkItemCommentResult = NonNullable<Awaited<ReturnType<typeof createWorkItemComment>>>
export type GetWorkItemCommentResult = NonNullable<Awaited<ReturnType<typeof getWorkItemComment>>>
export type UpdateWorkItemCommentResult = NonNullable<Awaited<ReturnType<typeof updateWorkItemComment>>>
export type DeleteWorkItemCommentResult = NonNullable<Awaited<ReturnType<typeof deleteWorkItemComment>>>
