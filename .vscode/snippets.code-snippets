{
  "openapi-crud": {
    "scope": "yaml",
    "prefix": "openapi-crud",
    "body": [
      "  # recommended schemas for ${1/(.*)/${1:/downcase}/}:",
      "  # ${1/(.*)/${1:/pascalcase}/}CreateRequest:",
      "  #   x-postgen-struct: Rest${1/(.*)/${1:/pascalcase}/}CreateRequest",
      "  # ${1/(.*)/${1:/pascalcase}/}UpdateRequest:",
      "  #   x-postgen-struct: Rest${1/(.*)/${1:/pascalcase}/}UpdateRequest",
      "  # ${1/(.*)/${1:/pascalcase}/}:",
      "  #   x-postgen-struct: Rest${1/(.*)/${1:/pascalcase}/}",
      "  /${1/\\s+/-/g}/:",
      "    post:",
      "      summary: create ${1/(.*)/${1:/downcase}/}.",
      "      !!merge <<: *x-require-authenticated",
      "      operationId: Create${1/(.*)/${1:/pascalcase}/}",
      "      requestBody:",
      "        content:",
      "          application/json:",
      "            schema:",
      "              \\$ref: '#/components/schemas/${1/(.*)/${1:/pascalcase}/}CreateRequest'",
      "        required: true",
      "      responses:",
      "        201:",
      "          description: Success.",
      "          content:",
      "            application/json:",
      "              schema:",
      "                \\$ref: '#/components/schemas/${1/(.*)/${1:/pascalcase}/}'",
      "      tags:",
      "        - ${1/\\s+/-/g}",
      "  /${1/\\s+/-/g}/{id}/:",
      "    get:",
      "      summary: get ${1/(.*)/${1:/downcase}/}.",
      "      !!merge <<: *x-require-authenticated",
      "      operationId: Get${1/(.*)/${1:/pascalcase}/}",
      "      parameters:",
      "        - \\$ref: '#/components/parameters/Serial'",
      "      responses:",
      "        200:",
      "          description: Success.",
      "          content:",
      "            application/json:",
      "              schema:",
      "                \\$ref: '#/components/schemas/${1/(.*)/${1:/pascalcase}/}'",
      "      tags:",
      "        - ${1/\\s+/-/g}",
      "    patch:",
      "      summary: update ${1/(.*)/${1:/downcase}/}.",
      "      !!merge <<: *x-require-authenticated",
      "      operationId: Update${1/(.*)/${1:/pascalcase}/}",
      "      parameters:",
      "        - \\$ref: '#/components/parameters/Serial'",
      "      requestBody:",
      "        content:",
      "          application/json:",
      "            schema:",
      "              \\$ref: '#/components/schemas/${1/(.*)/${1:/pascalcase}/}UpdateRequest'",
      "        required: true",
      "      responses:",
      "        200:",
      "          description: Success.",
      "          content:",
      "            application/json:",
      "              schema:",
      "                \\$ref: '#/components/schemas/${1/(.*)/${1:/pascalcase}/}'",
      "      tags:",
      "        - ${1/\\s+/-/g}",
      "    delete:",
      "      summary: delete ${1/(.*)/${1:/downcase}/}.",
      "      !!merge <<: *x-require-authenticated",
      "      operationId: Delete${1/(.*)/${1:/pascalcase}/}",
      "      parameters:",
      "        - \\$ref: '#/components/parameters/Serial'",
      "      responses:",
      "        204:",
      "          description: Success.",
      "      tags:",
      "        - ${1/\\s+/-/g}",
    ]
  },
  "keywordqueries": {
    "scope": "postgres,sql",
    "prefix": "keywordqueries",
    "body": [
      "/* plpgsql-language-server:use-keyword-query-parameter */"
    ]
  },
  "comment": {
    "scope": "postgres,sql",
    "prefix": "comment",
    "body": [
      "/* $1 */"
    ]
  },
  "disablevalidation": {
    "scope": "postgres,sql",
    "prefix": "disablevalidation",
    "body": [
      "-- plpgsql-language-server:disable"
    ]
  },
}
