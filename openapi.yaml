#
# Vendor extensions
# -----------------
#
# Component schemas:
#   - `x-postgen-struct` generates (and keeps up to date) a schema from a struct,
#      which can be tagged with OpenAPI fields (via openapi-go).
#      Possible structs to generate from are listed in the postgen package.
#      To use a yet to be generated schema in a path, create an empty schema
#      with `x-postgen-struct: <pascal cased package+struct name>`
# Path operations:
#   - `x-required-scopes` is an array of required scope keys from scopes.json
#   - `x-required-role` is a required role name from roles.json
#
#
#
# Notes:
#
#
#######################################
openapi: 3.0.3
info:
  description: openapi-go-gin-postgres-sqlc
  license:
    name: Apache-2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  title: OpenAPI openapi-go-gin-postgres-sqlc
  version: 2.0.0
servers:
  - url: https://localhost:8090/v2
  - url: https://openapi.prod.localhost/api/v2
  # for tests validation middleware to work on random port.
  - url: /v2
  - url: /
tags:
  - description: Operations about user
    name: user
paths:
  /auth/myprovider/callback:
    get:
      operationId: MyProviderCallback
      responses:
        "200":
          description: callback for MyProvider auth server
  /auth/myprovider/login:
    get:
      operationId: MyProviderLogin
      responses:
        "302":
          description: redirect to MyProvider auth server login
  /events:
    get:
      operationId: Events
      responses:
        "200":
          description: events
          content:
            text/event-stream:
              schema:
                type: string
  /ping:
    get:
      description: ""
      summary: Ping pongs
      operationId: Ping
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
                example: pong
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /openapi.yaml:
    get:
      summary: Returns this very OpenAPI spec.
      operationId: OpenapiYamlGet
      responses:
        "200":
          description: OpenAPI YAML file.
          content:
            application/x-yaml:
              schema:
                type: string
                format: binary
  /admin/ping:
    get:
      security:
        - bearer_auth: []
        - api_key: []
      summary: Ping pongs
      operationId: AdminPing
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
                example: pong
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      tags:
        - admin
      x-required-scopes:
        - test-scope
      x-required-role: admin
  /user/me:
    get:
      security:
        - bearer_auth: []
        - api_key: []
      summary: returns the logged in user
      operationId: GetCurrentUser
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: ok
      tags:
        - user
  /user/{id}/authorization:
    patch:
      security:
        - bearer_auth: []
        - api_key: []
      summary: updates user role and scopes by id
      operationId: UpdateUserAuthorization
      parameters:
        - $ref: '#/components/parameters/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserAuthRequest'
        description: Updated user object
        required: true
      responses:
        "204":
          description: User auth updated successfully.
      tags:
        - user
      x-required-role: user
  /user/{id}:
    delete:
      security:
        - bearer_auth: []
        - api_key: []
      summary: deletes the user by id
      operationId: DeleteUser
      parameters:
        - $ref: '#/components/parameters/UUID'
      responses:
        "404":
          description: User not found
      tags:
        - user
      x-required-scopes:
        - test-scope
        - users:write
      x-required-role: admin
    patch:
      security:
        - bearer_auth: []
        - api_key: []
      summary: updates the user by id
      operationId: UpdateUser
      parameters:
        - $ref: '#/components/parameters/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
        description: Updated user object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: ok
      tags:
        - user
      x-required-role: user
  /project/{projectName}/initialize:
    post:
      security:
        - bearer_auth: []
        - api_key: []
      summary: creates initial data (teams, work item types, tags...) for a new project
      operationId: InitializeProject
      parameters:
        - $ref: '#/components/parameters/ProjectName'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitializeProjectRequest'
        required: true
      responses:
        "204":
          description: Success.
      tags:
        - project
      x-required-role: admin
  /project/{projectName}/:
    get:
      security:
        - bearer_auth: []
        - api_key: []
      summary: returns board data for a project
      operationId: GetProject
      parameters:
        - $ref: '#/components/parameters/ProjectName'
      responses:
        "200":
          description: Project.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DbProject'
      tags:
        - project
  /project/{projectName}/config:
    get:
      security:
        - bearer_auth: []
        - api_key: []
      summary: returns the project configuration
      operationId: GetProjectConfig
      parameters:
        - $ref: '#/components/parameters/ProjectName'
      responses:
        "200":
          description: Project config.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectConfig'
      x-required-role: admin
      tags:
        - project
    put:
      security:
        - bearer_auth: []
        - api_key: []
      summary: updates the project configuration
      operationId: UpdateProjectConfig
      parameters:
        - $ref: '#/components/parameters/ProjectName'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectConfig'
      responses:
        "204":
          description: Config updated successfully.
      x-required-role: admin
      tags:
        - project
  /project/{projectName}/board:
    get:
      security:
        - bearer_auth: []
        - api_key: []
      summary: returns board data for a project
      operationId: GetProjectBoard
      parameters:
        - $ref: '#/components/parameters/ProjectName'
      responses:
        "200":
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestProjectBoardResponse'
      tags:
        - project
  /project/{projectName}/workitems:
    get:
      security:
        - bearer_auth: []
        - api_key: []
      summary: returns workitems for a project
      operationId: GetProjectWorkitems
      parameters:
        - $ref: '#/components/parameters/ProjectName'
        - in: query
          schema:
            type: boolean
          name: open
        - in: query
          schema:
            type: boolean
          name: deleted
      responses:
        "200":
          description: Success.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/RestDemoWorkItemsResponse'
      tags:
        - project
  /project/{projectName}/tag/:
    post:
      security:
        - bearer_auth: []
        - api_key: []
      summary: create workitem tag
      operationId: CreateWorkitemTag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestWorkItemTagCreateRequest'
        required: true
      parameters:
        - $ref: '#/components/parameters/ProjectName'
      responses:
        "201":
          description: Success.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DbWorkItemTag'
      tags:
        - project
  /workitem/:
    post:
      security:
        - bearer_auth: []
        - api_key: []
      summary: create workitem
      operationId: CreateWorkitem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestDemoWorkItemCreateRequest'
        required: true
      responses:
        "201":
          description: Success.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DbWorkItem'
      tags:
        - workitem
  /workitem/{id}/:
    get:
      security:
        - bearer_auth: []
        - api_key: []
      summary: get workitem
      operationId: GetWorkitem
      parameters:
        - $ref: '#/components/parameters/Serial'
      responses:
        "200":
          description: Success.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DbWorkItem'
      tags:
        - workitem
    patch:
      security:
        - bearer_auth: []
        - api_key: []
      summary: update workitem
      operationId: UpdateWorkitem
      parameters:
        - $ref: '#/components/parameters/Serial'
      responses:
        "200":
          description: Success.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DbWorkItem'
      tags:
        - workitem
    delete:
      security:
        - bearer_auth: []
        - api_key: []
      summary: delete workitem
      operationId: DeleteWorkitem
      parameters:
        - $ref: '#/components/parameters/Serial'
      responses:
        "204":
          description: Success.
      tags:
        - workitem
  /workitem/{id}/comments/:
    post:
      security:
        - bearer_auth: []
        - api_key: []
      summary: create workitem comment
      operationId: CreateWorkitemComment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestWorkItemCommentCreateRequest'
        required: true
      parameters:
        - $ref: '#/components/parameters/Serial'
      responses:
        "200":
          description: Success.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DbWorkItemComment'
      tags:
        - workitem
components:
  parameters:
    ProjectName:
      description: Project name
      explode: false
      in: path
      name: projectName
      required: true
      schema:
        $ref: '#/components/schemas/Project'
      example: demo
      style: simple
    UUID:
      description: UUID identifier
      explode: false
      in: path
      name: id
      required: true
      schema:
        type: string
        pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
      example: 123e4567-e89b-12d3-a456-426614174000
      style: simple
    Serial:
      description: integer identifier
      explode: false
      in: path
      name: id
      required: true
      schema:
        type: integer
      example: 41131
      style: simple
  schemas:
    DbActivity: # Generated from internal structs. DO NOT EDIT.
      properties:
        activityID:
          type: integer
        description:
          type: string
        isProductive:
          type: boolean
        name:
          type: string
        projectID:
          type: integer
      required:
        - activityID
        - projectID
        - name
        - description
        - isProductive
      type: object
      x-postgen-struct: DbActivity
    DbKanbanStep: # Generated from internal structs. DO NOT EDIT.
      properties:
        color:
          type: string
        description:
          type: string
        kanbanStepID:
          type: integer
        name:
          type: string
        projectID:
          type: integer
        stepOrder:
          type: integer
        timeTrackable:
          type: boolean
      required:
        - kanbanStepID
        - projectID
        - stepOrder
        - name
        - description
        - color
        - timeTrackable
      type: object
      x-postgen-struct: DbKanbanStep
    DbProject: # Generated from internal structs. DO NOT EDIT.
      properties:
        boardConfig:
          $ref: '#/components/schemas/ProjectConfig'
        createdAt:
          format: date-time
          type: string
        description:
          type: string
        name:
          $ref: '#/components/schemas/Project'
        projectID:
          type: integer
        updatedAt:
          format: date-time
          type: string
      required:
        - projectID
        - name
        - description
        - boardConfig
        - createdAt
        - updatedAt
      type: object
      x-postgen-struct: DbProject
    DbTeam: # Generated from internal structs. DO NOT EDIT.
      properties:
        createdAt:
          format: date-time
          type: string
        description:
          type: string
        name:
          type: string
        projectID:
          type: integer
        teamID:
          type: integer
        updatedAt:
          format: date-time
          type: string
      required:
        - teamID
        - projectID
        - name
        - description
        - createdAt
        - updatedAt
      type: object
      x-postgen-struct: DbTeam
    DbWorkItemTag: # Generated from internal structs. DO NOT EDIT.
      properties:
        color:
          type: string
        description:
          type: string
        name:
          type: string
        projectID:
          type: integer
        workItemTagID:
          type: integer
      required:
        - workItemTagID
        - projectID
        - name
        - description
        - color
      type: object
      x-postgen-struct: DbWorkItemTag
    DbWorkItemType: # Generated from internal structs. DO NOT EDIT.
      properties:
        color:
          type: string
        description:
          type: string
        name:
          type: string
        projectID:
          type: integer
        workItemTypeID:
          type: integer
      required:
        - workItemTypeID
        - projectID
        - name
        - description
        - color
      type: object
      x-postgen-struct: DbWorkItemType
    DbDemoWorkItem: # Generated from internal structs. DO NOT EDIT.
      properties:
        lastMessageAt:
          format: date-time
          type: string
        line:
          type: string
        ref:
          pattern: ^[0-9]{8}$
          type: string
        reopened:
          type: boolean
        workItemID:
          type: integer
      required:
        - workItemID
        - ref
        - line
        - lastMessageAt
        - reopened
      type: object
      x-postgen-struct: DbDemoWorkItem
    DbUserAPIKey: # Generated from internal structs. DO NOT EDIT.
      properties:
        apiKey:
          type: string
        expiresOn:
          format: date-time
          type: string
        userID:
          $ref: '#/components/schemas/UuidUUID'
      required:
        - apiKey
        - expiresOn
        - userID
      type: object
      x-postgen-struct: DbUserAPIKey
    DbUser: # Generated from internal structs. DO NOT EDIT.
      properties:
        createdAt:
          format: date-time
          type: string
        deletedAt:
          format: date-time
          nullable: true
          type: string
        email:
          type: string
        firstName:
          nullable: true
          type: string
        fullName:
          nullable: true
          type: string
        hasGlobalNotifications:
          type: boolean
        hasPersonalNotifications:
          type: boolean
        lastName:
          nullable: true
          type: string
        scopes:
          $ref: '#/components/schemas/Scopes'
        userID:
          $ref: '#/components/schemas/UuidUUID'
        username:
          type: string
      required:
        - userID
        - username
        - email
        - firstName
        - lastName
        - fullName
        - scopes
        - hasPersonalNotifications
        - hasGlobalNotifications
        - createdAt
        - deletedAt
      type: object
      x-postgen-struct: DbUser
    DbTimeEntry: # Generated from internal structs. DO NOT EDIT.
      properties:
        activityID:
          type: integer
        comment:
          type: string
        durationMinutes:
          nullable: true
          type: integer
        start:
          format: date-time
          type: string
        teamID:
          nullable: true
          type: integer
        timeEntryID:
          type: integer
        userID:
          $ref: '#/components/schemas/UuidUUID'
        workItemID:
          nullable: true
          type: integer
      required:
        - timeEntryID
        - workItemID
        - activityID
        - teamID
        - userID
        - comment
        - start
        - durationMinutes
      type: object
      x-postgen-struct: DbTimeEntry
    DbWorkItemComment: # Generated from internal structs. DO NOT EDIT.
      properties:
        createdAt:
          format: date-time
          type: string
        message:
          type: string
        updatedAt:
          format: date-time
          type: string
        userID:
          $ref: '#/components/schemas/UuidUUID'
        workItemCommentID:
          type: integer
        workItemID:
          type: integer
      required:
        - workItemCommentID
        - workItemID
        - userID
        - message
        - createdAt
        - updatedAt
      type: object
      x-postgen-struct: DbWorkItemComment
    # Not generated from go code in repo models since we can't have repos/models imported by db.
    # It is not solved by changing repo models pkg location. repo models will always import db so
    # it can't be imported by db.
    ProjectConfig:
      properties:
        fields:
          items:
            $ref: '#/components/schemas/ProjectConfigField'
          nullable: false
          type: array
        header:
          items:
            type: string
          nullable: false
          type: array
      required:
        - header
        - fields
      type: object
    ProjectConfigField:
      properties:
        isEditable:
          type: boolean
        isVisible:
          type: boolean
        name:
          type: string
        path:
          type: string
        showCollapsed:
          type: boolean
      required:
        - isEditable
        - showCollapsed
        - isVisible
        - path
        - name
      type: object
    RestDemoWorkItemsResponse: # Generated from internal structs. DO NOT EDIT.
      properties:
        closed:
          format: date-time
          nullable: true
          type: string
        createdAt:
          format: date-time
          type: string
        deletedAt:
          format: date-time
          nullable: true
          type: string
        demoWorkItem:
          $ref: '#/components/schemas/DbDemoWorkItem'
        description:
          type: string
        kanbanStepID:
          type: integer
        members:
          items:
            $ref: '#/components/schemas/DbUser'
          nullable: true
          type: array
        metadata:
          items:
            minimum: 0
            type: integer
          nullable: true
          type: array
        targetDate:
          format: date-time
          type: string
        teamID:
          type: integer
        timeEntries:
          items:
            $ref: '#/components/schemas/DbTimeEntry'
          nullable: true
          type: array
        title:
          type: string
        updatedAt:
          format: date-time
          type: string
        workItemComments:
          items:
            $ref: '#/components/schemas/DbWorkItemComment'
          nullable: true
          type: array
        workItemID:
          type: integer
        workItemTags:
          items:
            $ref: '#/components/schemas/DbWorkItemTag'
          nullable: true
          type: array
        workItemType:
          $ref: '#/components/schemas/DbWorkItemType'
        workItemTypeID:
          type: integer
      required:
        - workItemID
        - title
        - description
        - workItemTypeID
        - metadata
        - teamID
        - kanbanStepID
        - closed
        - targetDate
        - createdAt
        - updatedAt
        - deletedAt
        - demoWorkItem
      type: object
      x-postgen-struct: RestDemoWorkItemsResponse
    InitializeProjectRequest: # Generated from internal structs. DO NOT EDIT.
      properties:
        activities:
          items:
            $ref: '#/components/schemas/DbActivityCreateParams'
          nullable: true
          type: array
        projectID:
          type: integer
        teams:
          items:
            $ref: '#/components/schemas/DbTeamCreateParams'
          nullable: true
          type: array
        workItemTags:
          items:
            $ref: '#/components/schemas/DbWorkItemTagCreateParams'
          nullable: true
          type: array
      type: object
      x-postgen-struct: RestProjectBoardCreateRequest
    RestProjectBoardResponse: # Generated from internal structs. DO NOT EDIT.
      properties:
        activities:
          items:
            $ref: '#/components/schemas/DbActivity'
          nullable: true
          type: array
        boardConfig:
          $ref: '#/components/schemas/ProjectConfig'
        createdAt:
          format: date-time
          type: string
        description:
          type: string
        kanbanSteps:
          items:
            $ref: '#/components/schemas/DbKanbanStep'
          nullable: true
          type: array
        name:
          $ref: '#/components/schemas/Project'
        projectID:
          type: integer
        teams:
          items:
            $ref: '#/components/schemas/DbTeam'
          nullable: true
          type: array
        updatedAt:
          format: date-time
          type: string
        workItemTags:
          items:
            $ref: '#/components/schemas/DbWorkItemTag'
          nullable: true
          type: array
        workItemTypes:
          items:
            $ref: '#/components/schemas/DbWorkItemType'
          nullable: true
          type: array
      required:
        - projectID
        - name
        - description
        - boardConfig
        - createdAt
        - updatedAt
        - activities
        - kanbanSteps
        - teams
        - workItemTags
        - workItemTypes
      type: object
      x-postgen-struct: RestProjectBoardResponse
    UserResponse: # Generated from internal structs. DO NOT EDIT.
      properties:
        apiKey:
          $ref: '#/components/schemas/DbUserAPIKey'
        createdAt:
          format: date-time
          type: string
        deletedAt:
          format: date-time
          nullable: true
          type: string
        email:
          type: string
        firstName:
          nullable: true
          type: string
        fullName:
          nullable: true
          type: string
        hasGlobalNotifications:
          type: boolean
        hasPersonalNotifications:
          type: boolean
        lastName:
          nullable: true
          type: string
        projects:
          items:
            $ref: '#/components/schemas/DbProject'
          nullable: true
          type: array
        role:
          $ref: '#/components/schemas/Role'
        scopes:
          $ref: '#/components/schemas/Scopes'
        teams:
          items:
            $ref: '#/components/schemas/DbTeam'
          nullable: true
          type: array
        userID:
          $ref: '#/components/schemas/UuidUUID'
        username:
          type: string
      required:
        - userID
        - username
        - email
        - firstName
        - lastName
        - fullName
        - scopes
        - hasPersonalNotifications
        - hasGlobalNotifications
        - createdAt
        - deletedAt
        - role
      type: object
      x-postgen-struct: RestUserResponse
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      required:
        - messages
      properties:
        detail:
          title: Detail
          description: Additional details for validation errors
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
        messages:
          title: Messages
          description: Descriptive error messages to show in a callout
          type: array
          items:
            type: string
    Topics:
      description: string identifiers for SSE event listeners.
      type: string
      enum:
        # will not alert directly, just show badge when a new notification is sent.
        # - UserNotifications
        # - ManagerNotifications
        # - AdminNotifications
        # will use personalSubs channel per userID since it depends on
        # members per specific workitem
        # - WorkItemMoved
        # - WorkItemClosed
        - GlobalAlerts
    # TODO bookstack style ABAC
    Scope: # Generated from scopes.json keys. DO NOT EDIT.
      type: string
      enum:
        - test-scope
        - users:read
        - users:write
        - scopes:write
        - team-settings:write
        - project-settings:write
        - work-item:review
      x-generated: '-'
    Scopes: # workaround for openapi-go gen
      type: array
      items:
        $ref: '#/components/schemas/Scope'
    Role: # Generated from roles.json keys. DO NOT EDIT.
      type: string
      enum:
        - guest
        - user
        - advancedUser
        - manager
        - admin
        - superAdmin
      x-generated: '-'
    WorkItemRole: # Generated from database enum 'work_item_role'. DO NOT EDIT.
      title: WorkItem role
      type: string
      x-generated: '-'
      enum:
        - preparer
        - reviewer
      description: represents a database 'work_item_role'
    UpdateUserRequest:
      description: represents User data to update
      example:
        firstName: Jane
        lastName: Doe
      properties:
        firstName:
          description: originally from auth server but updatable
          type: string
          pattern: ^[\p{L} '-]+$
        lastName:
          description: originally from auth server but updatable
          type: string
          pattern: ^[\p{L} '-]+$
        username:
          description: originally from auth server but updatable
          type: string
          pattern: ^[\.a-zA-Z0-9_-]+$
        email:
          description: originally from auth server but updatable
          type: string
          # format: email # bad oapi-codegen type
          pattern: ^[a-zA-Z0-9._%+-]+@(mydomain\.com|anotherdomain\.com)$
      type: object
    UpdateUserAuthRequest:
      description: represents User authorization data to update
      example:
        role: manager
        scopes:
          - test-scope
      properties:
        role:
          $ref: '#/components/schemas/Role'
        scopes:
          $ref: '#/components/schemas/Scopes'
      type: object
    # à la FastAPI
    ValidationError:
      title: ValidationError
      required:
        - loc
        - msg
        - detail
        - type
      type: object
      properties:
        loc:
          title: Location
          description: location in body path, if any
          type: array
          items:
            type: string
        msg:
          title: Message
          description: should always be shown to the user
          type: string
        type:
          $ref: '#/components/schemas/HttpErrorType'
        detail:
          description: verbose details of the error
          title: Error details
          type: object
          required:
            - schema
            - value
          properties:
            schema:
              type: object
            value:
              type: string
        ctx:
          title: Contextual information
          type: object
    HttpErrorType:
      type: string
      enum:
        - response_validation
        - request_validation
        - unknown
    UuidUUID: # Generated from internal structs. DO NOT EDIT.
      type: string
    PgtypeJSONB: # Generated from internal structs. DO NOT EDIT.
      type: object
    DbWorkItem: # Generated from internal structs. DO NOT EDIT.
      properties:
        closed:
          format: date-time
          nullable: true
          type: string
        createdAt:
          format: date-time
          type: string
        deletedAt:
          format: date-time
          nullable: true
          type: string
        description:
          type: string
        kanbanStepID:
          type: integer
        metadata:
          items:
            minimum: 0
            type: integer
          nullable: true
          type: array
        targetDate:
          format: date-time
          type: string
        teamID:
          type: integer
        title:
          type: string
        updatedAt:
          format: date-time
          type: string
        workItemID:
          type: integer
        workItemTypeID:
          type: integer
      required:
        - workItemID
        - title
        - description
        - workItemTypeID
        - metadata
        - teamID
        - kanbanStepID
        - closed
        - targetDate
        - createdAt
        - updatedAt
        - deletedAt
      type: object
      x-postgen-struct: DbWorkItem
    RestWorkItemTagCreateRequest: # Generated from internal structs. DO NOT EDIT.
      properties:
        color:
          type: string
        description:
          type: string
        name:
          type: string
        projectID:
          type: integer
      required:
        - projectID
        - name
        - description
        - color
      type: object
      x-postgen-struct: RestWorkItemTagCreateRequest
    RestDemoWorkItemCreateRequest: # Generated from internal structs. DO NOT EDIT.
      properties:
        base:
          $ref: '#/components/schemas/DbWorkItemCreateParams'
        demoProject:
          $ref: '#/components/schemas/DbDemoWorkItemCreateParams'
        members:
          items:
            $ref: '#/components/schemas/ServicesMember'
          nullable: true
          type: array
        tagIDs:
          items:
            type: integer
          nullable: true
          type: array
      required:
        - demoProject
        - base
        - tagIDs
        - members
      type: object
      x-postgen-struct: RestDemoWorkItemCreateRequest
    RestWorkItemCommentCreateRequest: # Generated from internal structs. DO NOT EDIT.
      properties:
        message:
          type: string
        userID:
          $ref: '#/components/schemas/UuidUUID'
        workItemID:
          type: integer
      required:
        - workItemID
        - userID
        - message
      type: object
      x-postgen-struct: RestWorkItemCommentCreateRequest
    Project: # Generated from projects table. DO NOT EDIT.
      enum:
        - demo
        - demo_two
      type: string
      x-generated: '-'
    DbActivityCreateParams: # Generated from internal structs. DO NOT EDIT.
      properties:
        description:
          type: string
        isProductive:
          type: boolean
        name:
          type: string
        projectID:
          type: integer
      required:
        - projectID
        - name
        - description
        - isProductive
      type: object
    DbKanbanStepCreateParams: # Generated from internal structs. DO NOT EDIT.
      properties:
        color:
          type: string
        description:
          type: string
        name:
          type: string
        projectID:
          type: integer
        stepOrder:
          nullable: true
          type: integer
        timeTrackable:
          type: boolean
      type: object
    DbTeamCreateParams: # Generated from internal structs. DO NOT EDIT.
      properties:
        description:
          type: string
        name:
          type: string
        projectID:
          type: integer
      required:
        - projectID
        - name
        - description
      type: object
    DbWorkItemTagCreateParams: # Generated from internal structs. DO NOT EDIT.
      properties:
        color:
          type: string
        description:
          type: string
        name:
          type: string
        projectID:
          type: integer
      required:
        - projectID
        - name
        - description
        - color
      type: object
    DbWorkItemTypeCreateParams: # Generated from internal structs. DO NOT EDIT.
      properties:
        color:
          type: string
        description:
          type: string
        name:
          type: string
        projectID:
          type: integer
      type: object
    DbWorkItemRole: # Generated from internal structs. DO NOT EDIT.
      type: string
    DbWorkItem_AssignedUser: # Generated from internal structs. DO NOT EDIT.
      properties:
        role:
          $ref: '#/components/schemas/WorkItemRole'
        user:
          $ref: '#/components/schemas/DbUser'
      required:
        - role
      type: object
    NotificationType: # Generated from database enum 'notification_type'. DO NOT EDIT.
      description: represents a database 'notification_type'
      type: string
      x-generated: '-'
      enum:
        - personal
        - global
    DemoProjectKanbanSteps: # Generated from kanban_steps table. DO NOT EDIT.
      type: string
      enum:
        - Disabled
        - Received
        - Under review
        - Work in progress
      x-generated: '-'
    DemoProject2KanbanSteps: # Generated from kanban_steps table. DO NOT EDIT.
      type: string
      enum:
        - Received
      x-generated: '-'
    Demo2WorkItemTypes: # Generated from work_item_types table. DO NOT EDIT.
      type: string
      enum:
        - Type 1
        - Type 2
        - Another type
      x-generated: '-'
    DemoKanbanSteps: # Generated from kanban_steps table. DO NOT EDIT.
      type: string
      enum:
        - Disabled
        - Received
        - Under review
        - Work in progress
      x-generated: '-'
    DemoTwoKanbanSteps: # Generated from kanban_steps table. DO NOT EDIT.
      type: string
      enum:
        - Received
      x-generated: '-'
    DemoTwoWorkItemTypes: # Generated from work_item_types table. DO NOT EDIT.
      type: string
      enum:
        - Type 1
        - Type 2
        - Another type
      x-generated: '-'
    DemoWorkItemTypes: # Generated from work_item_types table. DO NOT EDIT.
      type: string
      enum:
        - Type 1
      x-generated: '-'
    DbDemoWorkItemCreateParams: # Generated from internal structs. DO NOT EDIT.
      properties:
        lastMessageAt:
          format: date-time
          type: string
        line:
          type: string
        ref:
          pattern: ^[0-9]{8}$
          type: string
        reopened:
          type: boolean
        workItemID:
          type: integer
      required:
        - workItemID
        - ref
        - line
        - lastMessageAt
        - reopened
      type: object
    DbWorkItemCreateParams: # Generated from internal structs. DO NOT EDIT.
      properties:
        closed:
          format: date-time
          nullable: true
          type: string
        description:
          type: string
        kanbanStepID:
          type: integer
        metadata:
          items:
            minimum: 0
            type: integer
          nullable: true
          type: array
        targetDate:
          format: date-time
          type: string
        teamID:
          type: integer
        title:
          type: string
        workItemTypeID:
          type: integer
      required:
        - title
        - description
        - workItemTypeID
        - metadata
        - teamID
        - kanbanStepID
        - closed
        - targetDate
      type: object
    ModelsWorkItemRole: # Generated from internal structs. DO NOT EDIT.
      type: string
    ServicesMember: # Generated from internal structs. DO NOT EDIT.
      properties:
        role:
          $ref: '#/components/schemas/ModelsWorkItemRole'
        userID:
          $ref: '#/components/schemas/UuidUUID'
      required:
        - userID
        - role
      type: object
  examples:
    User:
      value:
        username: username
        email: email@email.com
        password: password
  securitySchemes:
    api_key:
      in: header
      name: x-api-key
      type: apiKey
    bearer_auth:
      type: http
      scheme: bearer
      bearerFormat: JWT
