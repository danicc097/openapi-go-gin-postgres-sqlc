#
# Vendor extensions
# -----------------
#
# Component schemas:
#   - `x-postgen-struct` generates (and keeps up to date) a schema from a struct,
#      which can be tagged with OpenAPI fields (via openapi-go).
#      Possible structs to generate from are listed in internal/codegen/structs.gen.go
#      indexed by x-postgen-struct.
#      To use a yet to be generated schema in a path, create an empty schema
#      with `x-postgen-struct: {Rest|Db}<struct name>`
#      Packages to generate structs from are added adhoc.
# Path operations:
#   - `x-required-scopes` defines required scopes for a request.
#   - `x-required-role` defines the minimum required role for a request.
#
#
#
# Notes:
#
#
#######################################
x-uuidParameter: &x-uuidParameter
  description: UUID identifier
  explode: false
  in: path
  name: id
  required: true
  schema:
    type: string
    pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
    # https://github.com/deepmap/oapi-codegen/issues/760
    x-go-type: uuid.UUID
    x-go-type-import:
      name: uuid
      path: github.com/google/uuid
  example: 123e4567-e89b-12d3-a456-426614174000
  style: simple
x-serialIDParameter: &x-serialIDParameter
  description: integer identifier
  explode: false
  in: path
  name: id
  required: true
  schema:
    type: integer
  example: 41131
  style: simple
x-paginationLimitParameter: &x-paginationLimitParameter
  name: limit
  required: true
  schema:
    type: integer
  in: query
x-paginationDirectionParameter: &x-paginationDirectionParameter
  name: direction
  required: true
  schema:
    $ref: '#/components/schemas/Direction'
  in: query
x-paginationCursorParameter: &x-paginationCursorParameter
  name: cursor
  required: true
  schema:
    type: string
  in: query
x-require-authenticated: &x-require-authenticated
  security:
    - bearer_auth: []
    - api_key: []
# 403 and 401 will have precedence over 4XX, else we
# get response validation failure (500) on a 403 and 401
# since we don't use HTTPError schema
x-error-response: &x-error-response
  403:
    description: Unauthorized
  401:
    description: Unauthenticated
  4XX:
    description: Error response
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/HTTPError'
#
#
#######################################
#
#
openapi: 3.0.3
info:
  description: openapi-go-gin-postgres-sqlc
  license:
    name: Apache-2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  title: OpenAPI openapi-go-gin-postgres-sqlc
  version: 2.0.0
servers:
  # description must match current APP_ENV for Swagger UI docs
  - url: https://localhost:8090/v2
    description: dev
  - url: https://myapp.e2e.localhost/api/v2
    description: e2e
  - url: https://myapp.prod.localhost/api/v2
    description: prod
  # for tests validation middleware to work on random port.
  - url: /v2
  - url: /
tags:
  - description: Operations about user
    name: user
paths:
  /auth/myprovider/callback:
    get:
      operationId: MyProviderCallback
      responses:
        302:
          description: Callback for MyProvider auth server
          headers:
            Location:
              description: The URL to which the client should be redirected based on auth:redirect-uri cookie.
              schema:
                type: string
      tags:
        - oidc
  /auth/myprovider/login:
    get:
      operationId: MyProviderLogin
      parameters:
        - name: auth-redirect-uri
          required: true
          schema:
            type: string
          in: query
      responses:
        302:
          description: Redirect to MyProvider auth server login
          headers:
            Location:
              description: MyProvider login screen.
              schema:
                type: string
      tags:
        - oidc
  /events:
    get:
      operationId: Events
      parameters:
        - name: projectName
          required: true
          schema:
            $ref: '#/components/schemas/Project'
          in: query
      responses:
        200:
          description: events
          content:
            text/event-stream:
              schema:
                type: string
      tags:
        - events
  /notifications/user/page:
    get:
      description: ""
      summary: Get paginated user notifications
      operationId: GetPaginatedNotifications
      parameters:
        - *x-paginationLimitParameter
        - *x-paginationDirectionParameter
        - *x-paginationCursorParameter
      tags:
        - notifications
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationsResponse'
        !!merge <<: *x-error-response
      !!merge <<: *x-require-authenticated
  /ping:
    get:
      description: ""
      summary: Ping pongs
      operationId: Ping
      responses:
        200:
          description: OK
          content:
            text/plain:
              schema:
                type: string
                example: pong
        !!merge <<: *x-error-response
  /openapi.yaml:
    get:
      summary: Returns this very OpenAPI spec.
      operationId: OpenapiYamlGet
      responses:
        200:
          description: OpenAPI YAML file.
          content:
            application/x-yaml:
              schema:
                type: string
                format: binary
  /admin/ping:
    get:
      summary: Ping pongs
      !!merge <<: *x-require-authenticated
      operationId: AdminPing
      responses:
        200:
          description: OK
          content:
            text/plain:
              schema:
                type: string
                example: pong
        !!merge <<: *x-error-response
      tags:
        - admin
      x-required-role: admin
  /project/{projectName}/team/:
    post:
      summary: create team.
      !!merge <<: *x-require-authenticated
      operationId: CreateTeam
      parameters:
        - $ref: '#/components/parameters/ProjectName'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTeamRequest'
        required: true
      responses:
        201:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        !!merge <<: *x-error-response
      tags:
        - team
  /team/{id}:
    get:
      summary: get team.
      !!merge <<: *x-require-authenticated
      operationId: GetTeam
      parameters:
        - !!merge <<: *x-serialIDParameter
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        !!merge <<: *x-error-response
      tags:
        - team
    patch:
      summary: update team.
      !!merge <<: *x-require-authenticated
      operationId: UpdateTeam
      parameters:
        - !!merge <<: *x-serialIDParameter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTeamRequest'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        !!merge <<: *x-error-response
      tags:
        - team
    delete:
      summary: delete team.
      !!merge <<: *x-require-authenticated
      operationId: DeleteTeam
      parameters:
        - !!merge <<: *x-serialIDParameter
      responses:
        204:
          description: Success.
        !!merge <<: *x-error-response
      tags:
        - team
  /project/{projectName}/workItemTag/:
    post:
      summary: create workitemtag.
      !!merge <<: *x-require-authenticated
      operationId: CreateWorkItemTag
      parameters:
        - $ref: '#/components/parameters/ProjectName'
      x-required-scopes:
        - work-item-tag:create
      x-required-role: manager
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkItemTagRequest'
        required: true
      responses:
        201:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItemTag'
        !!merge <<: *x-error-response
      tags:
        - workItemTag
  # Make sure to include new scopes in scopes.json
  # recommended schemas for activity:
  # CreateActivityRequest:
  #   x-postgen-struct: RestCreateActivityRequest
  # UpdateActivityRequest:
  #   x-postgen-struct: RestUpdateActivityRequest
  # Activity:
  #   x-postgen-struct: RestActivity
  /project/{projectName}/activity/:
    post:
      summary: create activity.
      !!merge <<: *x-require-authenticated
      operationId: CreateActivity
      parameters:
        - $ref: '#/components/parameters/ProjectName'
      x-required-scopes:
        - activity:create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateActivityRequest'
        required: true
      responses:
        201:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
        !!merge <<: *x-error-response
      tags:
        - activity
  /activity/{id}:
    get:
      summary: get activity.
      !!merge <<: *x-require-authenticated
      operationId: GetActivity
      parameters:
        - !!merge <<: *x-serialIDParameter
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
        !!merge <<: *x-error-response
      tags:
        - activity
    patch:
      summary: update activity.
      !!merge <<: *x-require-authenticated
      operationId: UpdateActivity
      x-required-scopes:
        - activity:edit
      parameters:
        - !!merge <<: *x-serialIDParameter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateActivityRequest'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
        !!merge <<: *x-error-response
      tags:
        - activity
    delete:
      summary: delete activity.
      !!merge <<: *x-require-authenticated
      operationId: DeleteActivity
      x-required-scopes:
        - activity:delete
      parameters:
        - !!merge <<: *x-serialIDParameter
      responses:
        204:
          description: Success.
        !!merge <<: *x-error-response
      tags:
        - activity
  /workItemTag/{id}:
    get:
      summary: get workitemtag.
      !!merge <<: *x-require-authenticated
      operationId: GetWorkItemTag
      parameters:
        - !!merge <<: *x-serialIDParameter
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItemTag'
        !!merge <<: *x-error-response
      tags:
        - workItemTag
    patch:
      summary: update workitemtag.
      !!merge <<: *x-require-authenticated
      operationId: UpdateWorkItemTag
      parameters:
        - !!merge <<: *x-serialIDParameter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWorkItemTagRequest'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItemTag'
        !!merge <<: *x-error-response
      tags:
        - workItemTag
    delete:
      summary: delete workitemtag.
      !!merge <<: *x-require-authenticated
      operationId: DeleteWorkItemTag
      parameters:
        - !!merge <<: *x-serialIDParameter
      responses:
        204:
          description: Success.
        !!merge <<: *x-error-response
      tags:
        - workItemTag
  /project/{projectName}/workItemType/:
    post:
      summary: create workitemtype.
      !!merge <<: *x-require-authenticated
      operationId: CreateWorkItemType
      parameters:
        - $ref: '#/components/parameters/ProjectName'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkItemTypeRequest'
        required: true
      responses:
        201:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItemType'
        !!merge <<: *x-error-response
      tags:
        - workItemType
  /workItemType/{id}:
    get:
      summary: get workitemtype.
      !!merge <<: *x-require-authenticated
      operationId: GetWorkItemType
      parameters:
        - !!merge <<: *x-serialIDParameter
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItemType'
        !!merge <<: *x-error-response
      tags:
        - workItemType
    patch:
      summary: update workitemtype.
      !!merge <<: *x-require-authenticated
      operationId: UpdateWorkItemType
      parameters:
        - !!merge <<: *x-serialIDParameter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWorkItemTypeRequest'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItemType'
        !!merge <<: *x-error-response
      tags:
        - workItemType
    delete:
      summary: delete workitemtype.
      !!merge <<: *x-require-authenticated
      operationId: DeleteWorkItemType
      parameters:
        - !!merge <<: *x-serialIDParameter
      responses:
        204:
          description: Success.
        !!merge <<: *x-error-response
      tags:
        - workItemType
  /user/page:
    get:
      description: ""
      summary: Get paginated users
      operationId: GetPaginatedUsers
      parameters:
        - *x-paginationLimitParameter
        - *x-paginationDirectionParameter
        - *x-paginationCursorParameter
      tags:
        - user
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUsersResponse'
        !!merge <<: *x-error-response
      !!merge <<: *x-require-authenticated
  /user/me:
    get:
      summary: returns the logged in user
      !!merge <<: *x-require-authenticated
      operationId: GetCurrentUser
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ok
      tags:
        - user
  /user/{id}/authorization:
    patch:
      summary: updates user role and scopes by id
      !!merge <<: *x-require-authenticated
      operationId: UpdateUserAuthorization
      parameters:
        - *x-uuidParameter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserAuthRequest'
        description: Updated user object
        required: true
      responses:
        204:
          description: User auth updated successfully.
      x-required-scopes:
        - scopes:write
      x-required-role: admin
      tags:
        - user
  /user/{id}:
    delete:
      summary: deletes the user by id
      !!merge <<: *x-require-authenticated
      operationId: DeleteUser
      parameters:
        - *x-uuidParameter
      responses:
        204:
          description: User deleted successfully
        !!merge <<: *x-error-response
      tags:
        - user
      x-required-scopes:
        - users:delete
      x-required-role: admin
    patch:
      summary: updates the user by id
      !!merge <<: *x-require-authenticated
      operationId: UpdateUser
      parameters:
        - *x-uuidParameter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
        description: Updated user object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ok
      tags:
        - user
      x-required-role: user
  # TODO: useless, if no teams will just show "No teams" and "Add team" button
  # same thing for tags
  /project/{projectName}/initialize:
    post:
      summary: creates initial data (teams, tags...) for a new project
      !!merge <<: *x-require-authenticated
      operationId: InitializeProject
      parameters:
        - $ref: '#/components/parameters/ProjectName'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitializeProjectRequest'
        required: true
      responses:
        204:
          description: Success.
      tags:
        - project
      x-required-role: admin
  /project/{projectName}/:
    get:
      summary: returns board data for a project
      !!merge <<: *x-require-authenticated
      operationId: GetProject
      parameters:
        - $ref: '#/components/parameters/ProjectName'
      responses:
        200:
          description: Project.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DbProject'
      tags:
        - project
  /project/{projectName}/config:
    get:
      summary: returns the project configuration
      !!merge <<: *x-require-authenticated
      operationId: GetProjectConfig
      parameters:
        - $ref: '#/components/parameters/ProjectName'
      responses:
        200:
          description: Project config.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectConfig'
      x-required-role: admin
      tags:
        - project
    put:
      summary: updates the project configuration
      !!merge <<: *x-require-authenticated
      operationId: UpdateProjectConfig
      parameters:
        - $ref: '#/components/parameters/ProjectName'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectConfig'
      responses:
        204:
          description: Config updated successfully.
      x-required-role: admin
      tags:
        - project
  /project/{projectName}/board:
    get:
      summary: returns board data for a project
      !!merge <<: *x-require-authenticated
      operationId: GetProjectBoard
      parameters:
        - $ref: '#/components/parameters/ProjectName'
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectBoard'
      tags:
        - project
  # https://stackoverflow.com/a/32820784/11995537
  # This appears to be the simplest solution
  # POST /project/ # not in our case since theyre hardcoded to allow for complex logic per project
  # POST /project/{projectName}/team
  # GET /project/{projectName}/team
  # GET/PATCH /team/{teamId}
  # POST /team/{teamId}/workitem since [/project/{projectName}]/team/{teamId}/workitem has duplicated info in [].
  # we just care that parent is a team
  # NOTE: if we don't want to use ids for convenience, we just need to make it unique, e.g. github
  # GET /repos/{owner}/{repo}/commits
  # in our case this is similar to work item tags by name, which are shared by a whole project,
  # so a project is the direct parent of the tag
  # GET /project/{projectName}/work-item-tags/{workItemTagName}
  # however with an id we would do
  # GET /work-item-tags/{workItemTagId}
  /project/{projectName}/workitems:
    get:
      summary: returns workitems for a project
      !!merge <<: *x-require-authenticated
      operationId: GetProjectWorkitems
      parameters:
        - $ref: '#/components/parameters/ProjectName'
        - in: query
          schema:
            type: boolean
          name: open
        - in: query
          schema:
            type: boolean
          name: deleted
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DemoWorkItems'
                  - $ref: '#/components/schemas/DemoTwoWorkItems'
      tags:
        - project
  /workitem/:
    post:
      summary: create workitem
      !!merge <<: *x-require-authenticated
      operationId: CreateWorkitem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkItemRequest'
        required: true
      responses:
        201:
          description: Success.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DbWorkItem'
      tags:
        - workItem
  /workitem/{id}/:
    get:
      summary: get workitem
      !!merge <<: *x-require-authenticated
      operationId: GetWorkItem
      parameters:
        - !!merge <<: *x-serialIDParameter
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DbWorkItem'
      tags:
        - workItem
    patch:
      summary: update workitem
      !!merge <<: *x-require-authenticated
      operationId: UpdateWorkitem
      parameters:
        - !!merge <<: *x-serialIDParameter
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DbWorkItem'
      tags:
        - workItem
    delete:
      summary: delete workitem
      !!merge <<: *x-require-authenticated
      operationId: DeleteWorkitem
      parameters:
        - !!merge <<: *x-serialIDParameter
      responses:
        204:
          description: Success.
      tags:
        - workItem
  /work-item/{workItemID}/comment/:
    post:
      summary: create work item comment.
      !!merge <<: *x-require-authenticated
      operationId: CreateWorkItemComment
      parameters:
        - !!merge <<: *x-serialIDParameter
          name: workItemID
      x-required-scopes:
        - work-item-comment:create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkItemCommentRequest'
        required: true
      responses:
        201:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItemComment'
        !!merge <<: *x-error-response
      tags:
        - workItemComment
  /work-item/{workItemID}/comment/{id}:
    get:
      summary: get work item comment.
      !!merge <<: *x-require-authenticated
      operationId: GetWorkItemComment
      parameters:
        - !!merge <<: *x-serialIDParameter
        - !!merge <<: *x-serialIDParameter
          name: workItemID
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItemComment'
        !!merge <<: *x-error-response
      tags:
        - workItemComment
    patch:
      summary: update work item comment.
      !!merge <<: *x-require-authenticated
      operationId: UpdateWorkItemComment
      x-required-scopes:
        - work-item-comment:edit
      parameters:
        - !!merge <<: *x-serialIDParameter
        - !!merge <<: *x-serialIDParameter
          name: workItemID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWorkItemCommentRequest'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItemComment'
        !!merge <<: *x-error-response
      tags:
        - workItemComment
    delete:
      summary: delete .
      !!merge <<: *x-require-authenticated
      operationId: DeleteWorkItemComment
      x-required-scopes:
        - work-item-comment:delete
      parameters:
        - !!merge <<: *x-serialIDParameter
        - !!merge <<: *x-serialIDParameter
          name: workItemID
      responses:
        204:
          description: Success.
        !!merge <<: *x-error-response
      tags:
        - workItemComment
components:
  parameters:
    ProjectName:
      description: Project name
      explode: false
      in: path
      name: projectName
      required: true
      schema:
        $ref: '#/components/schemas/Project'
      example: demo
      style: simple
    UUID: *x-uuidParameter
    SerialID: *x-serialIDParameter
  schemas:
    CreateActivityRequest: # Generated from internal structs. DO NOT EDIT.
      properties:
        description:
          type: string
        isProductive:
          type: boolean
        name:
          type: string
      required:
        - description
        - isProductive
        - name
      type: object
      x-postgen-struct: RestCreateActivityRequest
    UpdateActivityRequest: # Generated from internal structs. DO NOT EDIT.
      properties:
        description:
          type: string
        isProductive:
          type: boolean
        name:
          type: string
      type: object
      x-postgen-struct: RestUpdateActivityRequest
    Activity: # Generated from internal structs. DO NOT EDIT.
      properties:
        activityID:
          type: integer
        deletedAt:
          format: date-time
          nullable: true
          type: string
        description:
          type: string
        isProductive:
          type: boolean
        name:
          type: string
        projectID:
          type: integer
      required:
        - activityID
        - projectID
        - name
        - description
        - isProductive
      type: object
      x-postgen-struct: RestActivity
    CreateWorkItemTagRequest: # Generated from internal structs. DO NOT EDIT.
      properties:
        color:
          pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          type: string
        description:
          type: string
        name:
          type: string
      required:
        - color
        - description
        - name
      type: object
      x-postgen-struct: RestCreateWorkItemTagRequest
    UpdateWorkItemTagRequest: # Generated from internal structs. DO NOT EDIT.
      properties:
        color:
          pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          type: string
        description:
          type: string
        name:
          type: string
      type: object
      x-postgen-struct: RestUpdateWorkItemTagRequest
    WorkItemTag: # Generated from internal structs. DO NOT EDIT.
      properties:
        color:
          pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          type: string
        deletedAt:
          format: date-time
          nullable: true
          type: string
        description:
          type: string
        name:
          type: string
        projectID:
          type: integer
        workItemTagID:
          type: integer
      required:
        - workItemTagID
        - projectID
        - name
        - description
        - color
      type: object
      x-postgen-struct: RestWorkItemTag
    CreateWorkItemTypeRequest: # Generated from internal structs. DO NOT EDIT.
      properties:
        color:
          pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          type: string
        description:
          type: string
        name:
          type: string
      required:
        - color
        - description
        - name
      type: object
      x-postgen-struct: RestCreateWorkItemTypeRequest
    UpdateWorkItemTypeRequest: # Generated from internal structs. DO NOT EDIT.
      properties:
        color:
          pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          type: string
        description:
          type: string
        name:
          type: string
      type: object
      x-postgen-struct: RestUpdateWorkItemTypeRequest
    WorkItemType: # Generated from internal structs. DO NOT EDIT.
      properties:
        color:
          pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          type: string
        description:
          type: string
        name:
          type: string
        projectID:
          type: integer
        workItemTypeID:
          type: integer
      required:
        - workItemTypeID
        - projectID
        - name
        - description
        - color
      type: object
      x-postgen-struct: RestWorkItemType
    CreateTeamRequest: # Generated from internal structs. DO NOT EDIT.
      properties:
        description:
          type: string
        name:
          type: string
      required:
        - description
        - name
      type: object
      x-postgen-struct: RestCreateTeamRequest
    UpdateTeamRequest: # Generated from internal structs. DO NOT EDIT.
      properties:
        description:
          type: string
        name:
          type: string
      type: object
      x-postgen-struct: RestUpdateTeamRequest
    Team: # Generated from internal structs. DO NOT EDIT.
      properties:
        createdAt:
          format: date-time
          type: string
        description:
          type: string
        name:
          type: string
        projectID:
          type: integer
        teamID:
          type: integer
        updatedAt:
          format: date-time
          type: string
      required:
        - teamID
        - projectID
        - name
        - description
        - createdAt
        - updatedAt
      type: object
      x-postgen-struct: RestTeam
    Direction:
      type: string
      enum:
        - asc
        - desc
    PaginatedNotificationsResponse: # Generated from internal structs. DO NOT EDIT.
      properties:
        items:
          items:
            $ref: '#/components/schemas/RestNotification'
          nullable: true
          type: array
        page:
          $ref: '#/components/schemas/RestPaginationPage'
      required:
        - page
        - items
      type: object
      x-postgen-struct: RestPaginatedNotificationsResponse
    DbActivity: # Generated from internal structs. DO NOT EDIT.
      properties:
        activityID:
          type: integer
        description:
          type: string
        isProductive:
          type: boolean
        name:
          type: string
        projectID:
          type: integer
      required:
        - activityID
        - projectID
        - name
        - description
        - isProductive
      type: object
    DbKanbanStep: # Generated from internal structs. DO NOT EDIT.
      properties:
        color:
          pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          type: string
        description:
          type: string
        kanbanStepID:
          type: integer
        name:
          type: string
        projectID:
          type: integer
        stepOrder:
          type: integer
        timeTrackable:
          type: boolean
      required:
        - kanbanStepID
        - projectID
        - stepOrder
        - name
        - description
        - color
        - timeTrackable
      type: object
      x-postgen-struct: DbKanbanStep
    DbProject: # Generated from internal structs. DO NOT EDIT.
      properties:
        boardConfig:
          $ref: '#/components/schemas/ProjectConfig'
        createdAt:
          format: date-time
          type: string
        description:
          type: string
        name:
          $ref: '#/components/schemas/Project'
        projectID:
          type: integer
        updatedAt:
          format: date-time
          type: string
      required:
        - projectID
        - name
        - description
        - boardConfig
        - createdAt
        - updatedAt
      type: object
      x-postgen-struct: DbProject
    DbTeam: # Generated from internal structs. DO NOT EDIT.
      properties:
        createdAt:
          format: date-time
          type: string
        description:
          type: string
        name:
          type: string
        projectID:
          type: integer
        teamID:
          type: integer
        updatedAt:
          format: date-time
          type: string
      required:
        - teamID
        - projectID
        - name
        - description
        - createdAt
        - updatedAt
      type: object
    DbWorkItemTag: # Generated from internal structs. DO NOT EDIT.
      properties:
        color:
          pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          type: string
        deletedAt:
          format: date-time
          nullable: true
          type: string
        description:
          type: string
        name:
          type: string
        projectID:
          type: integer
        workItemTagID:
          type: integer
      required:
        - workItemTagID
        - projectID
        - name
        - description
        - color
      type: object
      x-postgen-struct: DbWorkItemTag
    DbWorkItemType: # Generated from internal structs. DO NOT EDIT.
      properties:
        color:
          pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          type: string
        description:
          type: string
        name:
          type: string
        projectID:
          type: integer
        workItemTypeID:
          type: integer
      required:
        - workItemTypeID
        - projectID
        - name
        - description
        - color
      type: object
      x-postgen-struct: DbWorkItemType
    DbDemoWorkItem: # Generated from internal structs. DO NOT EDIT.
      properties:
        lastMessageAt:
          format: date-time
          type: string
        line:
          type: string
        ref:
          pattern: ^[0-9]{8}$
          type: string
        reopened:
          type: boolean
        workItemID:
          type: integer
      required:
        - workItemID
        - ref
        - line
        - lastMessageAt
        - reopened
      type: object
      x-postgen-struct: DbDemoWorkItem
    DbUserAPIKey: # Generated from internal structs. DO NOT EDIT.
      properties:
        apiKey:
          type: string
        expiresOn:
          format: date-time
          type: string
        userID:
          $ref: '#/components/schemas/DbUserID'
      required:
        - apiKey
        - expiresOn
        - userID
      type: object
      x-postgen-struct: DbUserAPIKey
    DbUser: # Generated from internal structs. DO NOT EDIT.
      properties:
        createdAt:
          format: date-time
          type: string
        deletedAt:
          format: date-time
          nullable: true
          type: string
        email:
          type: string
        firstName:
          nullable: true
          type: string
        fullName:
          nullable: true
          type: string
        hasGlobalNotifications:
          type: boolean
        hasPersonalNotifications:
          type: boolean
        lastName:
          nullable: true
          type: string
        scopes:
          $ref: '#/components/schemas/Scopes'
        userID:
          $ref: '#/components/schemas/DbUserID'
        username:
          type: string
      required:
        - userID
        - username
        - email
        - scopes
        - hasPersonalNotifications
        - hasGlobalNotifications
        - createdAt
      type: object
      x-postgen-struct: DbUser
    DbTimeEntry: # Generated from internal structs. DO NOT EDIT.
      properties:
        activityID:
          type: integer
        comment:
          type: string
        durationMinutes:
          nullable: true
          type: integer
        start:
          format: date-time
          type: string
        teamID:
          nullable: true
          type: integer
        timeEntryID:
          type: integer
        userID:
          $ref: '#/components/schemas/DbUserID'
        workItemID:
          nullable: true
          type: integer
      required:
        - timeEntryID
        - activityID
        - userID
        - comment
        - start
      type: object
      x-postgen-struct: DbTimeEntry
    DbWorkItemComment: # Generated from internal structs. DO NOT EDIT.
      properties:
        createdAt:
          format: date-time
          type: string
        message:
          type: string
        updatedAt:
          format: date-time
          type: string
        userID:
          $ref: '#/components/schemas/DbUserID'
        workItemCommentID:
          type: integer
        workItemID:
          type: integer
      required:
        - workItemCommentID
        - workItemID
        - userID
        - message
        - createdAt
        - updatedAt
      type: object
      x-postgen-struct: DbWorkItemComment
    # Not generated from go code in repo models since we can't have repos/models imported by db.
    # It is not solved by changing repo models pkg location. repo models will always import db so
    # it can't be imported by db.
    ProjectConfig:
      properties:
        fields:
          items:
            $ref: '#/components/schemas/ProjectConfigField'
          nullable: false
          type: array
        header:
          items:
            type: string
          nullable: false
          type: array
        visualization:
          type: object
      required:
        - header
        - fields
      type: object
    ProjectConfigField:
      properties:
        isEditable:
          type: boolean
        isVisible:
          type: boolean
        name:
          type: string
        path:
          type: string
        showCollapsed:
          type: boolean
      required:
        - isEditable
        - showCollapsed
        - isVisible
        - path
        - name
      type: object
    DemoWorkItems: # Generated from internal structs. DO NOT EDIT.
      properties:
        closedAt:
          format: date-time
          nullable: true
          type: string
        createdAt:
          format: date-time
          type: string
        deletedAt:
          format: date-time
          nullable: true
          type: string
        demoWorkItem:
          $ref: '#/components/schemas/DbDemoWorkItem'
        description:
          type: string
        kanbanStepID:
          type: integer
        members:
          items:
            $ref: '#/components/schemas/DbUserWIAUWorkItem'
          nullable: true
          type: array
        metadata:
          additionalProperties: {}
          type: object
        targetDate:
          format: date-time
          type: string
        teamID:
          nullable: true
          type: integer
        timeEntries:
          items:
            $ref: '#/components/schemas/DbTimeEntry'
          nullable: true
          type: array
        title:
          type: string
        updatedAt:
          format: date-time
          type: string
        workItemComments:
          items:
            $ref: '#/components/schemas/DbWorkItemComment'
          nullable: true
          type: array
        workItemID:
          type: integer
        workItemTags:
          items:
            $ref: '#/components/schemas/DbWorkItemTag'
          nullable: true
          type: array
        workItemType:
          $ref: '#/components/schemas/DbWorkItemType'
        workItemTypeID:
          type: integer
      required:
        - workItemID
        - title
        - description
        - workItemTypeID
        - metadata
        - teamID
        - kanbanStepID
        - targetDate
        - createdAt
        - updatedAt
        - demoWorkItem
      type: object
      x-postgen-struct: RestDemoWorkItems
    DemoTwoWorkItems: # Generated from internal structs. DO NOT EDIT.
      properties:
        closedAt:
          format: date-time
          nullable: true
          type: string
        createdAt:
          format: date-time
          type: string
        deletedAt:
          format: date-time
          nullable: true
          type: string
        demoTwoWorkItem:
          $ref: '#/components/schemas/DbDemoTwoWorkItem'
        description:
          type: string
        kanbanStepID:
          type: integer
        members:
          items:
            $ref: '#/components/schemas/DbUserWIAUWorkItem'
          nullable: true
          type: array
        metadata:
          additionalProperties: {}
          type: object
        targetDate:
          format: date-time
          type: string
        teamID:
          nullable: true
          type: integer
        timeEntries:
          items:
            $ref: '#/components/schemas/DbTimeEntry'
          nullable: true
          type: array
        title:
          type: string
        updatedAt:
          format: date-time
          type: string
        workItemComments:
          items:
            $ref: '#/components/schemas/DbWorkItemComment'
          nullable: true
          type: array
        workItemID:
          type: integer
        workItemTags:
          items:
            $ref: '#/components/schemas/DbWorkItemTag'
          nullable: true
          type: array
        workItemType:
          $ref: '#/components/schemas/DbWorkItemType'
        workItemTypeID:
          type: integer
      required:
        - workItemID
        - title
        - description
        - workItemTypeID
        - metadata
        - teamID
        - kanbanStepID
        - targetDate
        - createdAt
        - updatedAt
        - demoTwoWorkItem
      type: object
      x-postgen-struct: RestDemoTwoWorkItems
    InitializeProjectRequest: # Generated from internal structs. DO NOT EDIT.
      properties:
        tags:
          items:
            $ref: '#/components/schemas/DbWorkItemTagCreateParams'
          nullable: true
          type: array
        teams:
          items:
            $ref: '#/components/schemas/DbTeamCreateParams'
          nullable: true
          type: array
      type: object
      x-postgen-struct: RestCreateProjectBoardRequest
    ProjectBoard: # Generated from internal structs. DO NOT EDIT.
      properties:
        projectName:
          $ref: '#/components/schemas/Project'
      required:
        - projectName
      type: object
      x-postgen-struct: RestProjectBoard
    PaginatedUsersResponse: # Generated from internal structs. DO NOT EDIT.
      properties:
        items:
          items:
            $ref: '#/components/schemas/RestUser'
          nullable: true
          type: array
        page:
          $ref: '#/components/schemas/RestPaginationPage'
      required:
        - page
        - items
      type: object
      x-postgen-struct: RestPaginatedUsersResponse
    User: # Generated from internal structs. DO NOT EDIT.
      properties:
        apiKey:
          $ref: '#/components/schemas/DbUserAPIKey'
        createdAt:
          format: date-time
          type: string
        deletedAt:
          format: date-time
          nullable: true
          type: string
        email:
          type: string
        firstName:
          nullable: true
          type: string
        fullName:
          nullable: true
          type: string
        hasGlobalNotifications:
          type: boolean
        hasPersonalNotifications:
          type: boolean
        lastName:
          nullable: true
          type: string
        projects:
          items:
            $ref: '#/components/schemas/DbProject'
          nullable: true
          type: array
        role:
          $ref: '#/components/schemas/Role'
        scopes:
          $ref: '#/components/schemas/Scopes'
        teams:
          items:
            $ref: '#/components/schemas/DbTeam'
          nullable: true
          type: array
        userID:
          $ref: '#/components/schemas/DbUserID'
        username:
          type: string
      required:
        - userID
        - username
        - email
        - scopes
        - hasPersonalNotifications
        - hasGlobalNotifications
        - createdAt
        - role
      type: object
      x-postgen-struct: RestUser
    RestUser: # TODO: generate automatically for all in structs.gen
      $ref: '#/components/schemas/User'
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      required:
        - messages
      properties:
        detail:
          title: Detail
          description: Additional details for validation errors
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
        messages:
          title: Messages
          description: Descriptive error messages to show in a callout
          type: array
          items:
            type: string
    ErrorCode:
      description: |
        Represents standardized HTTP error types.
        Notes:
        - 'Private' marks an error to be hidden in response.
      type: string
      enum:
        - Unknown
        - Private
        - NotFound
        - InvalidArgument
        - AlreadyExists
        - Unauthorized
        - Unauthenticated
        - RequestValidation
        - ResponseValidation
        - OIDC
        - InvalidRole
        - InvalidScope
        - InvalidUUID
    HTTPError:
      description: represents an error message response.
      type: object
      properties:
        title:
          type: string
        detail:
          type: string
        status:
          type: integer
        error:
          type: string
        loc:
          title: Location
          description: location in body path, if any
          type: array
          items:
            type: string
        type:
          $ref: '#/components/schemas/ErrorCode'
        validationError:
          $ref: '#/components/schemas/HTTPValidationError'
      required:
        - title
        - detail
        - status
        - error
        - type
    Topics:
      description: string identifiers for SSE event listeners.
      type: string
      enum:
        # will not alert directly, just show badge when a new notification is sent.
        # - UserNotifications
        # - ManagerNotifications
        # - AdminNotifications
        # will use personalSubs channel per userID since it depends on
        # members per specific workitem
        # - WorkItemMoved
        # - WorkItemClosed
        - GlobalAlerts
    Scope: # Generated from scopes.json keys. DO NOT EDIT.
      type: string
      enum: ["project-member", "users:read", "users:write", "users:delete", "scopes:write", "team-settings:write", "project-settings:write", "activity:create", "activity:edit", "activity:delete", "work-item-tag:create", "work-item-tag:edit", "work-item-tag:delete", "work-item:review", "work-item-comment:create", "work-item-comment:edit", "work-item-comment:delete"]
      x-generated: '-'
      description: is generated from scopes.json keys.
    Scopes: # workaround for openapi-go gen
      type: array
      items:
        $ref: '#/components/schemas/Scope'
    Role: # Generated from roles.json keys. DO NOT EDIT.
      type: string
      enum: ["guest", "user", "advancedUser", "manager", "admin", "superAdmin"]
      x-generated: '-'
      description: is generated from roles.json keys.
    WorkItemRole: # Generated from database enum 'work_item_role'. DO NOT EDIT.
      title: WorkItem role
      type: string
      x-generated: '-'
      enum: ["preparer", "reviewer"]
      description: is generated from database enum 'work_item_role'.
    UpdateUserRequest:
      description: represents User data to update
      example:
        firstName: Jane
        lastName: Doe
      properties:
        firstName:
          description: originally from auth server but updatable
          type: string
          pattern: ^[\p{L} '-]+$
        lastName:
          description: originally from auth server but updatable
          type: string
          pattern: ^[\p{L} '-]+$
          # will be synced with auth server
          # username:
          #   description: originally from auth server but updatable
          #   type: string
          #   pattern: ^[\.a-zA-Z0-9_-]+$
          # will be synced with auth server
          # email:
          #   description: originally from auth server but updatable
          #   type: string
          #   # format: email # bad oapi-codegen type
          #   pattern: ^[a-zA-Z0-9._%+-]+@(mydomain\.com|anotherdomain\.com)$
      type: object
    UpdateUserAuthRequest:
      description: represents User authorization data to update
      example:
        role: manager
        scopes:
          - users:read
      properties:
        role:
          $ref: '#/components/schemas/Role'
        scopes:
          $ref: '#/components/schemas/Scopes'
      type: object
    # à la FastAPI
    ValidationError:
      title: ValidationError
      required:
        - loc
        - msg
        - detail
        - type
      type: object
      properties:
        loc:
          title: Location
          description: location in body path, if any
          type: array
          items:
            type: string
        msg:
          title: Message
          description: should always be shown to the user
          type: string
        detail:
          description: verbose details of the error
          title: Error details
          type: object
          required:
            - schema
            - value
          properties:
            schema:
              type: object
            value:
              type: string
        ctx:
          title: Contextual information
          type: object
    UuidUUID: # Generated from internal structs. DO NOT EDIT.
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
      type: string
      x-go-type: uuid.UUID
      x-go-type-import:
        name: uuid
        path: github.com/google/uuid
    # IMPORTANT: anyOf since CreateWorkItemRequestDiscriminator will always be matched.
    # we should be able to then remove projectName from CreateDemoWorkItemRequest and
    # CreateDemoTwoWorkItemRequest
    # CreateWorkItemRequest:
    #   anyOf:
    #     - $ref: '#/components/schemas/CreateWorkItemRequestDiscriminator'
    #     - $ref: '#/components/schemas/CreateDemoWorkItemRequest'
    #     - $ref: '#/components/schemas/CreateDemoTwoWorkItemRequest'
    # CreateWorkItemRequestDiscriminator:
    #   type: object
    #   properties:
    #     projectName:
    #       $ref: '#/components/schemas/Project'
    #   discriminator:
    #     propertyName: projectName
    #     mapping:
    #       demo: '#/components/schemas/CreateDemoWorkItemRequest'
    #       demo_two: '#/components/schemas/CreateDemoTwoWorkItemRequest'

    # IMPORTANT: discriminator must be defined this way so validation works
    # and to ensure proper oapi-codegen generation. Disregard any other method.
    CreateWorkItemRequest:
      oneOf:
        - $ref: '#/components/schemas/CreateDemoWorkItemRequest'
        - $ref: '#/components/schemas/CreateDemoTwoWorkItemRequest'
      discriminator:
        propertyName: projectName
        mapping:
          demo: '#/components/schemas/CreateDemoWorkItemRequest'
          demo_two: '#/components/schemas/CreateDemoTwoWorkItemRequest'
    DbWorkItem: # Generated from internal structs. DO NOT EDIT.
      properties:
        closedAt:
          format: date-time
          nullable: true
          type: string
        createdAt:
          format: date-time
          type: string
        deletedAt:
          format: date-time
          nullable: true
          type: string
        description:
          type: string
        kanbanStepID:
          type: integer
        metadata:
          additionalProperties: {}
          type: object
        targetDate:
          format: date-time
          type: string
        teamID:
          type: integer
        title:
          type: string
        updatedAt:
          format: date-time
          type: string
        workItemID:
          type: integer
        workItemTypeID:
          type: integer
      required:
        - workItemID
        - title
        - description
        - workItemTypeID
        - metadata
        - teamID
        - kanbanStepID
        - targetDate
        - createdAt
        - updatedAt
      type: object
      x-postgen-struct: DbWorkItem
    CreateDemoTwoWorkItemRequest: # Generated from internal structs. DO NOT EDIT.
      properties:
        base:
          $ref: '#/components/schemas/DbWorkItemCreateParams'
        demoTwoProject:
          $ref: '#/components/schemas/DbDemoTwoWorkItemCreateParams'
        members:
          items:
            $ref: '#/components/schemas/ServicesMember'
          type: array
        projectName:
          $ref: '#/components/schemas/Project'
        tagIDs:
          items:
            type: integer
          type: array
      required:
        - projectName
        - demoTwoProject
        - base
        - tagIDs
        - members
      type: object
      x-postgen-struct: RestCreateDemoTwoWorkItemRequest
    CreateDemoWorkItemRequest: # Generated from internal structs. DO NOT EDIT.
      properties:
        base:
          $ref: '#/components/schemas/DbWorkItemCreateParams'
        demoProject:
          $ref: '#/components/schemas/DbDemoWorkItemCreateParams'
        members:
          items:
            $ref: '#/components/schemas/ServicesMember'
          type: array
        projectName:
          $ref: '#/components/schemas/Project'
        tagIDs:
          items:
            type: integer
          type: array
      required:
        - projectName
        - demoProject
        - base
        - tagIDs
        - members
      type: object
      x-postgen-struct: RestCreateDemoWorkItemRequest
    CreateWorkItemCommentRequest: # Generated from internal structs. DO NOT EDIT.
      properties:
        message:
          type: string
        userID:
          $ref: '#/components/schemas/DbUserID'
        workItemID:
          type: integer
      required:
        - message
        - userID
        - workItemID
      type: object
      x-postgen-struct: RestCreateWorkItemCommentRequest
    Project: # Generated from projects table. DO NOT EDIT.
      enum: ["demo", "demo_two"]
      type: string
      x-generated: '-'
      description: is generated from projects table.
    DbActivityCreateParams: # Generated from internal structs. DO NOT EDIT.
      properties:
        description:
          type: string
        isProductive:
          type: boolean
        name:
          type: string
        projectID:
          type: integer
      required:
        - description
        - isProductive
        - name
      type: object
    DbTeamCreateParams: # Generated from internal structs. DO NOT EDIT.
      properties:
        description:
          type: string
        name:
          type: string
      required:
        - description
        - name
      type: object
    DbWorkItemTagCreateParams: # Generated from internal structs. DO NOT EDIT.
      properties:
        color:
          pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          type: string
        description:
          type: string
        name:
          type: string
      required:
        - color
        - description
        - name
      type: object
    DbWorkItemRole: # Generated from internal structs. DO NOT EDIT.
      type: string
    NotificationType: # Generated from database enum 'notification_type'. DO NOT EDIT.
      description: is generated from database enum 'notification_type'.
      type: string
      x-generated: '-'
      enum: ["personal", "global"]
    DemoTwoWorkItemTypes: # Generated from work_item_types table. DO NOT EDIT.
      type: string
      enum: ["Type 1", "Type 2", "Another type"]
      x-generated: '-'
      description: is generated from work_item_types table.
    DemoWorkItemTypes: # Generated from work_item_types table. DO NOT EDIT.
      type: string
      enum: ["Type 1"]
      x-generated: '-'
      description: is generated from work_item_types table.
    DbDemoWorkItemCreateParams: # Generated from internal structs. DO NOT EDIT.
      properties:
        lastMessageAt:
          format: date-time
          type: string
        line:
          type: string
        ref:
          pattern: ^[0-9]{8}$
          type: string
        reopened:
          type: boolean
      required:
        - lastMessageAt
        - line
        - ref
        - reopened
      type: object
    DbWorkItemCreateParams: # Generated from internal structs. DO NOT EDIT.
      properties:
        closedAt:
          format: date-time
          nullable: true
          type: string
        description:
          type: string
        kanbanStepID:
          type: integer
        metadata:
          additionalProperties: {}
          type: object
        targetDate:
          format: date-time
          type: string
        teamID:
          type: integer
        title:
          type: string
        workItemTypeID:
          type: integer
      required:
        - description
        - kanbanStepID
        - metadata
        - targetDate
        - teamID
        - title
        - workItemTypeID
      type: object
    ServicesMember: # Generated from internal structs. DO NOT EDIT.
      properties:
        role:
          $ref: '#/components/schemas/WorkItemRole'
        userID:
          $ref: '#/components/schemas/DbUserID'
      required:
        - role
        - userID
      type: object
    DbDemoTwoWorkItem: # Generated from internal structs. DO NOT EDIT.
      properties:
        customDateForProject2:
          format: date-time
          nullable: true
          type: string
        workItemID:
          type: integer
      required:
        - workItemID
      type: object
    DbDemoTwoWorkItemCreateParams: # Generated from internal structs. DO NOT EDIT.
      properties:
        customDateForProject2:
          format: date-time
          nullable: true
          type: string
      type: object
    # https://github.com/ferdikoomen/openapi-typescript-codegen/issues/998
    # for our case, this should be part of orval, at least
    # declare const Brand: unique symbol
    # export type Branded<T, B> = T & { [Brand]: B }

    # type UserID = Branded<string, "UserID">;
    # type TeamID = Branded<string, "TeamID">;

    # function doSomethingWithUser(id: UserID) {}

    # doSomethingWithUser("123" as UserID);
    # doSomethingWithUser("invalid" as TeamID); // Error: Argument of type 'string' is not assignable to parameter of type 'UserID'
    # type: string
    # x-orval-type: branded
    DbWorkItemID: {}
    DbProjectID: {}
    DbUserID: # Generated from internal structs. DO NOT EDIT.
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
      type: string
      x-go-type: uuid.UUID
      x-go-type-import:
        name: uuid
        path: github.com/google/uuid
    DbWorkItemTypeID: {}
    DbNotificationID: {}
    DbNotification: # Generated from internal structs. DO NOT EDIT.
      properties:
        body:
          type: string
        createdAt:
          format: date-time
          type: string
        labels:
          items:
            type: string
          type: array
        link:
          nullable: true
          type: string
        notificationID:
          type: integer
        notificationType:
          $ref: '#/components/schemas/NotificationType'
        receiver:
          $ref: '#/components/schemas/DbUserID'
        sender:
          $ref: '#/components/schemas/DbUserID'
        title:
          type: string
      required:
        - notificationID
        - title
        - body
        - labels
        - createdAt
        - sender
        - notificationType
      type: object
    DbUserNotification: # Generated from internal structs. DO NOT EDIT.
      properties:
        notificationID:
          type: integer
        read:
          type: boolean
        userID:
          $ref: '#/components/schemas/DbUserID'
        userNotificationID:
          type: integer
      required:
        - userNotificationID
        - notificationID
        - read
        - userID
      type: object
    RestPaginationPage: # Generated from internal structs. DO NOT EDIT.
      properties:
        nextCursor:
          type: string
      type: object
    Notification: # Generated from internal structs. DO NOT EDIT.
      properties:
        notification:
          $ref: '#/components/schemas/DbNotification'
        notificationID:
          type: integer
        read:
          type: boolean
        userID:
          $ref: '#/components/schemas/DbUserID'
        userNotificationID:
          type: integer
      required:
        - userNotificationID
        - notificationID
        - read
        - userID
        - notification
      type: object
      x-postgen-struct: RestNotification
    RestNotification: # Generated from internal structs. DO NOT EDIT.
      properties:
        notification:
          $ref: '#/components/schemas/DbNotification'
        notificationID:
          type: integer
        read:
          type: boolean
        userID:
          $ref: '#/components/schemas/DbUserID'
        userNotificationID:
          type: integer
      required:
        - userNotificationID
        - notificationID
        - read
        - userID
        - notification
      type: object
    DbUserWIAUWorkItem: # Generated from internal structs. DO NOT EDIT.
      properties:
        role:
          $ref: '#/components/schemas/WorkItemRole'
        user:
          $ref: '#/components/schemas/DbUser'
      required:
        - user
        - role
      type: object
    DemoKanbanSteps: # Generated from kanban_steps table. DO NOT EDIT.
      type: string
      enum: ["Disabled", "Received", "Under review", "Work in progress"]
      x-generated: '-'
      description: is generated from kanban_steps table.
    DemoTwoKanbanSteps: # Generated from kanban_steps table. DO NOT EDIT.
      type: string
      enum: ["Received"]
      x-generated: '-'
      description: is generated from kanban_steps table.
    UpdateWorkItemCommentRequest: # Generated from internal structs. DO NOT EDIT.
      properties:
        message:
          type: string
        userID:
          $ref: '#/components/schemas/DbUserID'
        workItemID:
          type: integer
      type: object
      x-postgen-struct: RestUpdateWorkItemCommentRequest
    WorkItemComment: # Generated from internal structs. DO NOT EDIT.
      properties:
        createdAt:
          format: date-time
          type: string
        message:
          type: string
        updatedAt:
          format: date-time
          type: string
        userID:
          $ref: '#/components/schemas/DbUserID'
        workItemCommentID:
          type: integer
        workItemID:
          type: integer
      required:
        - workItemCommentID
        - workItemID
        - userID
        - message
        - createdAt
        - updatedAt
      type: object
      x-postgen-struct: RestWorkItemComment
  examples: # Generated from internal structs. DO NOT EDIT.
    User:
      value:
        username: username
        email: email@email.com
        password: password
  securitySchemes:
    api_key:
      in: header
      name: x-api-key
      type: apiKey
    bearer_auth:
      type: http
      scheme: bearer
      bearerFormat: JWT
