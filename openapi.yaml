#
# Vendor extensions
# -----------------
#
# Component schemas:
#   - `x-gen-struct` generates (and keeps up to date) a schema from a struct,
#      which can be tagged with OpenAPI fields (via openapi-go).
#      Possible structs to generate from are listed in internal/codegen/structs.gen.go
#      indexed by x-gen-struct.
#      Packages to generate structs from are added adhoc (currently rest and models packages only)
#      Note that rest package structs are generated without prefix since they
#      are the base of the spec - else prefix is the pascal cased package name.
#      The value of x-gen-struct must match the schema name, to prevent duplicates and
#      confusing definitions.
#      To use a yet to be generated struct in a path, simply use the $ref
#      without creating any schema and it will be autogenerated later if it doesn't exist
#      (only for rest package, since any other should not be used as request/response in the
#      first place).
#   - `x-use-server-type`: set to true to make use of generated server types in rest package request or response,
#      instead of models package. Useful for request and response bodies defined in spec, not code.
#      TODO: should also work for references in regular schemas, e.g. Topics array using server gen Topic
#      instead of models.Topic
# Path operations:
#   - `x-required-scopes` defines required scopes for a request.
#   - `x-required-role` defines the minimum required role for a request.
#
#
#
# Notes:
#
#
#######################################
x-uuidIDParameterBase: &x-uuidIDParameterBase
  description: UUID identifier
  explode: false
  in: path
  required: true
  schema:
    type: string
    pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
    # https://github.com/deepmap/oapi-codegen/issues/760
    x-go-type: uuid.UUID
    x-go-type-import:
      name: uuid
      path: github.com/google/uuid
  example: 123e4567-e89b-12d3-a456-426614174000
  style: simple
x-uuidParameter: &x-uuidParameter
  !!merge <<: *x-uuidIDParameterBase
  name: id
x-serialIDParameterBase: &x-serialIDParameterBase
  description: integer identifier # requires name (must be the same name in subpaths so gin can handle it)
  explode: false
  in: path
  required: true
  schema:
    type: integer
  example: 41131
  style: simple
x-paginationLimitParameter: &x-paginationLimitParameter
  name: limit
  required: true
  schema:
    type: integer
  in: query
x-paginationColumnParameter: &x-paginationColumnParameter
  name: column
  required: true
  schema:
    type: string
  in: query
x-paginationDirectionParameter: &x-paginationDirectionParameter
  name: direction
  required: true
  schema:
    $ref: '#/components/schemas/Direction'
  in: query
x-paginationCursorParameter: &x-paginationCursorParameter
  name: cursor
  schema:
    type: string
    nullable: true
  required: false
  in: query
# forces either an app token or api key to be set
x-require-authenticated: &x-require-authenticated
  security:
    - bearer_auth: []
    - api_key: []
# 403 and 401 will have precedence over 4XX, else we
# get response validation failure (400) on a 403 and 401
# since we don't use HTTPError schema
x-error-response: &x-error-response
  403:
    description: Unauthorized
  401:
    description: Unauthenticated
  4XX:
    description: Error response
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/HTTPError'
#
# Anchors must be defined before lines that use them. Also cannot use anchors from different files.
# See https://docs.gitlab.com/ee/ci/yaml/yaml_optimization.html
#
# Ideally in the future this also helps so that oapi-codegen and orval can generate typesafe ids instead of primitives.
# Gin also requires the same parameter names on subpaths, else it panics.
#
# <<<--- GENERATED MODELS ANCHORS. DO NOT EDIT. --->>>
x-activityIDParameter: &x-activityIDParameter
  # Generated. DO NOT EDIT.
  !!merge <<: *x-serialIDParameterBase
  schema:
    type: integer
    x-go-type: models.ActivityID
    x-go-type-import:
      name: db
      path: github.com/danicc097/openapi-go-gin-postgres-sqlc/internal/repos/postgresql/gen/models
  name: activityID
x-entityNotificationIDParameter: &x-entityNotificationIDParameter
  # Generated. DO NOT EDIT.
  !!merge <<: *x-serialIDParameterBase
  schema:
    type: integer
    x-go-type: models.EntityNotificationID
    x-go-type-import:
      name: db
      path: github.com/danicc097/openapi-go-gin-postgres-sqlc/internal/repos/postgresql/gen/models
  name: entityNotificationID
x-extraSchemaBookAuthorsSurrogateKeyIDParameter: &x-extraSchemaBookAuthorsSurrogateKeyIDParameter
  # Generated. DO NOT EDIT.
  !!merge <<: *x-serialIDParameterBase
  schema:
    type: integer
    x-go-type: models.ExtraSchemaBookAuthorsSurrogateKeyID
    x-go-type-import:
      name: db
      path: github.com/danicc097/openapi-go-gin-postgres-sqlc/internal/repos/postgresql/gen/models
  name: extraSchemaBookAuthorsSurrogateKeyID
x-extraSchemaBookIDParameter: &x-extraSchemaBookIDParameter
  # Generated. DO NOT EDIT.
  !!merge <<: *x-serialIDParameterBase
  schema:
    type: integer
    x-go-type: models.ExtraSchemaBookID
    x-go-type-import:
      name: db
      path: github.com/danicc097/openapi-go-gin-postgres-sqlc/internal/repos/postgresql/gen/models
  name: extraSchemaBookID
x-extraSchemaBookReviewIDParameter: &x-extraSchemaBookReviewIDParameter
  # Generated. DO NOT EDIT.
  !!merge <<: *x-serialIDParameterBase
  schema:
    type: integer
    x-go-type: models.ExtraSchemaBookReviewID
    x-go-type-import:
      name: db
      path: github.com/danicc097/openapi-go-gin-postgres-sqlc/internal/repos/postgresql/gen/models
  name: extraSchemaBookReviewID
x-extraSchemaDummyJoinIDParameter: &x-extraSchemaDummyJoinIDParameter
  # Generated. DO NOT EDIT.
  !!merge <<: *x-serialIDParameterBase
  schema:
    type: integer
    x-go-type: models.ExtraSchemaDummyJoinID
    x-go-type-import:
      name: db
      path: github.com/danicc097/openapi-go-gin-postgres-sqlc/internal/repos/postgresql/gen/models
  name: extraSchemaDummyJoinID
x-extraSchemaNotificationIDParameter: &x-extraSchemaNotificationIDParameter
  # Generated. DO NOT EDIT.
  !!merge <<: *x-serialIDParameterBase
  schema:
    type: integer
    x-go-type: models.ExtraSchemaNotificationID
    x-go-type-import:
      name: db
      path: github.com/danicc097/openapi-go-gin-postgres-sqlc/internal/repos/postgresql/gen/models
  name: extraSchemaNotificationID
x-extraSchemaUserAPIKeyIDParameter: &x-extraSchemaUserAPIKeyIDParameter
  # Generated. DO NOT EDIT.
  !!merge <<: *x-serialIDParameterBase
  schema:
    type: integer
    x-go-type: models.ExtraSchemaUserAPIKeyID
    x-go-type-import:
      name: db
      path: github.com/danicc097/openapi-go-gin-postgres-sqlc/internal/repos/postgresql/gen/models
  name: extraSchemaUserAPIKeyID
x-extraSchemaWorkItemIDParameter: &x-extraSchemaWorkItemIDParameter
  # Generated. DO NOT EDIT.
  !!merge <<: *x-serialIDParameterBase
  schema:
    type: integer
    x-go-type: models.ExtraSchemaWorkItemID
    x-go-type-import:
      name: db
      path: github.com/danicc097/openapi-go-gin-postgres-sqlc/internal/repos/postgresql/gen/models
  name: extraSchemaWorkItemID
x-kanbanStepIDParameter: &x-kanbanStepIDParameter
  # Generated. DO NOT EDIT.
  !!merge <<: *x-serialIDParameterBase
  schema:
    type: integer
    x-go-type: models.KanbanStepID
    x-go-type-import:
      name: db
      path: github.com/danicc097/openapi-go-gin-postgres-sqlc/internal/repos/postgresql/gen/models
  name: kanbanStepID
x-movieIDParameter: &x-movieIDParameter
  # Generated. DO NOT EDIT.
  !!merge <<: *x-serialIDParameterBase
  schema:
    type: integer
    x-go-type: models.MovieID
    x-go-type-import:
      name: db
      path: github.com/danicc097/openapi-go-gin-postgres-sqlc/internal/repos/postgresql/gen/models
  name: movieID
x-notificationIDParameter: &x-notificationIDParameter
  # Generated. DO NOT EDIT.
  !!merge <<: *x-serialIDParameterBase
  schema:
    type: integer
    x-go-type: models.NotificationID
    x-go-type-import:
      name: db
      path: github.com/danicc097/openapi-go-gin-postgres-sqlc/internal/repos/postgresql/gen/models
  name: notificationID
x-projectIDParameter: &x-projectIDParameter
  # Generated. DO NOT EDIT.
  !!merge <<: *x-serialIDParameterBase
  schema:
    type: integer
    x-go-type: models.ProjectID
    x-go-type-import:
      name: db
      path: github.com/danicc097/openapi-go-gin-postgres-sqlc/internal/repos/postgresql/gen/models
  name: projectID
x-teamIDParameter: &x-teamIDParameter
  # Generated. DO NOT EDIT.
  !!merge <<: *x-serialIDParameterBase
  schema:
    type: integer
    x-go-type: models.TeamID
    x-go-type-import:
      name: db
      path: github.com/danicc097/openapi-go-gin-postgres-sqlc/internal/repos/postgresql/gen/models
  name: teamID
x-timeEntryIDParameter: &x-timeEntryIDParameter
  # Generated. DO NOT EDIT.
  !!merge <<: *x-serialIDParameterBase
  schema:
    type: integer
    x-go-type: models.TimeEntryID
    x-go-type-import:
      name: db
      path: github.com/danicc097/openapi-go-gin-postgres-sqlc/internal/repos/postgresql/gen/models
  name: timeEntryID
x-userAPIKeyIDParameter: &x-userAPIKeyIDParameter
  # Generated. DO NOT EDIT.
  !!merge <<: *x-serialIDParameterBase
  schema:
    type: integer
    x-go-type: models.UserAPIKeyID
    x-go-type-import:
      name: db
      path: github.com/danicc097/openapi-go-gin-postgres-sqlc/internal/repos/postgresql/gen/models
  name: userAPIKeyID
x-userNotificationIDParameter: &x-userNotificationIDParameter
  # Generated. DO NOT EDIT.
  !!merge <<: *x-serialIDParameterBase
  schema:
    type: integer
    x-go-type: models.UserNotificationID
    x-go-type-import:
      name: db
      path: github.com/danicc097/openapi-go-gin-postgres-sqlc/internal/repos/postgresql/gen/models
  name: userNotificationID
x-workItemCommentIDParameter: &x-workItemCommentIDParameter
  # Generated. DO NOT EDIT.
  !!merge <<: *x-serialIDParameterBase
  schema:
    type: integer
    x-go-type: models.WorkItemCommentID
    x-go-type-import:
      name: db
      path: github.com/danicc097/openapi-go-gin-postgres-sqlc/internal/repos/postgresql/gen/models
  name: workItemCommentID
x-workItemIDParameter: &x-workItemIDParameter
  # Generated. DO NOT EDIT.
  !!merge <<: *x-serialIDParameterBase
  schema:
    type: integer
    x-go-type: models.WorkItemID
    x-go-type-import:
      name: db
      path: github.com/danicc097/openapi-go-gin-postgres-sqlc/internal/repos/postgresql/gen/models
  name: workItemID
x-workItemTagIDParameter: &x-workItemTagIDParameter
  # Generated. DO NOT EDIT.
  !!merge <<: *x-serialIDParameterBase
  schema:
    type: integer
    x-go-type: models.WorkItemTagID
    x-go-type-import:
      name: db
      path: github.com/danicc097/openapi-go-gin-postgres-sqlc/internal/repos/postgresql/gen/models
  name: workItemTagID
x-workItemTypeIDParameter: &x-workItemTypeIDParameter
  # Generated. DO NOT EDIT.
  !!merge <<: *x-serialIDParameterBase
  schema:
    type: integer
    x-go-type: models.WorkItemTypeID
    x-go-type-import:
      name: db
      path: github.com/danicc097/openapi-go-gin-postgres-sqlc/internal/repos/postgresql/gen/models
  name: workItemTypeID
x-extraSchemaPagElementIDParameter: &x-extraSchemaPagElementIDParameter
  # Generated. DO NOT EDIT.
  !!merge <<: *x-uuidIDParameterBase
  schema:
    type: integer
    x-go-type: models.ExtraSchemaPagElementID
    x-go-type-import:
      name: db
      path: github.com/danicc097/openapi-go-gin-postgres-sqlc/internal/repos/postgresql/gen/models
  name: extraSchemaPagElementID
x-extraSchemaUserIDParameter: &x-extraSchemaUserIDParameter
  # Generated. DO NOT EDIT.
  !!merge <<: *x-uuidIDParameterBase
  schema:
    type: integer
    x-go-type: models.ExtraSchemaUserID
    x-go-type-import:
      name: db
      path: github.com/danicc097/openapi-go-gin-postgres-sqlc/internal/repos/postgresql/gen/models
  name: extraSchemaUserID
x-userIDParameter: &x-userIDParameter
  # Generated. DO NOT EDIT.
  !!merge <<: *x-uuidIDParameterBase
  schema:
    type: integer
    x-go-type: models.UserID
    x-go-type-import:
      name: db
      path: github.com/danicc097/openapi-go-gin-postgres-sqlc/internal/repos/postgresql/gen/models
  name: userID
# <<<--- END OF ANCHORS MODELS GENERATION. DO NOT EDIT. --->>>
#
#
openapi: 3.0.3
info:
  description: openapi-go-gin-postgres-sqlc
  license:
    name: Apache-2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  title: OpenAPI openapi-go-gin-postgres-sqlc
  version: 2.0.0
servers:
  # description must match current APP_ENV for Swagger UI docs
  - url: https://localhost:8090/v2
    description: dev
  - url: https://myapp.e2e.localhost/api/v2
    description: e2e
  - url: https://myapp.prod.localhost/api/v2
    description: prod
  # for tests validation middleware to work on random port.
  - url: /v2
  - url: /
tags:
  - description: Operations about user
    name: user
paths:
  /auth/myprovider/callback:
    get:
      operationId: MyProviderCallback
      responses:
        302:
          description: Callback for MyProvider auth server
          headers:
            Location:
              description: The URL to which the client should be redirected based on auth:redirect-uri cookie.
              schema:
                type: string
      tags:
        - oidc
  /auth/myprovider/login:
    get:
      operationId: MyProviderLogin
      parameters:
        - name: auth-redirect-uri
          required: true
          schema:
            type: string
          in: query
      responses:
        302:
          description: Redirect to MyProvider auth server login
          headers:
            Location:
              description: MyProvider login screen.
              schema:
                type: string
      tags:
        - oidc
  /events:
    get:
      operationId: Events
      parameters:
        - name: projectName
          required: true
          schema:
            $ref: '#/components/schemas/ProjectName'
          in: query
        - name: topics
          required: true
          schema:
            $ref: '#/components/schemas/Topics'
          in: query
      responses:
        200:
          description: events
          content:
            text/event-stream:
              schema:
                type: string
      tags:
        - events
  /notifications/user/page:
    get:
      description: ""
      summary: Get paginated user notifications
      operationId: GetPaginatedNotifications
      parameters:
        - *x-paginationLimitParameter
        - *x-paginationDirectionParameter
        - *x-paginationCursorParameter
      tags:
        - notifications
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationsResponse'
        !!merge <<: *x-error-response
      !!merge <<: *x-require-authenticated
  /ping:
    get:
      description: ""
      summary: Ping pongs
      operationId: Ping
      responses:
        200:
          description: OK
          content:
            text/plain:
              schema:
                type: string
                example: pong
        !!merge <<: *x-error-response
  /openapi.yaml:
    get:
      summary: Returns this very OpenAPI spec.
      operationId: OpenapiYamlGet
      responses:
        200:
          description: OpenAPI YAML file.
          content:
            application/x-yaml:
              schema:
                type: string
                format: binary
  /admin/ping:
    get:
      summary: Ping pongs
      !!merge <<: *x-require-authenticated
      operationId: AdminPing
      responses:
        200:
          description: OK
          content:
            text/plain:
              schema:
                type: string
                example: pong
        !!merge <<: *x-error-response
      tags:
        - admin
      x-required-role: admin
  /project/{projectName}/team/:
    post:
      summary: create team.
      !!merge <<: *x-require-authenticated
      operationId: CreateTeam
      parameters:
        - $ref: '#/components/parameters/ProjectName'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTeamRequest'
        required: true
      responses:
        201:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamResponse'
        !!merge <<: *x-error-response
      tags:
        - team
  /team/{teamID}:
    get:
      summary: get team.
      !!merge <<: *x-require-authenticated
      operationId: GetTeam
      parameters:
        - *x-teamIDParameter
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamResponse'
        !!merge <<: *x-error-response
      tags:
        - team
    patch:
      summary: update team.
      !!merge <<: *x-require-authenticated
      operationId: UpdateTeam
      parameters:
        - *x-teamIDParameter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTeamRequest'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamResponse'
        !!merge <<: *x-error-response
      tags:
        - team
    delete:
      summary: delete team.
      !!merge <<: *x-require-authenticated
      operationId: DeleteTeam
      parameters:
        - *x-teamIDParameter
      responses:
        204:
          description: Success.
        !!merge <<: *x-error-response
      tags:
        - team
  /project/{projectName}/work-item-tag/:
    post:
      summary: create workitemtag.
      !!merge <<: *x-require-authenticated
      operationId: CreateWorkItemTag
      parameters:
        - $ref: '#/components/parameters/ProjectName'
      x-required-scopes:
        - work-item-tag:create
      x-required-role: manager
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkItemTagRequest'
        required: true
      responses:
        201:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItemTagResponse'
        !!merge <<: *x-error-response
      tags:
        - workItemTag
  /project/{projectName}/activity/:
    post:
      summary: create activity.
      !!merge <<: *x-require-authenticated
      operationId: CreateActivity
      parameters:
        - $ref: '#/components/parameters/ProjectName'
      x-required-scopes:
        - activity:create
      x-required-role: manager
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateActivityRequest'
        required: true
      responses:
        201:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityResponse'
        !!merge <<: *x-error-response
      tags:
        - activity
  /time-entry/:
    post:
      summary: create time entry.
      !!merge <<: *x-require-authenticated
      operationId: CreateTimeEntry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTimeEntryRequest'
        required: true
      responses:
        201:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeEntryResponse'
        !!merge <<: *x-error-response
      tags:
        - timeEntry
  /time-entry/{timeEntryID}:
    get:
      summary: get time-entry.
      !!merge <<: *x-require-authenticated
      operationId: GetTimeEntry
      parameters:
        - *x-timeEntryIDParameter
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeEntryResponse'
        !!merge <<: *x-error-response
      tags:
        - timeEntry
    patch:
      summary: update time-entry.
      !!merge <<: *x-require-authenticated
      operationId: UpdateTimeEntry
      parameters:
        - *x-timeEntryIDParameter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTimeEntryRequest'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeEntryResponse'
        !!merge <<: *x-error-response
      tags:
        - timeEntry
    delete:
      summary: delete time-entry.
      !!merge <<: *x-require-authenticated
      operationId: DeleteTimeEntry
      parameters:
        - *x-timeEntryIDParameter
      responses:
        204:
          description: Success.
        !!merge <<: *x-error-response
      tags:
        - timeEntry
  /activity/{activityID}:
    get:
      summary: get activity.
      !!merge <<: *x-require-authenticated
      operationId: GetActivity
      parameters:
        - *x-activityIDParameter
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityResponse'
        !!merge <<: *x-error-response
      tags:
        - activity
    patch:
      summary: update activity.
      !!merge <<: *x-require-authenticated
      operationId: UpdateActivity
      x-required-scopes:
        - activity:edit
      x-required-role: manager
      parameters:
        - *x-activityIDParameter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateActivityRequest'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityResponse'
        !!merge <<: *x-error-response
      tags:
        - activity
    delete:
      summary: delete activity.
      !!merge <<: *x-require-authenticated
      operationId: DeleteActivity
      x-required-scopes:
        - activity:delete
      x-required-role: manager
      parameters:
        - *x-activityIDParameter
      responses:
        204:
          description: Success.
        !!merge <<: *x-error-response
      tags:
        - activity
  /work-item-tag/{workItemTagID}:
    get:
      summary: get workitemtag.
      !!merge <<: *x-require-authenticated
      operationId: GetWorkItemTag
      parameters:
        - *x-workItemTagIDParameter
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItemTagResponse'
        !!merge <<: *x-error-response
      tags:
        - workItemTag
    patch:
      summary: update workitemtag.
      !!merge <<: *x-require-authenticated
      operationId: UpdateWorkItemTag
      parameters:
        - *x-workItemTagIDParameter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWorkItemTagRequest'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItemTagResponse'
        !!merge <<: *x-error-response
      tags:
        - workItemTag
    delete:
      summary: delete workitemtag.
      !!merge <<: *x-require-authenticated
      operationId: DeleteWorkItemTag
      parameters:
        - *x-workItemTagIDParameter
      responses:
        204:
          description: Success.
        !!merge <<: *x-error-response
      tags:
        - workItemTag
  /project/{projectName}/work-item-type/:
    post:
      summary: create workitemtype.
      !!merge <<: *x-require-authenticated
      operationId: CreateWorkItemType
      parameters:
        - $ref: '#/components/parameters/ProjectName'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkItemTypeRequest'
        required: true
      responses:
        201:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItemTypeResponse'
        !!merge <<: *x-error-response
      tags:
        - workItemType
  /work-item-type/{workItemTypeID}:
    get:
      summary: get workitemtype.
      !!merge <<: *x-require-authenticated
      operationId: GetWorkItemType
      parameters:
        - *x-workItemTypeIDParameter
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItemTypeResponse'
        !!merge <<: *x-error-response
      tags:
        - workItemType
    patch:
      summary: update workitemtype.
      !!merge <<: *x-require-authenticated
      operationId: UpdateWorkItemType
      parameters:
        - *x-workItemTypeIDParameter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWorkItemTypeRequest'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItemTypeResponse'
        !!merge <<: *x-error-response
      tags:
        - workItemType
    delete:
      summary: delete workitemtype.
      !!merge <<: *x-require-authenticated
      operationId: DeleteWorkItemType
      parameters:
        - *x-workItemTypeIDParameter
      responses:
        204:
          description: Success.
        !!merge <<: *x-error-response
      tags:
        - workItemType
  /user/page:
    get:
      description: ""
      summary: Get paginated users
      operationId: GetPaginatedUsers
      parameters:
        - *x-paginationLimitParameter
        - *x-paginationDirectionParameter
        - *x-paginationCursorParameter
        - *x-paginationColumnParameter
        - in: query
          name: searchQuery
          style: deepObject
          explode: true
          allowReserved: true
          schema:
            $ref: '#/components/schemas/GetPaginatedUsersQueryParameters'
      tags:
        - user
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUsersResponse'
        !!merge <<: *x-error-response
      !!merge <<: *x-require-authenticated
  /user/me:
    get:
      summary: returns the logged in user
      !!merge <<: *x-require-authenticated
      operationId: GetCurrentUser
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: ok
      tags:
        - user
  /user/{id}/authorization:
    patch:
      summary: updates user role and scopes by id
      !!merge <<: *x-require-authenticated
      operationId: UpdateUserAuthorization
      parameters:
        - *x-uuidParameter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserAuthRequest'
        description: Updated user object
        required: true
      responses:
        204:
          description: User auth updated successfully.
      x-required-scopes:
        - scopes:write
      x-required-role: admin
      tags:
        - user
  /user/{id}:
    delete:
      summary: deletes the user by id
      !!merge <<: *x-require-authenticated
      operationId: DeleteUser
      parameters:
        - *x-uuidParameter
      responses:
        204:
          description: User deleted successfully
        !!merge <<: *x-error-response
      tags:
        - user
      x-required-scopes:
        - users:delete
      x-required-role: admin
    patch:
      summary: updates the user by id
      !!merge <<: *x-require-authenticated
      operationId: UpdateUser
      parameters:
        - *x-uuidParameter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
        description: Updated user object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: ok
      tags:
        - user
      x-required-role: user
  # TODO: useless, if no teams will just show "No teams" and "Add team" button
  # same thing for tags
  /project/{projectName}/initialize:
    post:
      summary: creates initial data (teams, tags...) for a new project
      !!merge <<: *x-require-authenticated
      operationId: InitializeProject
      parameters:
        - $ref: '#/components/parameters/ProjectName'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectBoardRequest'
        required: true
      responses:
        204:
          description: Success.
      tags:
        - project
      x-required-role: admin
  /project/{projectName}/:
    get:
      summary: returns board data for a project
      !!merge <<: *x-require-authenticated
      operationId: GetProject
      parameters:
        - $ref: '#/components/parameters/ProjectName'
      responses:
        200:
          description: Project.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelsProject'
      tags:
        - project
  /project/{projectName}/config:
    get:
      summary: returns the project configuration
      !!merge <<: *x-require-authenticated
      operationId: GetProjectConfig
      parameters:
        - $ref: '#/components/parameters/ProjectName'
      responses:
        200:
          description: Project config.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectConfig'
      x-required-role: admin
      tags:
        - project
    put:
      summary: updates the project configuration
      !!merge <<: *x-require-authenticated
      operationId: UpdateProjectConfig
      parameters:
        - $ref: '#/components/parameters/ProjectName'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectConfig'
      responses:
        204:
          description: Config updated successfully.
      x-required-role: admin
      tags:
        - project
  /project/{projectName}/board:
    get:
      summary: returns board data for a project
      !!merge <<: *x-require-authenticated
      operationId: GetProjectBoard
      parameters:
        - $ref: '#/components/parameters/ProjectName'
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectBoard'
      tags:
        - project
  # https://stackoverflow.com/a/32820784/11995537
  # This appears to be the simplest solution
  # POST /project/ # not in our case since theyre hardcoded to allow for complex logic per project
  # POST /project/{projectName}/team
  # GET /project/{projectName}/team
  # GET/PATCH /team/{teamId}
  # POST /team/{teamId}/workitem since [/project/{projectName}]/team/{teamId}/workitem has duplicated info in [].
  # we just care that parent is a team
  # NOTE: if we don't want to use ids for convenience, we just need to make it unique, e.g. github
  # GET /repos/{owner}/{repo}/commits
  # in our case this is similar to work item tags by name, which are shared by a whole project,
  # so a project is the direct parent of the tag
  # GET /project/{projectName}/work-item-tags/{workItemTagName}
  # however with an id we would do
  # GET /work-item-tags/{workItemTagId}
  /project/{projectName}/workitems:
    get:
      summary: returns workitems for a project
      !!merge <<: *x-require-authenticated
      operationId: GetProjectWorkitems
      parameters:
        - $ref: '#/components/parameters/ProjectName'
        - in: query
          schema:
            type: boolean
          name: open
        - in: query
          schema:
            type: boolean
          name: deleted
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItemResponse'
      tags:
        - project
  /work-item/:
    post:
      summary: create workitem
      !!merge <<: *x-require-authenticated
      operationId: CreateWorkitem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkItemRequest'
        required: true
      responses:
        201:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItemResponse'
      tags:
        - workItem
  /work-item/{workItemID}/:
    get:
      summary: get workitem
      !!merge <<: *x-require-authenticated
      operationId: GetWorkItem
      parameters:
        - *x-workItemIDParameter
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItemResponse'
      tags:
        - workItem
    patch:
      summary: update workitem
      !!merge <<: *x-require-authenticated
      operationId: UpdateWorkitem
      parameters:
        - *x-workItemIDParameter
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItemResponse'
      tags:
        - workItem
    delete:
      summary: delete workitem
      !!merge <<: *x-require-authenticated
      operationId: DeleteWorkitem
      parameters:
        - *x-workItemIDParameter
      responses:
        204:
          description: Success.
      tags:
        - workItem
  /work-item/page:
    get:
      description: ""
      summary: Get paginated user work-item
      operationId: GetPaginatedWorkItem
      parameters:
        - *x-paginationLimitParameter
        - *x-paginationDirectionParameter
        - *x-paginationCursorParameter
        - in: query
          name: searchQuery
          style: deepObject
          explode: true
          allowReserved: true
          schema:
            # $ref: '#/components/schemas/GetPaginatedWorkItemQueryParameters'
            $ref: '#/components/schemas/GetCacheDemoWorkItemQueryParameters'
      tags:
        - workItem
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDemoWorkItemsResponse'
        !!merge <<: *x-error-response
      !!merge <<: *x-require-authenticated
  /work-item/{workItemID}/comment/:
    post:
      summary: create work item comment.
      !!merge <<: *x-require-authenticated
      operationId: CreateWorkItemComment
      parameters:
        - !!merge <<: *x-serialIDParameterBase
          name: workItemID
      x-required-scopes:
        - work-item-comment:create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkItemCommentRequest'
        required: true
      responses:
        201:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItemCommentResponse'
        !!merge <<: *x-error-response
      tags:
        - workItemComment
  /work-item/{workItemID}/comment/{workItemCommentID}:
    get:
      summary: get work item comment.
      !!merge <<: *x-require-authenticated
      operationId: GetWorkItemComment
      parameters:
        - *x-workItemIDParameter
        - *x-workItemCommentIDParameter
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItemCommentResponse'
        !!merge <<: *x-error-response
      tags:
        - workItemComment
    patch:
      summary: update work item comment.
      !!merge <<: *x-require-authenticated
      operationId: UpdateWorkItemComment
      x-required-scopes:
        - work-item-comment:edit
      parameters:
        - *x-workItemIDParameter
        - *x-workItemCommentIDParameter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWorkItemCommentRequest'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItemCommentResponse'
        !!merge <<: *x-error-response
      tags:
        - workItemComment
    delete:
      summary: delete .
      !!merge <<: *x-require-authenticated
      operationId: DeleteWorkItemComment
      x-required-scopes:
        - work-item-comment:delete
      parameters:
        - *x-workItemIDParameter
        - *x-workItemCommentIDParameter
      responses:
        204:
          description: Success.
        !!merge <<: *x-error-response
      tags:
        - workItemComment
components:
  parameters:
    ProjectName:
      description: Project name
      explode: false
      in: path
      name: projectName
      required: true
      schema:
        $ref: '#/components/schemas/ProjectName'
      example: demo
      style: simple
    UUID: *x-uuidParameter
  schemas:
    CreateActivityRequest: # Generated schema. DO NOT EDIT.
      properties:
        description:
          type: string
        isProductive:
          type: boolean
        name:
          type: string
      required:
        - description
        - isProductive
        - name
      type: object
      x-gen-struct: CreateActivityRequest
      x-is-generated: true
    CreateDemoTwoWorkItemRequest: # Generated schema. DO NOT EDIT.
      properties:
        base:
          $ref: '#/components/schemas/ModelsWorkItemCreateParams'
        demoTwoProject:
          $ref: '#/components/schemas/ModelsDemoTwoWorkItemCreateParams'
        members:
          items:
            $ref: '#/components/schemas/ServicesMember'
          type: array
        projectName:
          $ref: '#/components/schemas/ProjectName'
        tagIDs:
          items:
            type: integer
            x-go-type: WorkItemTagID
          type: array
      required:
        - projectName
        - demoTwoProject
        - base
        - tagIDs
        - members
      type: object
      x-gen-struct: CreateDemoTwoWorkItemRequest
      x-is-generated: true
    CreateDemoWorkItemRequest: # Generated schema. DO NOT EDIT.
      properties:
        base:
          $ref: '#/components/schemas/ModelsWorkItemCreateParams'
        demoProject:
          $ref: '#/components/schemas/ModelsDemoWorkItemCreateParams'
        members:
          items:
            $ref: '#/components/schemas/ServicesMember'
          type: array
        projectName:
          $ref: '#/components/schemas/ProjectName'
        tagIDs:
          items:
            type: integer
            x-go-type: WorkItemTagID
          type: array
      required:
        - projectName
        - demoProject
        - base
        - tagIDs
        - members
      type: object
      x-gen-struct: CreateDemoWorkItemRequest
      x-is-generated: true
    CreateProjectBoardRequest: # Generated schema. DO NOT EDIT.
      properties:
        tags:
          items:
            $ref: '#/components/schemas/ModelsWorkItemTagCreateParams'
          nullable: true
          type: array
        teams:
          items:
            $ref: '#/components/schemas/ModelsTeamCreateParams'
          nullable: true
          type: array
      type: object
      x-gen-struct: CreateProjectBoardRequest
      x-is-generated: true
    CreateTeamRequest: # Generated schema. DO NOT EDIT.
      properties:
        description:
          type: string
        name:
          type: string
      required:
        - description
        - name
      type: object
      x-gen-struct: CreateTeamRequest
      x-is-generated: true
    CreateWorkItemCommentRequest: # Generated schema. DO NOT EDIT.
      properties:
        message:
          type: string
        userID:
          $ref: '#/components/schemas/ModelsUserID'
        workItemID:
          type: integer
          x-go-type: WorkItemID
      required:
        - message
        - userID
        - workItemID
      type: object
      x-gen-struct: CreateWorkItemCommentRequest
      x-is-generated: true
    CreateWorkItemTagRequest: # Generated schema. DO NOT EDIT.
      properties:
        color:
          pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          type: string
        description:
          type: string
        name:
          type: string
      required:
        - color
        - description
        - name
      type: object
      x-gen-struct: CreateWorkItemTagRequest
      x-is-generated: true
    CreateWorkItemTypeRequest: # Generated schema. DO NOT EDIT.
      properties:
        color:
          pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          type: string
        description:
          type: string
        name:
          type: string
      required:
        - color
        - description
        - name
      type: object
      x-gen-struct: CreateWorkItemTypeRequest
      x-is-generated: true
    ModelsDemoTwoWorkItem: # Generated schema. DO NOT EDIT.
      properties:
        customDateForProject2:
          format: date-time
          nullable: true
          type: string
        workItemID:
          type: integer
          x-go-type: WorkItemID
      required:
        - workItemID
      type: object
      x-go-type: DemoTwoWorkItem
      x-is-generated: true
    ModelsDemoTwoWorkItemCreateParams: # Generated schema. DO NOT EDIT.
      properties:
        customDateForProject2:
          format: date-time
          nullable: true
          type: string
      type: object
      x-go-type: DemoTwoWorkItemCreateParams
      x-is-generated: true
    ModelsDemoWorkItem: # Generated schema. DO NOT EDIT.
      properties:
        lastMessageAt:
          format: date-time
          type: string
        line:
          type: string
        ref:
          pattern: ^[0-9]{8}$
          type: string
        reopened:
          type: boolean
        workItemID:
          type: integer
          x-go-type: WorkItemID
      required:
        - workItemID
        - ref
        - line
        - lastMessageAt
        - reopened
      type: object
      x-gen-struct: ModelsDemoWorkItem
      x-is-generated: true
      x-go-type: DemoWorkItem
    ModelsDemoWorkItemCreateParams: # Generated schema. DO NOT EDIT.
      properties:
        lastMessageAt:
          format: date-time
          type: string
        line:
          type: string
        ref:
          pattern: ^[0-9]{8}$
          type: string
        reopened:
          type: boolean
      required:
        - lastMessageAt
        - line
        - ref
        - reopened
      type: object
      x-go-type: DemoWorkItemCreateParams
      x-is-generated: true
    ModelsKanbanStep: # Generated schema. DO NOT EDIT.
      properties:
        color:
          pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          type: string
        description:
          type: string
        kanbanStepID:
          type: integer
          x-go-type: KanbanStepID
        name:
          type: string
        projectID:
          type: integer
          x-go-type: ProjectID
        stepOrder:
          type: integer
        timeTrackable:
          type: boolean
      required:
        - kanbanStepID
        - projectID
        - stepOrder
        - name
        - description
        - color
        - timeTrackable
      type: object
      x-gen-struct: ModelsKanbanStep
      x-is-generated: true
      x-go-type: KanbanStep
    ModelsNotification: # Generated schema. DO NOT EDIT.
      properties:
        body:
          type: string
        createdAt:
          format: date-time
          type: string
        labels:
          items:
            type: string
          type: array
        link:
          nullable: true
          type: string
        notificationID:
          type: integer
          x-go-type: NotificationID
        notificationType:
          $ref: '#/components/schemas/NotificationType'
        receiver:
          $ref: '#/components/schemas/ModelsUserID'
        sender:
          $ref: '#/components/schemas/ModelsUserID'
        title:
          type: string
      required:
        - notificationID
        - title
        - body
        - labels
        - createdAt
        - sender
        - notificationType
      type: object
      x-go-type: Notification
      x-is-generated: true
    ModelsProject: # Generated schema. DO NOT EDIT.
      properties:
        boardConfig:
          $ref: '#/components/schemas/ProjectConfig'
        createdAt:
          format: date-time
          type: string
        description:
          type: string
        name:
          $ref: '#/components/schemas/ProjectName'
        projectID:
          type: integer
          x-go-type: ProjectID
        updatedAt:
          format: date-time
          type: string
      required:
        - projectID
        - name
        - description
        - boardConfig
        - createdAt
        - updatedAt
      type: object
      x-gen-struct: ModelsProject
      x-is-generated: true
      x-go-type: Project
    ModelsTeam: # Generated schema. DO NOT EDIT.
      properties:
        createdAt:
          format: date-time
          type: string
        description:
          type: string
        name:
          type: string
        projectID:
          type: integer
          x-go-type: ProjectID
        teamID:
          type: integer
          x-go-type: TeamID
        updatedAt:
          format: date-time
          type: string
      required:
        - teamID
        - projectID
        - name
        - description
        - createdAt
        - updatedAt
      type: object
      x-go-type: Team
      x-is-generated: true
    ModelsTeamCreateParams: # Generated schema. DO NOT EDIT.
      properties:
        description:
          type: string
        name:
          type: string
      required:
        - description
        - name
      type: object
      x-go-type: TeamCreateParams
      x-is-generated: true
    ModelsTimeEntry: # Generated schema. DO NOT EDIT.
      properties:
        activityID:
          type: integer
          x-go-type: ActivityID
        comment:
          type: string
        durationMinutes:
          nullable: true
          type: integer
        start:
          format: date-time
          type: string
        teamID:
          nullable: true
          type: integer
          x-go-type: TeamID
        timeEntryID:
          type: integer
          x-go-type: TimeEntryID
        userID:
          $ref: '#/components/schemas/ModelsUserID'
        workItemID:
          nullable: true
          type: integer
          x-go-type: WorkItemID
      required:
        - timeEntryID
        - activityID
        - userID
        - comment
        - start
      type: object
      x-gen-struct: ModelsTimeEntry
      x-is-generated: true
      x-go-type: TimeEntry
    ModelsUser: # Generated schema. DO NOT EDIT.
      properties:
        age:
          nullable: true
          type: integer
        createdAt:
          format: date-time
          type: string
        deletedAt:
          format: date-time
          nullable: true
          type: string
        email:
          type: string
        firstName:
          nullable: true
          type: string
        fullName:
          nullable: true
          type: string
        hasGlobalNotifications:
          type: boolean
        hasPersonalNotifications:
          type: boolean
        lastName:
          nullable: true
          type: string
        scopes:
          $ref: '#/components/schemas/Scopes'
        updatedAt:
          format: date-time
          type: string
        userID:
          $ref: '#/components/schemas/ModelsUserID'
        username:
          type: string
      required:
        - userID
        - username
        - email
        - scopes
        - hasPersonalNotifications
        - hasGlobalNotifications
        - createdAt
        - updatedAt
      type: object
      x-gen-struct: ModelsUser
      x-is-generated: true
      x-go-type: User
    ModelsUserAPIKey: # Generated schema. DO NOT EDIT.
      properties:
        apiKey:
          type: string
        expiresOn:
          format: date-time
          type: string
        userID:
          $ref: '#/components/schemas/ModelsUserID'
      required:
        - apiKey
        - expiresOn
        - userID
      type: object
      x-gen-struct: ModelsUserAPIKey
      x-is-generated: true
      x-go-type: UserAPIKey
    ModelsUserID: # Generated schema. DO NOT EDIT.
      example: cdb15f83-1c5d-4727-98d1-8924ccd1fc01
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
      type: string
      x-go-type: UserID
      x-go-type-import:
        name: uuid
        path: github.com/google/uuid
      x-is-generated: true
    ModelsWorkItem: # Generated schema. DO NOT EDIT.
      properties:
        closedAt:
          format: date-time
          nullable: true
          type: string
        createdAt:
          format: date-time
          type: string
        deletedAt:
          format: date-time
          nullable: true
          type: string
        description:
          type: string
        kanbanStepID:
          type: integer
          x-go-type: KanbanStepID
        metadata:
          additionalProperties: {}
          type: object
        targetDate:
          format: date-time
          type: string
        teamID:
          type: integer
          x-go-type: TeamID
        title:
          type: string
        updatedAt:
          format: date-time
          type: string
        workItemID:
          type: integer
          x-go-type: WorkItemID
        workItemTypeID:
          type: integer
          x-go-type: WorkItemTypeID
      required:
        - workItemID
        - title
        - description
        - workItemTypeID
        - metadata
        - teamID
        - kanbanStepID
        - targetDate
        - createdAt
        - updatedAt
      type: object
      x-gen-struct: ModelsWorkItem
      x-is-generated: true
      x-go-type: WorkItem
    ModelsWorkItemComment: # Generated schema. DO NOT EDIT.
      properties:
        createdAt:
          format: date-time
          type: string
        message:
          type: string
        updatedAt:
          format: date-time
          type: string
        userID:
          $ref: '#/components/schemas/ModelsUserID'
        workItemCommentID:
          type: integer
          x-go-type: WorkItemCommentID
        workItemID:
          type: integer
          x-go-type: WorkItemID
      required:
        - workItemCommentID
        - workItemID
        - userID
        - message
        - createdAt
        - updatedAt
      type: object
      x-gen-struct: ModelsWorkItemComment
      x-is-generated: true
      x-go-type: WorkItemComment
    ModelsWorkItemCreateParams: # Generated schema. DO NOT EDIT.
      properties:
        closedAt:
          format: date-time
          nullable: true
          type: string
        description:
          type: string
        kanbanStepID:
          type: integer
          x-go-type: KanbanStepID
        metadata:
          additionalProperties: {}
          type: object
        targetDate:
          format: date-time
          type: string
        teamID:
          type: integer
          x-go-type: TeamID
        title:
          type: string
        workItemTypeID:
          type: integer
          x-go-type: WorkItemTypeID
      required:
        - description
        - kanbanStepID
        - metadata
        - targetDate
        - teamID
        - title
        - workItemTypeID
      type: object
      x-go-type: WorkItemCreateParams
      x-is-generated: true
    ModelsWorkItemTag: # Generated schema. DO NOT EDIT.
      properties:
        color:
          pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          type: string
        deletedAt:
          format: date-time
          nullable: true
          type: string
        description:
          type: string
        name:
          type: string
        projectID:
          type: integer
          x-go-type: ProjectID
        workItemTagID:
          type: integer
          x-go-type: WorkItemTagID
      required:
        - workItemTagID
        - projectID
        - name
        - description
        - color
      type: object
      x-gen-struct: ModelsWorkItemTag
      x-is-generated: true
      x-go-type: WorkItemTag
    ModelsWorkItemTagCreateParams: # Generated schema. DO NOT EDIT.
      properties:
        color:
          pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          type: string
        description:
          type: string
        name:
          type: string
      required:
        - color
        - description
        - name
      type: object
      x-go-type: WorkItemTagCreateParams
      x-is-generated: true
    ModelsWorkItemType: # Generated schema. DO NOT EDIT.
      properties:
        color:
          pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          type: string
        description:
          type: string
        name:
          type: string
        projectID:
          type: integer
          x-go-type: ProjectID
        workItemTypeID:
          type: integer
          x-go-type: WorkItemTypeID
      required:
        - workItemTypeID
        - projectID
        - name
        - description
        - color
      type: object
      x-gen-struct: ModelsWorkItemType
      x-is-generated: true
      x-go-type: WorkItemType
    PaginatedNotificationsResponse: # Generated schema. DO NOT EDIT.
      properties:
        items:
          items:
            $ref: '#/components/schemas/NotificationResponse'
          nullable: true
          type: array
        page:
          $ref: '#/components/schemas/PaginationPage'
      required:
        - page
        - items
      type: object
      x-gen-struct: PaginatedNotificationsResponse
      x-is-generated: true
    PaginatedUsersResponse: # Generated schema. DO NOT EDIT.
      properties:
        items:
          items:
            $ref: '#/components/schemas/UserResponse'
          nullable: true
          type: array
        page:
          $ref: '#/components/schemas/PaginationPage'
      required:
        - page
        - items
      type: object
      x-gen-struct: PaginatedUsersResponse
      x-is-generated: true
    PaginationPage: # Generated schema. DO NOT EDIT.
      properties:
        nextCursor:
          type: string
      type: object
      x-gen-struct: PaginationPage
      x-is-generated: true
    ProjectBoard: # Generated schema. DO NOT EDIT.
      properties:
        projectName:
          $ref: '#/components/schemas/ProjectName'
      required:
        - projectName
      type: object
      x-gen-struct: ProjectBoard
      x-is-generated: true
    ServicesMember: # Generated schema. DO NOT EDIT.
      properties:
        role:
          $ref: '#/components/schemas/WorkItemRole'
        userID:
          $ref: '#/components/schemas/ModelsUserID'
      required:
        - role
        - userID
      type: object
      x-is-generated: true
    SharedWorkItemJoins: # Generated schema. DO NOT EDIT.
      properties:
        members:
          items:
            $ref: '#/components/schemas/ModelsWorkItemM2MAssigneeWIA'
          nullable: true
          type: array
        timeEntries:
          items:
            $ref: '#/components/schemas/ModelsTimeEntry'
          nullable: true
          type: array
        workItemComments:
          items:
            $ref: '#/components/schemas/ModelsWorkItemComment'
          nullable: true
          type: array
        workItemTags:
          items:
            $ref: '#/components/schemas/ModelsWorkItemTag'
          nullable: true
          type: array
        workItemType:
          $ref: '#/components/schemas/ModelsWorkItemType'
      type: object
      x-gen-struct: SharedWorkItemJoins
      x-is-generated: true
    UpdateActivityRequest: # Generated schema. DO NOT EDIT.
      properties:
        description:
          type: string
        isProductive:
          type: boolean
        name:
          type: string
      type: object
      x-gen-struct: UpdateActivityRequest
      x-is-generated: true
    UpdateTeamRequest: # Generated schema. DO NOT EDIT.
      properties:
        description:
          type: string
        name:
          type: string
      type: object
      x-gen-struct: UpdateTeamRequest
      x-is-generated: true
    UpdateWorkItemCommentRequest: # Generated schema. DO NOT EDIT.
      properties:
        message:
          type: string
        userID:
          $ref: '#/components/schemas/ModelsUserID'
        workItemID:
          type: integer
          x-go-type: WorkItemID
      type: object
      x-gen-struct: UpdateWorkItemCommentRequest
      x-is-generated: true
    UpdateWorkItemTagRequest: # Generated schema. DO NOT EDIT.
      properties:
        color:
          pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          type: string
        description:
          type: string
        name:
          type: string
      type: object
      x-gen-struct: UpdateWorkItemTagRequest
      x-is-generated: true
    UpdateWorkItemTypeRequest: # Generated schema. DO NOT EDIT.
      properties:
        color:
          pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          type: string
        description:
          type: string
        name:
          type: string
      type: object
      x-gen-struct: UpdateWorkItemTypeRequest
      x-is-generated: true
    Direction:
      type: string
      enum:
        - asc
        - desc
    ProjectConfig:
      properties:
        fields:
          items:
            $ref: '#/components/schemas/ProjectConfigField'
          type: array
        header:
          items:
            type: string
          type: array
        visualization:
          type: object
      type: object
    ProjectConfigField:
      properties:
        isEditable:
          type: boolean
        isVisible:
          type: boolean
        name:
          type: string
        path:
          type: string
        showCollapsed:
          type: boolean
      required:
        - isEditable
        - showCollapsed
        - isVisible
        - path
        - name
      type: object
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      required:
        - messages
      properties:
        detail:
          title: Detail
          description: Additional details for validation errors
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
        messages:
          title: Messages
          description: Descriptive error messages to show in a callout
          type: array
          items:
            type: string
    ErrorCode:
      description: |
        Represents standardized HTTP error types.
        Notes:
        - 'Private' marks an error to be hidden in response.
      type: string
      enum:
        - Unknown
        - Private
        - NotFound
        - InvalidArgument
        - AlreadyExists
        - Unauthorized
        - Unauthenticated
        - RequestValidation
        - ResponseValidation
        - OIDC
        - InvalidRole
        - InvalidScope
        - InvalidUUID
    HTTPError:
      description: represents an error message response.
      type: object
      properties:
        title:
          type: string
        detail:
          type: string
        status:
          type: integer
        error:
          type: string
        loc:
          title: Location
          description: location in body path, if any
          type: array
          items:
            type: string
        type:
          $ref: '#/components/schemas/ErrorCode'
        validationError:
          $ref: '#/components/schemas/HTTPValidationError'
      required:
        - title
        - detail
        - status
        - error
        - type
    Topics:
      type: array
      items:
        $ref: '#/components/schemas/Topic'
    Topic:
      description: string identifiers for SSE event listeners.
      type: string
      enum:
        # will not alert directly, just show badge when a new notification is sent.
        # - UserNotifications
        # - ManagerNotifications
        # - AdminNotifications
        # will use personalSubs channel per userID since it depends on
        # members per specific workitem
        # When a work item or related entities are updated, ie calling AssignUser, AssignTags...
        # subscribers will receive a rest WorkItem with appropiate joins.
        # we can notifications when workitem where member is current user is updated
        - AppDebug
        - WorkItemUpdated
        - TeamCreated
        - GlobalAlerts
    Scope: # Generated from scopes.json keys. DO NOT EDIT.
      type: string
      enum: ["project-member", "users:read", "users:write", "users:delete", "scopes:write", "team-settings:write", "project-settings:write", "activity:create", "activity:edit", "activity:delete", "work-item-tag:create", "work-item-tag:edit", "work-item-tag:delete", "work-item:review", "work-item-comment:create", "work-item-comment:edit", "work-item-comment:delete"]
      x-is-generated: true
      description: is generated from scopes.json keys.
    Role: # Generated from roles.json keys. DO NOT EDIT.
      type: string
      enum: ["guest", "user", "advancedUser", "manager", "admin", "superAdmin"]
      x-is-generated: true
      description: is generated from roles.json keys.
    WorkItemRole: # Generated from database enum 'work_item_role'. DO NOT EDIT.
      title: WorkItem role
      type: string
      x-is-generated: true
      enum: ["preparer", "reviewer"]
      description: is generated from database enum 'work_item_role'.
      x-oapi-ignore: true
    UpdateUserRequest:
      description: represents User data to update
      example:
        firstName: Jane
        lastName: Doe
      properties:
        firstName:
          description: originally from auth server but updatable
          type: string
          pattern: ^[\p{L} '-]+$
        lastName:
          description: originally from auth server but updatable
          type: string
          pattern: ^[\p{L} '-]+$
      type: object
    UpdateUserAuthRequest:
      description: represents User authorization data to update
      example:
        role: manager
        scopes:
          - users:read
      properties:
        role:
          $ref: '#/components/schemas/Role'
        scopes:
          $ref: '#/components/schemas/Scopes'
      type: object
    ValidationError:
      title: ValidationError
      required:
        - loc
        - msg
        - detail
        - type
      type: object
      properties:
        loc:
          title: Location
          description: location in body path, if any
          type: array
          items:
            type: string
        msg:
          title: Message
          description: should always be shown to the user
          type: string
        detail:
          description: verbose details of the error
          title: Error details
          type: object
          required:
            - schema
            - value
          properties:
            schema:
              type: object
            value:
              type: string
        ctx:
          title: Contextual information
          type: object
    UuidUUID:
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
      type: string
      x-go-type: uuid.UUID
      x-go-type-import:
        name: uuid
        path: github.com/google/uuid
    WorkItemResponse:
      oneOf:
        - $ref: '#/components/schemas/DemoWorkItemResponse'
        - $ref: '#/components/schemas/DemoTwoWorkItemResponse'
      discriminator:
        propertyName: projectName
        mapping:
          demo: '#/components/schemas/DemoWorkItemResponse'
          demo_two: '#/components/schemas/DemoTwoWorkItemResponse'
      x-use-server-type: true
      # TODO: since this is a rest type but defined in spec, for server gen we require referencing models
      # we will pass all x-spec-rest-type schemas to oapi-codegen and if so, we prepend `models.`
      # to server generation (no models are generated in server).
      # TODO: get rid of x-use-server-type when everything is merged
      x-spec-rest-type: true
    Scopes:
      type: array
      items:
        $ref: '#/components/schemas/Scope'
    CreateWorkItemRequest:
      oneOf:
        - $ref: '#/components/schemas/CreateDemoWorkItemRequest'
        - $ref: '#/components/schemas/CreateDemoTwoWorkItemRequest'
      discriminator:
        propertyName: projectName
        mapping:
          demo: '#/components/schemas/CreateDemoWorkItemRequest'
          demo_two: '#/components/schemas/CreateDemoTwoWorkItemRequest'
    NotificationType: # Generated from database enum 'notification_type'. DO NOT EDIT.
      description: is generated from database enum 'notification_type'.
      type: string
      x-is-generated: true
      enum: ["personal", "global"]
      x-oapi-ignore: true
    DemoTwoWorkItemTypes: # Generated from work_item_types table. DO NOT EDIT.
      type: string
      enum: ["Type 1", "Type 2", "Another type"]
      x-is-generated: true
      description: is generated from work_item_types table.
    DemoWorkItemTypes: # Generated from work_item_types table. DO NOT EDIT.
      type: string
      enum: ["Type 1"]
      x-is-generated: true
      description: is generated from work_item_types table.
    DemoKanbanSteps: # Generated from kanban_steps table. DO NOT EDIT.
      type: string
      enum: ["Disabled", "Received", "Under review", "Work in progress"]
      x-is-generated: true
      description: is generated from kanban_steps table.
    DemoTwoKanbanSteps: # Generated from kanban_steps table. DO NOT EDIT.
      type: string
      enum: ["Received"]
      x-is-generated: true
      description: is generated from kanban_steps table.
    ModelsWorkItemM2MAssigneeWIA: # Generated schema. DO NOT EDIT.
      properties:
        role:
          $ref: '#/components/schemas/WorkItemRole'
        user:
          $ref: '#/components/schemas/ModelsUser'
      required:
        - user
        - role
      type: object
      x-go-type: WorkItemM2MAssigneeWIA
      x-is-generated: true
    CreateTimeEntryRequest:
      properties:
        activityID:
          type: integer
          x-go-type: ActivityID
        comment:
          type: string
        durationMinutes:
          nullable: true
          type: integer
        start:
          format: date-time
          type: string
        teamID:
          nullable: true
          type: integer
          x-go-type: TeamID
        userID:
          $ref: '#/components/schemas/ModelsUserID'
        workItemID:
          nullable: true
          type: integer
          x-go-type: WorkItemID
      required:
        - activityID
        - comment
        - start
        - userID
      type: object
      x-gen-struct: CreateTimeEntryRequest
      x-is-generated: true
    UpdateTimeEntryRequest:
      properties:
        activityID:
          type: integer
          x-go-type: ActivityID
        comment:
          type: string
        durationMinutes:
          nullable: true
          type: integer
        start:
          format: date-time
          type: string
        teamID:
          nullable: true
          type: integer
          x-go-type: TeamID
        userID:
          $ref: '#/components/schemas/ModelsUserID'
        workItemID:
          nullable: true
          type: integer
          x-go-type: WorkItemID
      type: object
      x-gen-struct: UpdateTimeEntryRequest
      x-is-generated: true
    DemoTwoWorkItemResponse:
      properties:
        closedAt:
          format: date-time
          nullable: true
          type: string
        createdAt:
          format: date-time
          type: string
        deletedAt:
          format: date-time
          nullable: true
          type: string
        demoTwoWorkItem:
          $ref: '#/components/schemas/ModelsDemoTwoWorkItem'
        description:
          type: string
        kanbanStepID:
          type: integer
          x-go-type: KanbanStepID
        members:
          items:
            $ref: '#/components/schemas/ModelsWorkItemM2MAssigneeWIA'
          nullable: true
          type: array
        metadata:
          additionalProperties: {}
          type: object
        projectName:
          $ref: '#/components/schemas/ProjectName'
        targetDate:
          format: date-time
          type: string
        teamID:
          nullable: true
          type: integer
          x-go-type: TeamID
        timeEntries:
          items:
            $ref: '#/components/schemas/ModelsTimeEntry'
          nullable: true
          type: array
        title:
          type: string
        updatedAt:
          format: date-time
          type: string
        workItemComments:
          items:
            $ref: '#/components/schemas/ModelsWorkItemComment'
          nullable: true
          type: array
        workItemID:
          type: integer
          x-go-type: WorkItemID
        workItemTags:
          items:
            $ref: '#/components/schemas/ModelsWorkItemTag'
          nullable: true
          type: array
        workItemType:
          $ref: '#/components/schemas/ModelsWorkItemType'
        workItemTypeID:
          type: integer
          x-go-type: WorkItemTypeID
      required:
        - demoTwoWorkItem
        - workItemID
        - title
        - description
        - workItemTypeID
        - metadata
        - teamID
        - kanbanStepID
        - targetDate
        - createdAt
        - updatedAt
        - projectName
      type: object
      x-gen-struct: DemoTwoWorkItemResponse
      x-is-generated: true
    DemoWorkItemResponse:
      properties:
        closedAt:
          format: date-time
          nullable: true
          type: string
        createdAt:
          format: date-time
          type: string
        deletedAt:
          format: date-time
          nullable: true
          type: string
        demoWorkItem:
          $ref: '#/components/schemas/ModelsDemoWorkItem'
        description:
          type: string
        kanbanStepID:
          type: integer
          x-go-type: KanbanStepID
        members:
          items:
            $ref: '#/components/schemas/ModelsWorkItemM2MAssigneeWIA'
          nullable: true
          type: array
        metadata:
          additionalProperties: {}
          type: object
        projectName:
          $ref: '#/components/schemas/ProjectName'
        targetDate:
          format: date-time
          type: string
        teamID:
          nullable: true
          type: integer
          x-go-type: TeamID
        timeEntries:
          items:
            $ref: '#/components/schemas/ModelsTimeEntry'
          nullable: true
          type: array
        title:
          type: string
        updatedAt:
          format: date-time
          type: string
        workItemComments:
          items:
            $ref: '#/components/schemas/ModelsWorkItemComment'
          nullable: true
          type: array
        workItemID:
          type: integer
          x-go-type: WorkItemID
        workItemTags:
          items:
            $ref: '#/components/schemas/ModelsWorkItemTag'
          nullable: true
          type: array
        workItemType:
          $ref: '#/components/schemas/ModelsWorkItemType'
        workItemTypeID:
          type: integer
          x-go-type: WorkItemTypeID
      required:
        - demoWorkItem
        - workItemID
        - title
        - description
        - workItemTypeID
        - metadata
        - teamID
        - kanbanStepID
        - targetDate
        - createdAt
        - updatedAt
        - projectName
      type: object
      x-gen-struct: DemoWorkItemResponse
      x-is-generated: true
    WorkItemBase: # Generated schema. DO NOT EDIT.
      properties:
        closedAt:
          format: date-time
          nullable: true
          type: string
        createdAt:
          format: date-time
          type: string
        deletedAt:
          format: date-time
          nullable: true
          type: string
        description:
          type: string
        kanbanStepID:
          type: integer
          x-go-type: KanbanStepID
        members:
          items:
            $ref: '#/components/schemas/ModelsWorkItemM2MAssigneeWIA'
          nullable: true
          type: array
        metadata:
          additionalProperties: {}
          type: object
        projectName:
          $ref: '#/components/schemas/ProjectName'
        targetDate:
          format: date-time
          type: string
        teamID:
          nullable: true
          type: integer
          x-go-type: TeamID
        timeEntries:
          items:
            $ref: '#/components/schemas/ModelsTimeEntry'
          nullable: true
          type: array
        title:
          type: string
        updatedAt:
          format: date-time
          type: string
        workItemComments:
          items:
            $ref: '#/components/schemas/ModelsWorkItemComment'
          nullable: true
          type: array
        workItemID:
          type: integer
          x-go-type: WorkItemID
        workItemTags:
          items:
            $ref: '#/components/schemas/ModelsWorkItemTag'
          nullable: true
          type: array
        workItemType:
          $ref: '#/components/schemas/ModelsWorkItemType'
        workItemTypeID:
          type: integer
          x-go-type: WorkItemTypeID
      required:
        - workItemID
        - title
        - description
        - workItemTypeID
        - metadata
        - teamID
        - kanbanStepID
        - targetDate
        - createdAt
        - updatedAt
        - projectName
      type: object
      x-gen-struct: WorkItemBase
      x-is-generated: true
    PaginationFilterPrimitive:
      type: object
      properties:
        filterMode:
          $ref: '#/components/schemas/PaginationFilterModes'
        value:
          type: string
          nullable: true
        caseSensitive:
          type: boolean
          nullable: true
      required: ["filterMode"]
    PaginationFilterArray:
      type: object
      properties:
        filterMode:
          $ref: '#/components/schemas/PaginationFilterModes'
        value:
          type: array
          items:
            type: string
            nullable: true
          nullable: true
      required: ["filterMode"]
    # kin-openapi can't handle these in url.Values at all
    AnyValue:
      nullable: true
      description: represents any value, including `null`
    PaginationFilter:
      oneOf:
        - $ref: '#/components/schemas/PaginationFilterPrimitive'
        - $ref: '#/components/schemas/PaginationFilterArray'
      discriminator:
        propertyName: filterMode
        # oapi broken for these - it probably indexes by schema so we dont get all mappings...
        # https://github.com/deepmap/oapi-codegen/blob/a14414f04fdd2206ac394e1e45527c1fbcbfc705/pkg/codegen/schema.go#L205
        # TODO: raise issues on both.
        # also orval is broken
        # ref: https://github.com/OAI/OpenAPI-Specification/discussions/3283
        mapping:
          between: '#/components/schemas/PaginationFilterArray'
          betweenInclusive: '#/components/schemas/PaginationFilterArray'
          contains: '#/components/schemas/PaginationFilterPrimitive'
          empty: '#/components/schemas/PaginationFilterPrimitive'
          endsWith: '#/components/schemas/PaginationFilterPrimitive'
          equals: '#/components/schemas/PaginationFilterPrimitive'
          fuzzy: '#/components/schemas/PaginationFilterPrimitive'
          greaterThan: '#/components/schemas/PaginationFilterPrimitive'
          greaterThanOrEqualTo: '#/components/schemas/PaginationFilterPrimitive'
          lessThan: '#/components/schemas/PaginationFilterPrimitive'
          lessThanOrEqualTo: '#/components/schemas/PaginationFilterPrimitive'
          notEmpty: '#/components/schemas/PaginationFilterPrimitive'
          notEquals: '#/components/schemas/PaginationFilterPrimitive'
          startsWith: '#/components/schemas/PaginationFilterPrimitive'
      x-use-server-type: true
    Pagination:
      type: object
      properties:
        filter:
          $ref: '#/components/schemas/PaginationFilter'
        sort:
          $ref: '#/components/schemas/Direction'
      x-use-server-type: true
    PaginationItems:
      type: object
      description: represents pagination data indexed by column id
      additionalProperties:
        $ref: '#/components/schemas/Pagination'
    PaginationCursor:
      # only supporting single cursors (react-query, orval, etc. would need query wrapper changes).
      # in frontend tables its not supported either.
      # if the need arises for multiple cursors, don't, and create a proper key.
      type: object
      properties:
        direction:
          $ref: '#/components/schemas/Direction'
        value:
          description: represents a cursor value
          nullable: true
        column:
          description: represents the JSON name of the models column
          type: string
      required:
        - direction
        - column
    GetPaginatedUsersQueryParameters: # Generated schema. DO NOT EDIT.
      properties:
        role:
          $ref: '#/components/schemas/Role'
        items:
          $ref: '#/components/schemas/PaginationItems'
      type: object
    PaginationFilterModes:
      enum:
        - between
        - betweenInclusive
        - contains
        - empty
        - endsWith
        - equals
        - fuzzy
        - greaterThan
        - greaterThanOrEqualTo
        - lessThan
        - lessThanOrEqualTo
        - notEmpty
        - notEquals
        - startsWith
      type: string
    ModelsCacheDemoWorkItemJoins: # Generated schema. DO NOT EDIT.
      properties:
        assignees:
          type: boolean
        kanbanStep:
          type: boolean
        team:
          type: boolean
        timeEntries:
          type: boolean
        workItemComments:
          type: boolean
        workItemTags:
          type: boolean
        workItemType:
          type: boolean
      required:
        - kanbanStep
        - team
        - workItemType
        - timeEntries
        - assignees
        - workItemComments
        - workItemTags
      type: object
      x-go-type: CacheDemoWorkItemJoins
      x-is-generated: true
    ModelsUserJoins: # Generated schema. DO NOT EDIT.
      properties:
        assigneeWorkItems:
          type: boolean
        memberProjects:
          type: boolean
        memberTeams:
          type: boolean
        receiverNotifications:
          type: boolean
        senderNotifications:
          type: boolean
        timeEntries:
          type: boolean
        userAPIKey:
          type: boolean
        userNotifications:
          type: boolean
        workItemComments:
          type: boolean
      required:
        - receiverNotifications
        - senderNotifications
        - timeEntries
        - userNotifications
        - memberProjects
        - memberTeams
        - userAPIKey
        - assigneeWorkItems
        - workItemComments
      type: object
      x-go-type: UserJoins
      x-is-generated: true
    PaginatedDemoWorkItemsResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/CacheDemoWorkItemResponse'
          nullable: true
          type: array
        page:
          $ref: '#/components/schemas/PaginationPage'
      required:
        - page
        - items
      type: object
      x-gen-struct: PaginatedDemoWorkItemsResponse
      x-is-generated: true
    GetCacheDemoWorkItemQueryParameters: # Generated schema. DO NOT EDIT.
      properties:
        joins:
          $ref: '#/components/schemas/ModelsCacheDemoWorkItemJoins'
      type: object
      x-gen-struct: GetCacheDemoWorkItemQueryParameters
      x-is-generated: true
    GetCurrentUserQueryParameters: # Generated schema. DO NOT EDIT.
      properties:
        joins:
          $ref: '#/components/schemas/ModelsUserJoins'
      type: object
      x-gen-struct: GetCurrentUserQueryParameters
      x-is-generated: true
    ProjectName: # Generated from projects table. DO NOT EDIT.
      type: string
      enum: ["demo", "demo_two"]
      x-is-generated: true
      description: is generated from projects table.
    ActivityResponse:
      properties:
        activityID:
          type: integer
          x-go-type: ActivityID
        deletedAt:
          format: date-time
          nullable: true
          type: string
        description:
          type: string
        isProductive:
          type: boolean
        name:
          type: string
        projectID:
          type: integer
          x-go-type: ProjectID
      required:
        - activityID
        - projectID
        - name
        - description
        - isProductive
      type: object
      x-gen-struct: ActivityResponse
      x-is-generated: true
    TeamResponse:
      properties:
        createdAt:
          format: date-time
          type: string
        description:
          type: string
        name:
          type: string
        projectID:
          type: integer
          x-go-type: ProjectID
        teamID:
          type: integer
          x-go-type: TeamID
        updatedAt:
          format: date-time
          type: string
      required:
        - teamID
        - projectID
        - name
        - description
        - createdAt
        - updatedAt
      type: object
      x-gen-struct: TeamResponse
      x-is-generated: true
    UserResponse:
      properties:
        age:
          nullable: true
          type: integer
        apiKey:
          $ref: '#/components/schemas/ModelsUserAPIKey'
        createdAt:
          format: date-time
          type: string
        deletedAt:
          format: date-time
          nullable: true
          type: string
        email:
          type: string
        firstName:
          nullable: true
          type: string
        fullName:
          nullable: true
          type: string
        hasGlobalNotifications:
          type: boolean
        hasPersonalNotifications:
          type: boolean
        lastName:
          nullable: true
          type: string
        projects:
          items:
            $ref: '#/components/schemas/ModelsProject'
          nullable: true
          type: array
        role:
          $ref: '#/components/schemas/Role'
        scopes:
          $ref: '#/components/schemas/Scopes'
        teams:
          items:
            $ref: '#/components/schemas/ModelsTeam'
          nullable: true
          type: array
        updatedAt:
          format: date-time
          type: string
        userID:
          $ref: '#/components/schemas/ModelsUserID'
        username:
          type: string
      required:
        - userID
        - username
        - email
        - scopes
        - hasPersonalNotifications
        - hasGlobalNotifications
        - createdAt
        - updatedAt
        - role
      type: object
      x-gen-struct: UserResponse
      x-is-generated: true
    WorkItemCommentResponse:
      properties:
        createdAt:
          format: date-time
          type: string
        message:
          type: string
        updatedAt:
          format: date-time
          type: string
        userID:
          $ref: '#/components/schemas/ModelsUserID'
        workItemCommentID:
          type: integer
          x-go-type: WorkItemCommentID
        workItemID:
          type: integer
          x-go-type: WorkItemID
      required:
        - workItemCommentID
        - workItemID
        - userID
        - message
        - createdAt
        - updatedAt
      type: object
      x-gen-struct: WorkItemCommentResponse
      x-is-generated: true
    WorkItemTagResponse:
      properties:
        color:
          pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          type: string
        deletedAt:
          format: date-time
          nullable: true
          type: string
        description:
          type: string
        name:
          type: string
        projectID:
          type: integer
          x-go-type: ProjectID
        workItemTagID:
          type: integer
          x-go-type: WorkItemTagID
      required:
        - workItemTagID
        - projectID
        - name
        - description
        - color
      type: object
      x-gen-struct: WorkItemTagResponse
      x-is-generated: true
    TimeEntryResponse:
      properties:
        activityID:
          type: integer
          x-go-type: ActivityID
        comment:
          type: string
        durationMinutes:
          nullable: true
          type: integer
        start:
          format: date-time
          type: string
        teamID:
          nullable: true
          type: integer
          x-go-type: TeamID
        timeEntryID:
          type: integer
          x-go-type: TimeEntryID
        userID:
          $ref: '#/components/schemas/ModelsUserID'
        workItemID:
          nullable: true
          type: integer
          x-go-type: WorkItemID
      required:
        - timeEntryID
        - activityID
        - userID
        - comment
        - start
      type: object
      x-gen-struct: TimeEntryResponse
      x-is-generated: true
    CacheDemoWorkItemResponse: # Generated schema. DO NOT EDIT.
      properties:
        closedAt:
          format: date-time
          nullable: true
          type: string
        createdAt:
          format: date-time
          type: string
        deletedAt:
          format: date-time
          nullable: true
          type: string
        description:
          type: string
        kanbanStepID:
          type: integer
          x-go-type: KanbanStepID
        lastMessageAt:
          format: date-time
          type: string
        line:
          type: string
        metadata:
          additionalProperties: {}
          type: object
        ref:
          pattern: ^[0-9]{8}$
          type: string
        reopened:
          type: boolean
        targetDate:
          format: date-time
          type: string
        teamID:
          type: integer
          x-go-type: TeamID
        title:
          type: string
        updatedAt:
          format: date-time
          type: string
        workItemID:
          type: integer
          x-go-type: WorkItemID
        workItemTypeID:
          type: integer
          x-go-type: WorkItemTypeID
      required:
        - ref
        - line
        - lastMessageAt
        - reopened
        - workItemID
        - title
        - description
        - workItemTypeID
        - metadata
        - teamID
        - kanbanStepID
        - targetDate
        - createdAt
        - updatedAt
      type: object
      x-gen-struct: CacheDemoWorkItemResponse
      x-is-generated: true
    NotificationResponse: # Generated schema. DO NOT EDIT.
      properties:
        notification:
          $ref: '#/components/schemas/ModelsNotification'
        notificationID:
          type: integer
          x-go-type: NotificationID
        read:
          type: boolean
        userID:
          $ref: '#/components/schemas/ModelsUserID'
        userNotificationID:
          type: integer
          x-go-type: UserNotificationID
      required:
        - userNotificationID
        - notificationID
        - read
        - userID
        - notification
      type: object
      x-gen-struct: NotificationResponse
      x-is-generated: true
    WorkItemTypeResponse: # Generated schema. DO NOT EDIT.
      properties:
        color:
          pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          type: string
        description:
          type: string
        name:
          type: string
        projectID:
          type: integer
          x-go-type: ProjectID
        workItemTypeID:
          type: integer
          x-go-type: WorkItemTypeID
      required:
        - workItemTypeID
        - projectID
        - name
        - description
        - color
      type: object
      x-gen-struct: WorkItemTypeResponse
      x-is-generated: true
    ModelsProjectConfig: # Generated schema. DO NOT EDIT.
      properties:
        fields:
          items:
            $ref: '#/components/schemas/ModelsProjectConfigField'
          nullable: true
          type: array
        header:
          items:
            type: string
          nullable: true
          type: array
        visualization:
          additionalProperties: {}
          nullable: true
          type: object
      type: object
      x-go-type: ProjectConfig
      x-is-generated: true
    ModelsProjectConfigField: # Generated schema. DO NOT EDIT.
      properties:
        isEditable:
          type: boolean
        isVisible:
          type: boolean
        name:
          type: string
        path:
          type: string
        showCollapsed:
          type: boolean
      type: object
      x-go-type: ProjectConfigField
      x-is-generated: true
  examples: # Generated from internal structs. DO NOT EDIT.
    User:
      value:
        username: username
        email: email@email.com
        password: password
  securitySchemes:
    api_key:
      in: header
      name: x-api-key
      type: apiKey
    bearer_auth:
      type: http
      scheme: bearer
      bearerFormat: JWT
