// Code generated by 'yaegi extract github.com/iancoleman/strcase'. DO NOT EDIT.

package symbols

import (
	"github.com/iancoleman/strcase"
	"reflect"
)

func init() {
	Symbols["github.com/iancoleman/strcase/strcase"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"ConfigureAcronym":     reflect.ValueOf(strcase.ConfigureAcronym),
		"ToCamel":              reflect.ValueOf(strcase.ToCamel),
		"ToDelimited":          reflect.ValueOf(strcase.ToDelimited),
		"ToKebab":              reflect.ValueOf(strcase.ToKebab),
		"ToLowerCamel":         reflect.ValueOf(strcase.ToLowerCamel),
		"ToScreamingDelimited": reflect.ValueOf(strcase.ToScreamingDelimited),
		"ToScreamingKebab":     reflect.ValueOf(strcase.ToScreamingKebab),
		"ToScreamingSnake":     reflect.ValueOf(strcase.ToScreamingSnake),
		"ToSnake":              reflect.ValueOf(strcase.ToSnake),
		"ToSnakeWithIgnore":    reflect.ValueOf(strcase.ToSnakeWithIgnore),
	}
}
