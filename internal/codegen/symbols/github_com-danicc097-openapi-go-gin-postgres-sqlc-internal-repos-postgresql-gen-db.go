// Code generated by 'yaegi extract github.com/danicc097/openapi-go-gin-postgres-sqlc/internal/repos/postgresql/gen/db'. DO NOT EDIT.

package symbols

import (
	"context"
	"github.com/danicc097/openapi-go-gin-postgres-sqlc/internal/repos/postgresql/gen/db"
	"github.com/jackc/pgx/v5"
	"github.com/jackc/pgx/v5/pgconn"
	"go/constant"
	"go/token"
	"reflect"
)

func init() {
	Symbols["github.com/danicc097/openapi-go-gin-postgres-sqlc/internal/repos/postgresql/gen/db/db"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"ActivitiesByName":              reflect.ValueOf(db.ActivitiesByName),
		"ActivitiesByProjectID":         reflect.ValueOf(db.ActivitiesByProjectID),
		"ActivityByActivityID":          reflect.ValueOf(db.ActivityByActivityID),
		"ActivityByNameProjectID":       reflect.ValueOf(db.ActivityByNameProjectID),
		"ActivityEntity":                reflect.ValueOf(db.ActivityEntity),
		"ActivityPaginatedByActivityID": reflect.ValueOf(db.ActivityPaginatedByActivityID),
		"ActivityPaginatedByProjectID":  reflect.ValueOf(db.ActivityPaginatedByProjectID),
		"AllNotificationTypeValues":     reflect.ValueOf(db.AllNotificationTypeValues),
		"AllWorkItemRoleValues":         reflect.ValueOf(db.AllWorkItemRoleValues),
		"BeforeUpdateUpdatedAt":         reflect.ValueOf(db.BeforeUpdateUpdatedAt),
		"CreateActivity":                reflect.ValueOf(db.CreateActivity),
		"CreateDemoTwoWorkItem":         reflect.ValueOf(db.CreateDemoTwoWorkItem),
		"CreateDemoWorkItem":            reflect.ValueOf(db.CreateDemoWorkItem),
		"CreateEntityNotification":      reflect.ValueOf(db.CreateEntityNotification),
		"CreateKanbanStep":              reflect.ValueOf(db.CreateKanbanStep),
		"CreateMovie":                   reflect.ValueOf(db.CreateMovie),
		"CreateNotification":            reflect.ValueOf(db.CreateNotification),
		"CreateProject":                 reflect.ValueOf(db.CreateProject),
		"CreateSchemaMigration":         reflect.ValueOf(db.CreateSchemaMigration),
		"CreateTeam":                    reflect.ValueOf(db.CreateTeam),
		"CreateTimeEntry":               reflect.ValueOf(db.CreateTimeEntry),
		"CreateUser":                    reflect.ValueOf(db.CreateUser),
		"CreateUserAPIKey":              reflect.ValueOf(db.CreateUserAPIKey),
		"CreateUserNotification":        reflect.ValueOf(db.CreateUserNotification),
		"CreateUserTeam":                reflect.ValueOf(db.CreateUserTeam),
		"CreateWorkItem":                reflect.ValueOf(db.CreateWorkItem),
		"CreateWorkItemAssignedUser":    reflect.ValueOf(db.CreateWorkItemAssignedUser),
		"CreateWorkItemComment":         reflect.ValueOf(db.CreateWorkItemComment),
		"CreateWorkItemTag":             reflect.ValueOf(db.CreateWorkItemTag),
		"CreateWorkItemType":            reflect.ValueOf(db.CreateWorkItemType),
		"CreateWorkItemWorkItemTag":     reflect.ValueOf(db.CreateWorkItemWorkItemTag),
		"DemoTwoWorkItemByWorkItemID":   reflect.ValueOf(db.DemoTwoWorkItemByWorkItemID),
		"DemoTwoWorkItemCustomDateForProject2AscNullsFirst":     reflect.ValueOf(db.DemoTwoWorkItemCustomDateForProject2AscNullsFirst),
		"DemoTwoWorkItemCustomDateForProject2AscNullsLast":      reflect.ValueOf(db.DemoTwoWorkItemCustomDateForProject2AscNullsLast),
		"DemoTwoWorkItemCustomDateForProject2DescNullsFirst":    reflect.ValueOf(db.DemoTwoWorkItemCustomDateForProject2DescNullsFirst),
		"DemoTwoWorkItemCustomDateForProject2DescNullsLast":     reflect.ValueOf(db.DemoTwoWorkItemCustomDateForProject2DescNullsLast),
		"DemoTwoWorkItemEntity":                                 reflect.ValueOf(db.DemoTwoWorkItemEntity),
		"DemoTwoWorkItemPaginatedByWorkItemID":                  reflect.ValueOf(db.DemoTwoWorkItemPaginatedByWorkItemID),
		"DemoWorkItemByWorkItemID":                              reflect.ValueOf(db.DemoWorkItemByWorkItemID),
		"DemoWorkItemEntity":                                    reflect.ValueOf(db.DemoWorkItemEntity),
		"DemoWorkItemLastMessageAtAscNullsFirst":                reflect.ValueOf(db.DemoWorkItemLastMessageAtAscNullsFirst),
		"DemoWorkItemLastMessageAtAscNullsLast":                 reflect.ValueOf(db.DemoWorkItemLastMessageAtAscNullsLast),
		"DemoWorkItemLastMessageAtDescNullsFirst":               reflect.ValueOf(db.DemoWorkItemLastMessageAtDescNullsFirst),
		"DemoWorkItemLastMessageAtDescNullsLast":                reflect.ValueOf(db.DemoWorkItemLastMessageAtDescNullsLast),
		"DemoWorkItemPaginatedByWorkItemID":                     reflect.ValueOf(db.DemoWorkItemPaginatedByWorkItemID),
		"DemoWorkItemsByRefLine":                                reflect.ValueOf(db.DemoWorkItemsByRefLine),
		"EntityNotificationByEntityNotificationID":              reflect.ValueOf(db.EntityNotificationByEntityNotificationID),
		"EntityNotificationCreatedAtAscNullsFirst":              reflect.ValueOf(db.EntityNotificationCreatedAtAscNullsFirst),
		"EntityNotificationCreatedAtAscNullsLast":               reflect.ValueOf(db.EntityNotificationCreatedAtAscNullsLast),
		"EntityNotificationCreatedAtDescNullsFirst":             reflect.ValueOf(db.EntityNotificationCreatedAtDescNullsFirst),
		"EntityNotificationCreatedAtDescNullsLast":              reflect.ValueOf(db.EntityNotificationCreatedAtDescNullsLast),
		"EntityNotificationEntity":                              reflect.ValueOf(db.EntityNotificationEntity),
		"EntityNotificationPaginatedByEntityNotificationID":     reflect.ValueOf(db.EntityNotificationPaginatedByEntityNotificationID),
		"EntityNotificationsByEntityID":                         reflect.ValueOf(db.EntityNotificationsByEntityID),
		"ErrAlreadyExists":                                      reflect.ValueOf(db.ErrAlreadyExists),
		"ErrDoesNotExist":                                       reflect.ValueOf(db.ErrDoesNotExist),
		"ErrMarkedForDeletion":                                  reflect.ValueOf(db.ErrMarkedForDeletion),
		"Errorf":                                                reflect.ValueOf(db.Errorf),
		"GetUser":                                               reflect.ValueOf(constant.MakeFromLiteral("\"-- name: GetUser :one\\nselect\\n  username\\n  , email\\n  , role_rank\\n  , created_at\\n  , updated_at\\n  , user_id\\n  -- case when @get_db_data::boolean then\\n  --   (user_id)\\n  -- end as user_id,\\nfrom\\n  users\\nwhere (email = LOWER($1)::text\\n  or $1::text is null)\\nand (username = $2::text\\n  or $2::text is null)\\nand (user_id = $3::uuid\\n  or $3::uuid is null)\\nlimit 1\\n\"", token.STRING, 0)),
		"GetUserNotifications":                                  reflect.ValueOf(constant.MakeFromLiteral("\"-- name: GetUserNotifications :many\\nselect\\n  user_notifications.user_notification_id, user_notifications.notification_id, user_notifications.read, user_notifications.user_id\\n  , notifications.notification_type\\n  , notifications.sender\\n  , notifications.title\\n  , notifications.body\\n  , notifications.labels\\n  , notifications.link\\nfrom\\n  user_notifications\\n  inner join notifications using (notification_id)\\nwhere\\n  user_notifications.user_id = $1\\n  and notifications.notification_type = $2::notification_type\\n  and (created_at > $3\\n    or $3 is null) -- first search null, infinite query using last created_at\\norder by\\n  created_at desc\\nlimit $4\\n\"", token.STRING, 0)),
		"IsUserInProject":                                       reflect.ValueOf(constant.MakeFromLiteral("\"-- name: IsUserInProject :one\\nselect\\n  exists (\\n    select\\n      1\\n    from\\n      user_team ut\\n      join teams t on ut.team_id = t.team_id\\n    where\\n      ut.member = $1\\n      and t.project_id = $2)\\n\"", token.STRING, 0)),
		"JsonbSetDeep":                                          reflect.ValueOf(db.JsonbSetDeep),
		"KanbanStepByKanbanStepID":                              reflect.ValueOf(db.KanbanStepByKanbanStepID),
		"KanbanStepByProjectIDNameStepOrder":                    reflect.ValueOf(db.KanbanStepByProjectIDNameStepOrder),
		"KanbanStepByProjectIDStepOrder":                        reflect.ValueOf(db.KanbanStepByProjectIDStepOrder),
		"KanbanStepEntity":                                      reflect.ValueOf(db.KanbanStepEntity),
		"KanbanStepPaginatedByKanbanStepID":                     reflect.ValueOf(db.KanbanStepPaginatedByKanbanStepID),
		"KanbanStepPaginatedByProjectID":                        reflect.ValueOf(db.KanbanStepPaginatedByProjectID),
		"KanbanStepPaginatedByStepOrder":                        reflect.ValueOf(db.KanbanStepPaginatedByStepOrder),
		"KanbanStepsByName":                                     reflect.ValueOf(db.KanbanStepsByName),
		"KanbanStepsByProjectID":                                reflect.ValueOf(db.KanbanStepsByProjectID),
		"KanbanStepsByStepOrder":                                reflect.ValueOf(db.KanbanStepsByStepOrder),
		"Logf":                                                  reflect.ValueOf(db.Logf),
		"MovieByMovieID":                                        reflect.ValueOf(db.MovieByMovieID),
		"MovieEntity":                                           reflect.ValueOf(db.MovieEntity),
		"MoviePaginatedByMovieID":                               reflect.ValueOf(db.MoviePaginatedByMovieID),
		"New":                                                   reflect.ValueOf(db.New),
		"NewUserID":                                             reflect.ValueOf(db.NewUserID),
		"NotificationByNotificationID":                          reflect.ValueOf(db.NotificationByNotificationID),
		"NotificationCreatedAtAscNullsFirst":                    reflect.ValueOf(db.NotificationCreatedAtAscNullsFirst),
		"NotificationCreatedAtAscNullsLast":                     reflect.ValueOf(db.NotificationCreatedAtAscNullsLast),
		"NotificationCreatedAtDescNullsFirst":                   reflect.ValueOf(db.NotificationCreatedAtDescNullsFirst),
		"NotificationCreatedAtDescNullsLast":                    reflect.ValueOf(db.NotificationCreatedAtDescNullsLast),
		"NotificationEntity":                                    reflect.ValueOf(db.NotificationEntity),
		"NotificationFanOut":                                    reflect.ValueOf(db.NotificationFanOut),
		"NotificationPaginatedByNotificationID":                 reflect.ValueOf(db.NotificationPaginatedByNotificationID),
		"NotificationTypeGlobal":                                reflect.ValueOf(db.NotificationTypeGlobal),
		"NotificationTypePersonal":                              reflect.ValueOf(db.NotificationTypePersonal),
		"NotificationsByReceiverRankNotificationTypeCreatedAt":  reflect.ValueOf(db.NotificationsByReceiverRankNotificationTypeCreatedAt),
		"ProjectByName":                                         reflect.ValueOf(db.ProjectByName),
		"ProjectByProjectID":                                    reflect.ValueOf(db.ProjectByProjectID),
		"ProjectByWorkItemsTableName":                           reflect.ValueOf(db.ProjectByWorkItemsTableName),
		"ProjectCreatedAtAscNullsFirst":                         reflect.ValueOf(db.ProjectCreatedAtAscNullsFirst),
		"ProjectCreatedAtAscNullsLast":                          reflect.ValueOf(db.ProjectCreatedAtAscNullsLast),
		"ProjectCreatedAtDescNullsFirst":                        reflect.ValueOf(db.ProjectCreatedAtDescNullsFirst),
		"ProjectCreatedAtDescNullsLast":                         reflect.ValueOf(db.ProjectCreatedAtDescNullsLast),
		"ProjectEntity":                                         reflect.ValueOf(db.ProjectEntity),
		"ProjectPaginatedByProjectID":                           reflect.ValueOf(db.ProjectPaginatedByProjectID),
		"ProjectUpdatedAtAscNullsFirst":                         reflect.ValueOf(db.ProjectUpdatedAtAscNullsFirst),
		"ProjectUpdatedAtAscNullsLast":                          reflect.ValueOf(db.ProjectUpdatedAtAscNullsLast),
		"ProjectUpdatedAtDescNullsFirst":                        reflect.ValueOf(db.ProjectUpdatedAtDescNullsFirst),
		"ProjectUpdatedAtDescNullsLast":                         reflect.ValueOf(db.ProjectUpdatedAtDescNullsLast),
		"SchemaMigrationByVersion":                              reflect.ValueOf(db.SchemaMigrationByVersion),
		"SchemaMigrationEntity":                                 reflect.ValueOf(db.SchemaMigrationEntity),
		"SchemaMigrationPaginatedByVersion":                     reflect.ValueOf(db.SchemaMigrationPaginatedByVersion),
		"SetErrorLogger":                                        reflect.ValueOf(db.SetErrorLogger),
		"SetLogger":                                             reflect.ValueOf(db.SetLogger),
		"TeamByNameProjectID":                                   reflect.ValueOf(db.TeamByNameProjectID),
		"TeamByTeamID":                                          reflect.ValueOf(db.TeamByTeamID),
		"TeamCreatedAtAscNullsFirst":                            reflect.ValueOf(db.TeamCreatedAtAscNullsFirst),
		"TeamCreatedAtAscNullsLast":                             reflect.ValueOf(db.TeamCreatedAtAscNullsLast),
		"TeamCreatedAtDescNullsFirst":                           reflect.ValueOf(db.TeamCreatedAtDescNullsFirst),
		"TeamCreatedAtDescNullsLast":                            reflect.ValueOf(db.TeamCreatedAtDescNullsLast),
		"TeamEntity":                                            reflect.ValueOf(db.TeamEntity),
		"TeamPaginatedByProjectID":                              reflect.ValueOf(db.TeamPaginatedByProjectID),
		"TeamPaginatedByTeamID":                                 reflect.ValueOf(db.TeamPaginatedByTeamID),
		"TeamUpdatedAtAscNullsFirst":                            reflect.ValueOf(db.TeamUpdatedAtAscNullsFirst),
		"TeamUpdatedAtAscNullsLast":                             reflect.ValueOf(db.TeamUpdatedAtAscNullsLast),
		"TeamUpdatedAtDescNullsFirst":                           reflect.ValueOf(db.TeamUpdatedAtDescNullsFirst),
		"TeamUpdatedAtDescNullsLast":                            reflect.ValueOf(db.TeamUpdatedAtDescNullsLast),
		"TeamsByName":                                           reflect.ValueOf(db.TeamsByName),
		"TeamsByProjectID":                                      reflect.ValueOf(db.TeamsByProjectID),
		"TimeEntriesByUserIDTeamID":                             reflect.ValueOf(db.TimeEntriesByUserIDTeamID),
		"TimeEntriesByWorkItemIDTeamID":                         reflect.ValueOf(db.TimeEntriesByWorkItemIDTeamID),
		"TimeEntryByTimeEntryID":                                reflect.ValueOf(db.TimeEntryByTimeEntryID),
		"TimeEntryEntity":                                       reflect.ValueOf(db.TimeEntryEntity),
		"TimeEntryPaginatedByTimeEntryID":                       reflect.ValueOf(db.TimeEntryPaginatedByTimeEntryID),
		"TimeEntryStartAscNullsFirst":                           reflect.ValueOf(db.TimeEntryStartAscNullsFirst),
		"TimeEntryStartAscNullsLast":                            reflect.ValueOf(db.TimeEntryStartAscNullsLast),
		"TimeEntryStartDescNullsFirst":                          reflect.ValueOf(db.TimeEntryStartDescNullsFirst),
		"TimeEntryStartDescNullsLast":                           reflect.ValueOf(db.TimeEntryStartDescNullsLast),
		"UserAPIKeyByAPIKey":                                    reflect.ValueOf(db.UserAPIKeyByAPIKey),
		"UserAPIKeyByUserAPIKeyID":                              reflect.ValueOf(db.UserAPIKeyByUserAPIKeyID),
		"UserAPIKeyByUserID":                                    reflect.ValueOf(db.UserAPIKeyByUserID),
		"UserAPIKeyEntity":                                      reflect.ValueOf(db.UserAPIKeyEntity),
		"UserAPIKeyExpiresOnAscNullsFirst":                      reflect.ValueOf(db.UserAPIKeyExpiresOnAscNullsFirst),
		"UserAPIKeyExpiresOnAscNullsLast":                       reflect.ValueOf(db.UserAPIKeyExpiresOnAscNullsLast),
		"UserAPIKeyExpiresOnDescNullsFirst":                     reflect.ValueOf(db.UserAPIKeyExpiresOnDescNullsFirst),
		"UserAPIKeyExpiresOnDescNullsLast":                      reflect.ValueOf(db.UserAPIKeyExpiresOnDescNullsLast),
		"UserAPIKeyPaginatedByUserAPIKeyID":                     reflect.ValueOf(db.UserAPIKeyPaginatedByUserAPIKeyID),
		"UserByCreatedAt":                                       reflect.ValueOf(db.UserByCreatedAt),
		"UserByEmail":                                           reflect.ValueOf(db.UserByEmail),
		"UserByExternalID":                                      reflect.ValueOf(db.UserByExternalID),
		"UserByUserID":                                          reflect.ValueOf(db.UserByUserID),
		"UserByUsername":                                        reflect.ValueOf(db.UserByUsername),
		"UserCreatedAtAscNullsFirst":                            reflect.ValueOf(db.UserCreatedAtAscNullsFirst),
		"UserCreatedAtAscNullsLast":                             reflect.ValueOf(db.UserCreatedAtAscNullsLast),
		"UserCreatedAtDescNullsFirst":                           reflect.ValueOf(db.UserCreatedAtDescNullsFirst),
		"UserCreatedAtDescNullsLast":                            reflect.ValueOf(db.UserCreatedAtDescNullsLast),
		"UserDeletedAtAscNullsFirst":                            reflect.ValueOf(db.UserDeletedAtAscNullsFirst),
		"UserDeletedAtAscNullsLast":                             reflect.ValueOf(db.UserDeletedAtAscNullsLast),
		"UserDeletedAtDescNullsFirst":                           reflect.ValueOf(db.UserDeletedAtDescNullsFirst),
		"UserDeletedAtDescNullsLast":                            reflect.ValueOf(db.UserDeletedAtDescNullsLast),
		"UserEntity":                                            reflect.ValueOf(db.UserEntity),
		"UserNotificationByNotificationIDUserID":                reflect.ValueOf(db.UserNotificationByNotificationIDUserID),
		"UserNotificationByUserNotificationID":                  reflect.ValueOf(db.UserNotificationByUserNotificationID),
		"UserNotificationEntity":                                reflect.ValueOf(db.UserNotificationEntity),
		"UserNotificationPaginatedByNotificationID":             reflect.ValueOf(db.UserNotificationPaginatedByNotificationID),
		"UserNotificationPaginatedByUserNotificationID":         reflect.ValueOf(db.UserNotificationPaginatedByUserNotificationID),
		"UserNotificationsByNotificationID":                     reflect.ValueOf(db.UserNotificationsByNotificationID),
		"UserNotificationsByUserID":                             reflect.ValueOf(db.UserNotificationsByUserID),
		"UserPaginatedByCreatedAt":                              reflect.ValueOf(db.UserPaginatedByCreatedAt),
		"UserTeamByMemberTeamID":                                reflect.ValueOf(db.UserTeamByMemberTeamID),
		"UserTeamEntity":                                        reflect.ValueOf(db.UserTeamEntity),
		"UserTeamsByMember":                                     reflect.ValueOf(db.UserTeamsByMember),
		"UserTeamsByTeamID":                                     reflect.ValueOf(db.UserTeamsByTeamID),
		"UserTeamsByTeamIDMember":                               reflect.ValueOf(db.UserTeamsByTeamIDMember),
		"UserUpdatedAtAscNullsFirst":                            reflect.ValueOf(db.UserUpdatedAtAscNullsFirst),
		"UserUpdatedAtAscNullsLast":                             reflect.ValueOf(db.UserUpdatedAtAscNullsLast),
		"UserUpdatedAtDescNullsFirst":                           reflect.ValueOf(db.UserUpdatedAtDescNullsFirst),
		"UserUpdatedAtDescNullsLast":                            reflect.ValueOf(db.UserUpdatedAtDescNullsLast),
		"UsersByDeletedAt_WhereDeletedAtIsNotNull":              reflect.ValueOf(db.UsersByDeletedAt_WhereDeletedAtIsNotNull),
		"UsersByUpdatedAt":                                      reflect.ValueOf(db.UsersByUpdatedAt),
		"WithActivityFilters":                                   reflect.ValueOf(db.WithActivityFilters),
		"WithActivityJoin":                                      reflect.ValueOf(db.WithActivityJoin),
		"WithActivityLimit":                                     reflect.ValueOf(db.WithActivityLimit),
		"WithDeletedUserOnly":                                   reflect.ValueOf(db.WithDeletedUserOnly),
		"WithDeletedWorkItemOnly":                               reflect.ValueOf(db.WithDeletedWorkItemOnly),
		"WithDemoTwoWorkItemFilters":                            reflect.ValueOf(db.WithDemoTwoWorkItemFilters),
		"WithDemoTwoWorkItemJoin":                               reflect.ValueOf(db.WithDemoTwoWorkItemJoin),
		"WithDemoTwoWorkItemLimit":                              reflect.ValueOf(db.WithDemoTwoWorkItemLimit),
		"WithDemoTwoWorkItemOrderBy":                            reflect.ValueOf(db.WithDemoTwoWorkItemOrderBy),
		"WithDemoWorkItemFilters":                               reflect.ValueOf(db.WithDemoWorkItemFilters),
		"WithDemoWorkItemJoin":                                  reflect.ValueOf(db.WithDemoWorkItemJoin),
		"WithDemoWorkItemLimit":                                 reflect.ValueOf(db.WithDemoWorkItemLimit),
		"WithDemoWorkItemOrderBy":                               reflect.ValueOf(db.WithDemoWorkItemOrderBy),
		"WithEntityNotificationFilters":                         reflect.ValueOf(db.WithEntityNotificationFilters),
		"WithEntityNotificationJoin":                            reflect.ValueOf(db.WithEntityNotificationJoin),
		"WithEntityNotificationLimit":                           reflect.ValueOf(db.WithEntityNotificationLimit),
		"WithEntityNotificationOrderBy":                         reflect.ValueOf(db.WithEntityNotificationOrderBy),
		"WithKanbanStepFilters":                                 reflect.ValueOf(db.WithKanbanStepFilters),
		"WithKanbanStepJoin":                                    reflect.ValueOf(db.WithKanbanStepJoin),
		"WithKanbanStepLimit":                                   reflect.ValueOf(db.WithKanbanStepLimit),
		"WithMovieFilters":                                      reflect.ValueOf(db.WithMovieFilters),
		"WithMovieJoin":                                         reflect.ValueOf(db.WithMovieJoin),
		"WithMovieLimit":                                        reflect.ValueOf(db.WithMovieLimit),
		"WithNotificationFilters":                               reflect.ValueOf(db.WithNotificationFilters),
		"WithNotificationJoin":                                  reflect.ValueOf(db.WithNotificationJoin),
		"WithNotificationLimit":                                 reflect.ValueOf(db.WithNotificationLimit),
		"WithNotificationOrderBy":                               reflect.ValueOf(db.WithNotificationOrderBy),
		"WithProjectFilters":                                    reflect.ValueOf(db.WithProjectFilters),
		"WithProjectJoin":                                       reflect.ValueOf(db.WithProjectJoin),
		"WithProjectLimit":                                      reflect.ValueOf(db.WithProjectLimit),
		"WithProjectOrderBy":                                    reflect.ValueOf(db.WithProjectOrderBy),
		"WithSchemaMigrationFilters":                            reflect.ValueOf(db.WithSchemaMigrationFilters),
		"WithSchemaMigrationJoin":                               reflect.ValueOf(db.WithSchemaMigrationJoin),
		"WithSchemaMigrationLimit":                              reflect.ValueOf(db.WithSchemaMigrationLimit),
		"WithTeamFilters":                                       reflect.ValueOf(db.WithTeamFilters),
		"WithTeamJoin":                                          reflect.ValueOf(db.WithTeamJoin),
		"WithTeamLimit":                                         reflect.ValueOf(db.WithTeamLimit),
		"WithTeamOrderBy":                                       reflect.ValueOf(db.WithTeamOrderBy),
		"WithTimeEntryFilters":                                  reflect.ValueOf(db.WithTimeEntryFilters),
		"WithTimeEntryJoin":                                     reflect.ValueOf(db.WithTimeEntryJoin),
		"WithTimeEntryLimit":                                    reflect.ValueOf(db.WithTimeEntryLimit),
		"WithTimeEntryOrderBy":                                  reflect.ValueOf(db.WithTimeEntryOrderBy),
		"WithUserAPIKeyFilters":                                 reflect.ValueOf(db.WithUserAPIKeyFilters),
		"WithUserAPIKeyJoin":                                    reflect.ValueOf(db.WithUserAPIKeyJoin),
		"WithUserAPIKeyLimit":                                   reflect.ValueOf(db.WithUserAPIKeyLimit),
		"WithUserAPIKeyOrderBy":                                 reflect.ValueOf(db.WithUserAPIKeyOrderBy),
		"WithUserFilters":                                       reflect.ValueOf(db.WithUserFilters),
		"WithUserJoin":                                          reflect.ValueOf(db.WithUserJoin),
		"WithUserLimit":                                         reflect.ValueOf(db.WithUserLimit),
		"WithUserNotificationFilters":                           reflect.ValueOf(db.WithUserNotificationFilters),
		"WithUserNotificationJoin":                              reflect.ValueOf(db.WithUserNotificationJoin),
		"WithUserNotificationLimit":                             reflect.ValueOf(db.WithUserNotificationLimit),
		"WithUserOrderBy":                                       reflect.ValueOf(db.WithUserOrderBy),
		"WithUserTeamFilters":                                   reflect.ValueOf(db.WithUserTeamFilters),
		"WithUserTeamJoin":                                      reflect.ValueOf(db.WithUserTeamJoin),
		"WithUserTeamLimit":                                     reflect.ValueOf(db.WithUserTeamLimit),
		"WithWorkItemAssignedUserFilters":                       reflect.ValueOf(db.WithWorkItemAssignedUserFilters),
		"WithWorkItemAssignedUserJoin":                          reflect.ValueOf(db.WithWorkItemAssignedUserJoin),
		"WithWorkItemAssignedUserLimit":                         reflect.ValueOf(db.WithWorkItemAssignedUserLimit),
		"WithWorkItemCommentFilters":                            reflect.ValueOf(db.WithWorkItemCommentFilters),
		"WithWorkItemCommentJoin":                               reflect.ValueOf(db.WithWorkItemCommentJoin),
		"WithWorkItemCommentLimit":                              reflect.ValueOf(db.WithWorkItemCommentLimit),
		"WithWorkItemCommentOrderBy":                            reflect.ValueOf(db.WithWorkItemCommentOrderBy),
		"WithWorkItemFilters":                                   reflect.ValueOf(db.WithWorkItemFilters),
		"WithWorkItemJoin":                                      reflect.ValueOf(db.WithWorkItemJoin),
		"WithWorkItemLimit":                                     reflect.ValueOf(db.WithWorkItemLimit),
		"WithWorkItemOrderBy":                                   reflect.ValueOf(db.WithWorkItemOrderBy),
		"WithWorkItemTagFilters":                                reflect.ValueOf(db.WithWorkItemTagFilters),
		"WithWorkItemTagJoin":                                   reflect.ValueOf(db.WithWorkItemTagJoin),
		"WithWorkItemTagLimit":                                  reflect.ValueOf(db.WithWorkItemTagLimit),
		"WithWorkItemTypeFilters":                               reflect.ValueOf(db.WithWorkItemTypeFilters),
		"WithWorkItemTypeJoin":                                  reflect.ValueOf(db.WithWorkItemTypeJoin),
		"WithWorkItemTypeLimit":                                 reflect.ValueOf(db.WithWorkItemTypeLimit),
		"WithWorkItemWorkItemTagFilters":                        reflect.ValueOf(db.WithWorkItemWorkItemTagFilters),
		"WithWorkItemWorkItemTagJoin":                           reflect.ValueOf(db.WithWorkItemWorkItemTagJoin),
		"WithWorkItemWorkItemTagLimit":                          reflect.ValueOf(db.WithWorkItemWorkItemTagLimit),
		"WorkItemAssignedUserByWorkItemIDAssignedUser":          reflect.ValueOf(db.WorkItemAssignedUserByWorkItemIDAssignedUser),
		"WorkItemAssignedUserEntity":                            reflect.ValueOf(db.WorkItemAssignedUserEntity),
		"WorkItemAssignedUsersByAssignedUser":                   reflect.ValueOf(db.WorkItemAssignedUsersByAssignedUser),
		"WorkItemAssignedUsersByAssignedUserWorkItemID":         reflect.ValueOf(db.WorkItemAssignedUsersByAssignedUserWorkItemID),
		"WorkItemAssignedUsersByWorkItemID":                     reflect.ValueOf(db.WorkItemAssignedUsersByWorkItemID),
		"WorkItemByWorkItemID":                                  reflect.ValueOf(db.WorkItemByWorkItemID),
		"WorkItemClosedAtAscNullsFirst":                         reflect.ValueOf(db.WorkItemClosedAtAscNullsFirst),
		"WorkItemClosedAtAscNullsLast":                          reflect.ValueOf(db.WorkItemClosedAtAscNullsLast),
		"WorkItemClosedAtDescNullsFirst":                        reflect.ValueOf(db.WorkItemClosedAtDescNullsFirst),
		"WorkItemClosedAtDescNullsLast":                         reflect.ValueOf(db.WorkItemClosedAtDescNullsLast),
		"WorkItemCommentByWorkItemCommentID":                    reflect.ValueOf(db.WorkItemCommentByWorkItemCommentID),
		"WorkItemCommentCreatedAtAscNullsFirst":                 reflect.ValueOf(db.WorkItemCommentCreatedAtAscNullsFirst),
		"WorkItemCommentCreatedAtAscNullsLast":                  reflect.ValueOf(db.WorkItemCommentCreatedAtAscNullsLast),
		"WorkItemCommentCreatedAtDescNullsFirst":                reflect.ValueOf(db.WorkItemCommentCreatedAtDescNullsFirst),
		"WorkItemCommentCreatedAtDescNullsLast":                 reflect.ValueOf(db.WorkItemCommentCreatedAtDescNullsLast),
		"WorkItemCommentEntity":                                 reflect.ValueOf(db.WorkItemCommentEntity),
		"WorkItemCommentPaginatedByWorkItemCommentID":           reflect.ValueOf(db.WorkItemCommentPaginatedByWorkItemCommentID),
		"WorkItemCommentUpdatedAtAscNullsFirst":                 reflect.ValueOf(db.WorkItemCommentUpdatedAtAscNullsFirst),
		"WorkItemCommentUpdatedAtAscNullsLast":                  reflect.ValueOf(db.WorkItemCommentUpdatedAtAscNullsLast),
		"WorkItemCommentUpdatedAtDescNullsFirst":                reflect.ValueOf(db.WorkItemCommentUpdatedAtDescNullsFirst),
		"WorkItemCommentUpdatedAtDescNullsLast":                 reflect.ValueOf(db.WorkItemCommentUpdatedAtDescNullsLast),
		"WorkItemCommentsByWorkItemID":                          reflect.ValueOf(db.WorkItemCommentsByWorkItemID),
		"WorkItemCreatedAtAscNullsFirst":                        reflect.ValueOf(db.WorkItemCreatedAtAscNullsFirst),
		"WorkItemCreatedAtAscNullsLast":                         reflect.ValueOf(db.WorkItemCreatedAtAscNullsLast),
		"WorkItemCreatedAtDescNullsFirst":                       reflect.ValueOf(db.WorkItemCreatedAtDescNullsFirst),
		"WorkItemCreatedAtDescNullsLast":                        reflect.ValueOf(db.WorkItemCreatedAtDescNullsLast),
		"WorkItemDeletedAtAscNullsFirst":                        reflect.ValueOf(db.WorkItemDeletedAtAscNullsFirst),
		"WorkItemDeletedAtAscNullsLast":                         reflect.ValueOf(db.WorkItemDeletedAtAscNullsLast),
		"WorkItemDeletedAtDescNullsFirst":                       reflect.ValueOf(db.WorkItemDeletedAtDescNullsFirst),
		"WorkItemDeletedAtDescNullsLast":                        reflect.ValueOf(db.WorkItemDeletedAtDescNullsLast),
		"WorkItemEntity":                                        reflect.ValueOf(db.WorkItemEntity),
		"WorkItemPaginatedByWorkItemID":                         reflect.ValueOf(db.WorkItemPaginatedByWorkItemID),
		"WorkItemRolePreparer":                                  reflect.ValueOf(db.WorkItemRolePreparer),
		"WorkItemRoleReviewer":                                  reflect.ValueOf(db.WorkItemRoleReviewer),
		"WorkItemTagByNameProjectID":                            reflect.ValueOf(db.WorkItemTagByNameProjectID),
		"WorkItemTagByWorkItemTagID":                            reflect.ValueOf(db.WorkItemTagByWorkItemTagID),
		"WorkItemTagEntity":                                     reflect.ValueOf(db.WorkItemTagEntity),
		"WorkItemTagPaginatedByProjectID":                       reflect.ValueOf(db.WorkItemTagPaginatedByProjectID),
		"WorkItemTagPaginatedByWorkItemTagID":                   reflect.ValueOf(db.WorkItemTagPaginatedByWorkItemTagID),
		"WorkItemTagsByName":                                    reflect.ValueOf(db.WorkItemTagsByName),
		"WorkItemTagsByProjectID":                               reflect.ValueOf(db.WorkItemTagsByProjectID),
		"WorkItemTargetDateAscNullsFirst":                       reflect.ValueOf(db.WorkItemTargetDateAscNullsFirst),
		"WorkItemTargetDateAscNullsLast":                        reflect.ValueOf(db.WorkItemTargetDateAscNullsLast),
		"WorkItemTargetDateDescNullsFirst":                      reflect.ValueOf(db.WorkItemTargetDateDescNullsFirst),
		"WorkItemTargetDateDescNullsLast":                       reflect.ValueOf(db.WorkItemTargetDateDescNullsLast),
		"WorkItemTypeByNameProjectID":                           reflect.ValueOf(db.WorkItemTypeByNameProjectID),
		"WorkItemTypeByWorkItemTypeID":                          reflect.ValueOf(db.WorkItemTypeByWorkItemTypeID),
		"WorkItemTypeEntity":                                    reflect.ValueOf(db.WorkItemTypeEntity),
		"WorkItemTypePaginatedByProjectID":                      reflect.ValueOf(db.WorkItemTypePaginatedByProjectID),
		"WorkItemTypePaginatedByWorkItemTypeID":                 reflect.ValueOf(db.WorkItemTypePaginatedByWorkItemTypeID),
		"WorkItemTypesByName":                                   reflect.ValueOf(db.WorkItemTypesByName),
		"WorkItemTypesByProjectID":                              reflect.ValueOf(db.WorkItemTypesByProjectID),
		"WorkItemUpdatedAtAscNullsFirst":                        reflect.ValueOf(db.WorkItemUpdatedAtAscNullsFirst),
		"WorkItemUpdatedAtAscNullsLast":                         reflect.ValueOf(db.WorkItemUpdatedAtAscNullsLast),
		"WorkItemUpdatedAtDescNullsFirst":                       reflect.ValueOf(db.WorkItemUpdatedAtDescNullsFirst),
		"WorkItemUpdatedAtDescNullsLast":                        reflect.ValueOf(db.WorkItemUpdatedAtDescNullsLast),
		"WorkItemWorkItemTagByWorkItemIDWorkItemTagID":          reflect.ValueOf(db.WorkItemWorkItemTagByWorkItemIDWorkItemTagID),
		"WorkItemWorkItemTagEntity":                             reflect.ValueOf(db.WorkItemWorkItemTagEntity),
		"WorkItemWorkItemTagPaginatedByWorkItemTagIDWorkItemID": reflect.ValueOf(db.WorkItemWorkItemTagPaginatedByWorkItemTagIDWorkItemID),
		"WorkItemWorkItemTagsByWorkItemID":                      reflect.ValueOf(db.WorkItemWorkItemTagsByWorkItemID),
		"WorkItemWorkItemTagsByWorkItemTagID":                   reflect.ValueOf(db.WorkItemWorkItemTagsByWorkItemTagID),
		"WorkItemWorkItemTagsByWorkItemTagIDWorkItemID":         reflect.ValueOf(db.WorkItemWorkItemTagsByWorkItemTagIDWorkItemID),
		"WorkItems":                                             reflect.ValueOf(db.WorkItems),
		"WorkItemsByDeletedAt_WhereDeletedAtIsNotNull":          reflect.ValueOf(db.WorkItemsByDeletedAt_WhereDeletedAtIsNotNull),
		"WorkItemsByTeamID":                                     reflect.ValueOf(db.WorkItemsByTeamID),
		"WorkItemsByTitle":                                      reflect.ValueOf(db.WorkItemsByTitle),

		// type definitions
		"Activity":                               reflect.ValueOf((*db.Activity)(nil)),
		"ActivityCreateParams":                   reflect.ValueOf((*db.ActivityCreateParams)(nil)),
		"ActivityID":                             reflect.ValueOf((*db.ActivityID)(nil)),
		"ActivityJoins":                          reflect.ValueOf((*db.ActivityJoins)(nil)),
		"ActivityOrderBy":                        reflect.ValueOf((*db.ActivityOrderBy)(nil)),
		"ActivitySelectConfig":                   reflect.ValueOf((*db.ActivitySelectConfig)(nil)),
		"ActivitySelectConfigOption":             reflect.ValueOf((*db.ActivitySelectConfigOption)(nil)),
		"ActivityUpdateParams":                   reflect.ValueOf((*db.ActivityUpdateParams)(nil)),
		"DB":                                     reflect.ValueOf((*db.DB)(nil)),
		"DBTX":                                   reflect.ValueOf((*db.DBTX)(nil)),
		"DemoTwoWorkItem":                        reflect.ValueOf((*db.DemoTwoWorkItem)(nil)),
		"DemoTwoWorkItemCreateParams":            reflect.ValueOf((*db.DemoTwoWorkItemCreateParams)(nil)),
		"DemoTwoWorkItemJoins":                   reflect.ValueOf((*db.DemoTwoWorkItemJoins)(nil)),
		"DemoTwoWorkItemOrderBy":                 reflect.ValueOf((*db.DemoTwoWorkItemOrderBy)(nil)),
		"DemoTwoWorkItemSelectConfig":            reflect.ValueOf((*db.DemoTwoWorkItemSelectConfig)(nil)),
		"DemoTwoWorkItemSelectConfigOption":      reflect.ValueOf((*db.DemoTwoWorkItemSelectConfigOption)(nil)),
		"DemoTwoWorkItemUpdateParams":            reflect.ValueOf((*db.DemoTwoWorkItemUpdateParams)(nil)),
		"DemoWorkItem":                           reflect.ValueOf((*db.DemoWorkItem)(nil)),
		"DemoWorkItemCreateParams":               reflect.ValueOf((*db.DemoWorkItemCreateParams)(nil)),
		"DemoWorkItemJoins":                      reflect.ValueOf((*db.DemoWorkItemJoins)(nil)),
		"DemoWorkItemOrderBy":                    reflect.ValueOf((*db.DemoWorkItemOrderBy)(nil)),
		"DemoWorkItemSelectConfig":               reflect.ValueOf((*db.DemoWorkItemSelectConfig)(nil)),
		"DemoWorkItemSelectConfigOption":         reflect.ValueOf((*db.DemoWorkItemSelectConfigOption)(nil)),
		"DemoWorkItemUpdateParams":               reflect.ValueOf((*db.DemoWorkItemUpdateParams)(nil)),
		"Entity":                                 reflect.ValueOf((*db.Entity)(nil)),
		"EntityNotification":                     reflect.ValueOf((*db.EntityNotification)(nil)),
		"EntityNotificationCreateParams":         reflect.ValueOf((*db.EntityNotificationCreateParams)(nil)),
		"EntityNotificationID":                   reflect.ValueOf((*db.EntityNotificationID)(nil)),
		"EntityNotificationJoins":                reflect.ValueOf((*db.EntityNotificationJoins)(nil)),
		"EntityNotificationOrderBy":              reflect.ValueOf((*db.EntityNotificationOrderBy)(nil)),
		"EntityNotificationSelectConfig":         reflect.ValueOf((*db.EntityNotificationSelectConfig)(nil)),
		"EntityNotificationSelectConfigOption":   reflect.ValueOf((*db.EntityNotificationSelectConfigOption)(nil)),
		"EntityNotificationUpdateParams":         reflect.ValueOf((*db.EntityNotificationUpdateParams)(nil)),
		"ErrInsertFailed":                        reflect.ValueOf((*db.ErrInsertFailed)(nil)),
		"ErrInvalidNotificationType":             reflect.ValueOf((*db.ErrInvalidNotificationType)(nil)),
		"ErrInvalidWorkItemRole":                 reflect.ValueOf((*db.ErrInvalidWorkItemRole)(nil)),
		"ErrUpdateFailed":                        reflect.ValueOf((*db.ErrUpdateFailed)(nil)),
		"ErrUpsertFailed":                        reflect.ValueOf((*db.ErrUpsertFailed)(nil)),
		"Error":                                  reflect.ValueOf((*db.Error)(nil)),
		"GetUserNotificationsParams":             reflect.ValueOf((*db.GetUserNotificationsParams)(nil)),
		"GetUserNotificationsRow":                reflect.ValueOf((*db.GetUserNotificationsRow)(nil)),
		"GetUserParams":                          reflect.ValueOf((*db.GetUserParams)(nil)),
		"GetUserRow":                             reflect.ValueOf((*db.GetUserRow)(nil)),
		"IsUserInProjectParams":                  reflect.ValueOf((*db.IsUserInProjectParams)(nil)),
		"KanbanStep":                             reflect.ValueOf((*db.KanbanStep)(nil)),
		"KanbanStepCreateParams":                 reflect.ValueOf((*db.KanbanStepCreateParams)(nil)),
		"KanbanStepID":                           reflect.ValueOf((*db.KanbanStepID)(nil)),
		"KanbanStepJoins":                        reflect.ValueOf((*db.KanbanStepJoins)(nil)),
		"KanbanStepOrderBy":                      reflect.ValueOf((*db.KanbanStepOrderBy)(nil)),
		"KanbanStepSelectConfig":                 reflect.ValueOf((*db.KanbanStepSelectConfig)(nil)),
		"KanbanStepSelectConfigOption":           reflect.ValueOf((*db.KanbanStepSelectConfigOption)(nil)),
		"KanbanStepUpdateParams":                 reflect.ValueOf((*db.KanbanStepUpdateParams)(nil)),
		"Movie":                                  reflect.ValueOf((*db.Movie)(nil)),
		"MovieCreateParams":                      reflect.ValueOf((*db.MovieCreateParams)(nil)),
		"MovieID":                                reflect.ValueOf((*db.MovieID)(nil)),
		"MovieJoins":                             reflect.ValueOf((*db.MovieJoins)(nil)),
		"MovieOrderBy":                           reflect.ValueOf((*db.MovieOrderBy)(nil)),
		"MovieSelectConfig":                      reflect.ValueOf((*db.MovieSelectConfig)(nil)),
		"MovieSelectConfigOption":                reflect.ValueOf((*db.MovieSelectConfigOption)(nil)),
		"MovieUpdateParams":                      reflect.ValueOf((*db.MovieUpdateParams)(nil)),
		"Notification":                           reflect.ValueOf((*db.Notification)(nil)),
		"NotificationCreateParams":               reflect.ValueOf((*db.NotificationCreateParams)(nil)),
		"NotificationID":                         reflect.ValueOf((*db.NotificationID)(nil)),
		"NotificationJoins":                      reflect.ValueOf((*db.NotificationJoins)(nil)),
		"NotificationOrderBy":                    reflect.ValueOf((*db.NotificationOrderBy)(nil)),
		"NotificationSelectConfig":               reflect.ValueOf((*db.NotificationSelectConfig)(nil)),
		"NotificationSelectConfigOption":         reflect.ValueOf((*db.NotificationSelectConfigOption)(nil)),
		"NotificationType":                       reflect.ValueOf((*db.NotificationType)(nil)),
		"NotificationUpdateParams":               reflect.ValueOf((*db.NotificationUpdateParams)(nil)),
		"NullNotificationType":                   reflect.ValueOf((*db.NullNotificationType)(nil)),
		"NullWorkItemRole":                       reflect.ValueOf((*db.NullWorkItemRole)(nil)),
		"Project":                                reflect.ValueOf((*db.Project)(nil)),
		"ProjectCreateParams":                    reflect.ValueOf((*db.ProjectCreateParams)(nil)),
		"ProjectID":                              reflect.ValueOf((*db.ProjectID)(nil)),
		"ProjectJoins":                           reflect.ValueOf((*db.ProjectJoins)(nil)),
		"ProjectOrderBy":                         reflect.ValueOf((*db.ProjectOrderBy)(nil)),
		"ProjectSelectConfig":                    reflect.ValueOf((*db.ProjectSelectConfig)(nil)),
		"ProjectSelectConfigOption":              reflect.ValueOf((*db.ProjectSelectConfigOption)(nil)),
		"ProjectUpdateParams":                    reflect.ValueOf((*db.ProjectUpdateParams)(nil)),
		"Querier":                                reflect.ValueOf((*db.Querier)(nil)),
		"Queries":                                reflect.ValueOf((*db.Queries)(nil)),
		"SchemaMigration":                        reflect.ValueOf((*db.SchemaMigration)(nil)),
		"SchemaMigrationCreateParams":            reflect.ValueOf((*db.SchemaMigrationCreateParams)(nil)),
		"SchemaMigrationID":                      reflect.ValueOf((*db.SchemaMigrationID)(nil)),
		"SchemaMigrationJoins":                   reflect.ValueOf((*db.SchemaMigrationJoins)(nil)),
		"SchemaMigrationOrderBy":                 reflect.ValueOf((*db.SchemaMigrationOrderBy)(nil)),
		"SchemaMigrationSelectConfig":            reflect.ValueOf((*db.SchemaMigrationSelectConfig)(nil)),
		"SchemaMigrationSelectConfigOption":      reflect.ValueOf((*db.SchemaMigrationSelectConfigOption)(nil)),
		"SchemaMigrationUpdateParams":            reflect.ValueOf((*db.SchemaMigrationUpdateParams)(nil)),
		"Team":                                   reflect.ValueOf((*db.Team)(nil)),
		"TeamCreateParams":                       reflect.ValueOf((*db.TeamCreateParams)(nil)),
		"TeamID":                                 reflect.ValueOf((*db.TeamID)(nil)),
		"TeamJoins":                              reflect.ValueOf((*db.TeamJoins)(nil)),
		"TeamOrderBy":                            reflect.ValueOf((*db.TeamOrderBy)(nil)),
		"TeamSelectConfig":                       reflect.ValueOf((*db.TeamSelectConfig)(nil)),
		"TeamSelectConfigOption":                 reflect.ValueOf((*db.TeamSelectConfigOption)(nil)),
		"TeamUpdateParams":                       reflect.ValueOf((*db.TeamUpdateParams)(nil)),
		"TimeEntry":                              reflect.ValueOf((*db.TimeEntry)(nil)),
		"TimeEntryCreateParams":                  reflect.ValueOf((*db.TimeEntryCreateParams)(nil)),
		"TimeEntryID":                            reflect.ValueOf((*db.TimeEntryID)(nil)),
		"TimeEntryJoins":                         reflect.ValueOf((*db.TimeEntryJoins)(nil)),
		"TimeEntryOrderBy":                       reflect.ValueOf((*db.TimeEntryOrderBy)(nil)),
		"TimeEntrySelectConfig":                  reflect.ValueOf((*db.TimeEntrySelectConfig)(nil)),
		"TimeEntrySelectConfigOption":            reflect.ValueOf((*db.TimeEntrySelectConfigOption)(nil)),
		"TimeEntryUpdateParams":                  reflect.ValueOf((*db.TimeEntryUpdateParams)(nil)),
		"Trigger":                                reflect.ValueOf((*db.Trigger)(nil)),
		"User":                                   reflect.ValueOf((*db.User)(nil)),
		"UserAPIKey":                             reflect.ValueOf((*db.UserAPIKey)(nil)),
		"UserAPIKeyCreateParams":                 reflect.ValueOf((*db.UserAPIKeyCreateParams)(nil)),
		"UserAPIKeyID":                           reflect.ValueOf((*db.UserAPIKeyID)(nil)),
		"UserAPIKeyJoins":                        reflect.ValueOf((*db.UserAPIKeyJoins)(nil)),
		"UserAPIKeyOrderBy":                      reflect.ValueOf((*db.UserAPIKeyOrderBy)(nil)),
		"UserAPIKeySelectConfig":                 reflect.ValueOf((*db.UserAPIKeySelectConfig)(nil)),
		"UserAPIKeySelectConfigOption":           reflect.ValueOf((*db.UserAPIKeySelectConfigOption)(nil)),
		"UserAPIKeyUpdateParams":                 reflect.ValueOf((*db.UserAPIKeyUpdateParams)(nil)),
		"UserCreateParams":                       reflect.ValueOf((*db.UserCreateParams)(nil)),
		"UserID":                                 reflect.ValueOf((*db.UserID)(nil)),
		"UserJoins":                              reflect.ValueOf((*db.UserJoins)(nil)),
		"UserNotification":                       reflect.ValueOf((*db.UserNotification)(nil)),
		"UserNotificationCreateParams":           reflect.ValueOf((*db.UserNotificationCreateParams)(nil)),
		"UserNotificationID":                     reflect.ValueOf((*db.UserNotificationID)(nil)),
		"UserNotificationJoins":                  reflect.ValueOf((*db.UserNotificationJoins)(nil)),
		"UserNotificationOrderBy":                reflect.ValueOf((*db.UserNotificationOrderBy)(nil)),
		"UserNotificationSelectConfig":           reflect.ValueOf((*db.UserNotificationSelectConfig)(nil)),
		"UserNotificationSelectConfigOption":     reflect.ValueOf((*db.UserNotificationSelectConfigOption)(nil)),
		"UserNotificationUpdateParams":           reflect.ValueOf((*db.UserNotificationUpdateParams)(nil)),
		"UserOrderBy":                            reflect.ValueOf((*db.UserOrderBy)(nil)),
		"UserSelectConfig":                       reflect.ValueOf((*db.UserSelectConfig)(nil)),
		"UserSelectConfigOption":                 reflect.ValueOf((*db.UserSelectConfigOption)(nil)),
		"UserTeam":                               reflect.ValueOf((*db.UserTeam)(nil)),
		"UserTeamCreateParams":                   reflect.ValueOf((*db.UserTeamCreateParams)(nil)),
		"UserTeamJoins":                          reflect.ValueOf((*db.UserTeamJoins)(nil)),
		"UserTeamOrderBy":                        reflect.ValueOf((*db.UserTeamOrderBy)(nil)),
		"UserTeamSelectConfig":                   reflect.ValueOf((*db.UserTeamSelectConfig)(nil)),
		"UserTeamSelectConfigOption":             reflect.ValueOf((*db.UserTeamSelectConfigOption)(nil)),
		"UserTeamUpdateParams":                   reflect.ValueOf((*db.UserTeamUpdateParams)(nil)),
		"UserUpdateParams":                       reflect.ValueOf((*db.UserUpdateParams)(nil)),
		"User__WIAU_WorkItem":                    reflect.ValueOf((*db.User__WIAU_WorkItem)(nil)),
		"User__WIAU_WorkItemAssignedUser":        reflect.ValueOf((*db.User__WIAU_WorkItemAssignedUser)(nil)),
		"WorkItem":                               reflect.ValueOf((*db.WorkItem)(nil)),
		"WorkItemAssignedUser":                   reflect.ValueOf((*db.WorkItemAssignedUser)(nil)),
		"WorkItemAssignedUserCreateParams":       reflect.ValueOf((*db.WorkItemAssignedUserCreateParams)(nil)),
		"WorkItemAssignedUserJoins":              reflect.ValueOf((*db.WorkItemAssignedUserJoins)(nil)),
		"WorkItemAssignedUserOrderBy":            reflect.ValueOf((*db.WorkItemAssignedUserOrderBy)(nil)),
		"WorkItemAssignedUserSelectConfig":       reflect.ValueOf((*db.WorkItemAssignedUserSelectConfig)(nil)),
		"WorkItemAssignedUserSelectConfigOption": reflect.ValueOf((*db.WorkItemAssignedUserSelectConfigOption)(nil)),
		"WorkItemAssignedUserUpdateParams":       reflect.ValueOf((*db.WorkItemAssignedUserUpdateParams)(nil)),
		"WorkItemComment":                        reflect.ValueOf((*db.WorkItemComment)(nil)),
		"WorkItemCommentCreateParams":            reflect.ValueOf((*db.WorkItemCommentCreateParams)(nil)),
		"WorkItemCommentID":                      reflect.ValueOf((*db.WorkItemCommentID)(nil)),
		"WorkItemCommentJoins":                   reflect.ValueOf((*db.WorkItemCommentJoins)(nil)),
		"WorkItemCommentOrderBy":                 reflect.ValueOf((*db.WorkItemCommentOrderBy)(nil)),
		"WorkItemCommentSelectConfig":            reflect.ValueOf((*db.WorkItemCommentSelectConfig)(nil)),
		"WorkItemCommentSelectConfigOption":      reflect.ValueOf((*db.WorkItemCommentSelectConfigOption)(nil)),
		"WorkItemCommentUpdateParams":            reflect.ValueOf((*db.WorkItemCommentUpdateParams)(nil)),
		"WorkItemCreateParams":                   reflect.ValueOf((*db.WorkItemCreateParams)(nil)),
		"WorkItemID":                             reflect.ValueOf((*db.WorkItemID)(nil)),
		"WorkItemJoins":                          reflect.ValueOf((*db.WorkItemJoins)(nil)),
		"WorkItemOrderBy":                        reflect.ValueOf((*db.WorkItemOrderBy)(nil)),
		"WorkItemRole":                           reflect.ValueOf((*db.WorkItemRole)(nil)),
		"WorkItemSelectConfig":                   reflect.ValueOf((*db.WorkItemSelectConfig)(nil)),
		"WorkItemSelectConfigOption":             reflect.ValueOf((*db.WorkItemSelectConfigOption)(nil)),
		"WorkItemTag":                            reflect.ValueOf((*db.WorkItemTag)(nil)),
		"WorkItemTagCreateParams":                reflect.ValueOf((*db.WorkItemTagCreateParams)(nil)),
		"WorkItemTagID":                          reflect.ValueOf((*db.WorkItemTagID)(nil)),
		"WorkItemTagJoins":                       reflect.ValueOf((*db.WorkItemTagJoins)(nil)),
		"WorkItemTagOrderBy":                     reflect.ValueOf((*db.WorkItemTagOrderBy)(nil)),
		"WorkItemTagSelectConfig":                reflect.ValueOf((*db.WorkItemTagSelectConfig)(nil)),
		"WorkItemTagSelectConfigOption":          reflect.ValueOf((*db.WorkItemTagSelectConfigOption)(nil)),
		"WorkItemTagUpdateParams":                reflect.ValueOf((*db.WorkItemTagUpdateParams)(nil)),
		"WorkItemType":                           reflect.ValueOf((*db.WorkItemType)(nil)),
		"WorkItemTypeCreateParams":               reflect.ValueOf((*db.WorkItemTypeCreateParams)(nil)),
		"WorkItemTypeID":                         reflect.ValueOf((*db.WorkItemTypeID)(nil)),
		"WorkItemTypeJoins":                      reflect.ValueOf((*db.WorkItemTypeJoins)(nil)),
		"WorkItemTypeOrderBy":                    reflect.ValueOf((*db.WorkItemTypeOrderBy)(nil)),
		"WorkItemTypeSelectConfig":               reflect.ValueOf((*db.WorkItemTypeSelectConfig)(nil)),
		"WorkItemTypeSelectConfigOption":         reflect.ValueOf((*db.WorkItemTypeSelectConfigOption)(nil)),
		"WorkItemTypeUpdateParams":               reflect.ValueOf((*db.WorkItemTypeUpdateParams)(nil)),
		"WorkItemUpdateParams":                   reflect.ValueOf((*db.WorkItemUpdateParams)(nil)),
		"WorkItemWorkItemTag":                    reflect.ValueOf((*db.WorkItemWorkItemTag)(nil)),
		"WorkItemWorkItemTagCreateParams":        reflect.ValueOf((*db.WorkItemWorkItemTagCreateParams)(nil)),
		"WorkItemWorkItemTagJoins":               reflect.ValueOf((*db.WorkItemWorkItemTagJoins)(nil)),
		"WorkItemWorkItemTagOrderBy":             reflect.ValueOf((*db.WorkItemWorkItemTagOrderBy)(nil)),
		"WorkItemWorkItemTagSelectConfig":        reflect.ValueOf((*db.WorkItemWorkItemTagSelectConfig)(nil)),
		"WorkItemWorkItemTagSelectConfigOption":  reflect.ValueOf((*db.WorkItemWorkItemTagSelectConfigOption)(nil)),
		"WorkItemWorkItemTagUpdateParams":        reflect.ValueOf((*db.WorkItemWorkItemTagUpdateParams)(nil)),
		"WorkItem__WIAU_User":                    reflect.ValueOf((*db.WorkItem__WIAU_User)(nil)),
		"WorkItem__WIAU_WorkItemAssignedUser":    reflect.ValueOf((*db.WorkItem__WIAU_WorkItemAssignedUser)(nil)),
		"XoError":                                reflect.ValueOf((*db.XoError)(nil)),

		// interface wrapper definitions
		"_DB":      reflect.ValueOf((*_github_com_danicc097_openapi_go_gin_postgres_sqlc_internal_repos_postgresql_gen_db_DB)(nil)),
		"_DBTX":    reflect.ValueOf((*_github_com_danicc097_openapi_go_gin_postgres_sqlc_internal_repos_postgresql_gen_db_DBTX)(nil)),
		"_Querier": reflect.ValueOf((*_github_com_danicc097_openapi_go_gin_postgres_sqlc_internal_repos_postgresql_gen_db_Querier)(nil)),
	}
}

// _github_com_danicc097_openapi_go_gin_postgres_sqlc_internal_repos_postgresql_gen_db_DB is an interface wrapper for DB type
type _github_com_danicc097_openapi_go_gin_postgres_sqlc_internal_repos_postgresql_gen_db_DB struct {
	IValue    interface{}
	WExec     func(a0 context.Context, a1 string, a2 ...interface{}) (pgconn.CommandTag, error)
	WQuery    func(a0 context.Context, a1 string, a2 ...interface{}) (pgx.Rows, error)
	WQueryRow func(a0 context.Context, a1 string, a2 ...interface{}) pgx.Row
}

func (W _github_com_danicc097_openapi_go_gin_postgres_sqlc_internal_repos_postgresql_gen_db_DB) Exec(a0 context.Context, a1 string, a2 ...interface{}) (pgconn.CommandTag, error) {
	return W.WExec(a0, a1, a2...)
}
func (W _github_com_danicc097_openapi_go_gin_postgres_sqlc_internal_repos_postgresql_gen_db_DB) Query(a0 context.Context, a1 string, a2 ...interface{}) (pgx.Rows, error) {
	return W.WQuery(a0, a1, a2...)
}
func (W _github_com_danicc097_openapi_go_gin_postgres_sqlc_internal_repos_postgresql_gen_db_DB) QueryRow(a0 context.Context, a1 string, a2 ...interface{}) pgx.Row {
	return W.WQueryRow(a0, a1, a2...)
}

// _github_com_danicc097_openapi_go_gin_postgres_sqlc_internal_repos_postgresql_gen_db_DBTX is an interface wrapper for DBTX type
type _github_com_danicc097_openapi_go_gin_postgres_sqlc_internal_repos_postgresql_gen_db_DBTX struct {
	IValue    interface{}
	WExec     func(a0 context.Context, a1 string, a2 ...interface{}) (pgconn.CommandTag, error)
	WQuery    func(a0 context.Context, a1 string, a2 ...interface{}) (pgx.Rows, error)
	WQueryRow func(a0 context.Context, a1 string, a2 ...interface{}) pgx.Row
}

func (W _github_com_danicc097_openapi_go_gin_postgres_sqlc_internal_repos_postgresql_gen_db_DBTX) Exec(a0 context.Context, a1 string, a2 ...interface{}) (pgconn.CommandTag, error) {
	return W.WExec(a0, a1, a2...)
}
func (W _github_com_danicc097_openapi_go_gin_postgres_sqlc_internal_repos_postgresql_gen_db_DBTX) Query(a0 context.Context, a1 string, a2 ...interface{}) (pgx.Rows, error) {
	return W.WQuery(a0, a1, a2...)
}
func (W _github_com_danicc097_openapi_go_gin_postgres_sqlc_internal_repos_postgresql_gen_db_DBTX) QueryRow(a0 context.Context, a1 string, a2 ...interface{}) pgx.Row {
	return W.WQueryRow(a0, a1, a2...)
}

// _github_com_danicc097_openapi_go_gin_postgres_sqlc_internal_repos_postgresql_gen_db_Querier is an interface wrapper for Querier type
type _github_com_danicc097_openapi_go_gin_postgres_sqlc_internal_repos_postgresql_gen_db_Querier struct {
	IValue                interface{}
	WGetUser              func(ctx context.Context, db db.DBTX, arg db.GetUserParams) (db.GetUserRow, error)
	WGetUserNotifications func(ctx context.Context, db db.DBTX, arg db.GetUserNotificationsParams) ([]db.GetUserNotificationsRow, error)
	WIsUserInProject      func(ctx context.Context, db db.DBTX, arg db.IsUserInProjectParams) (bool, error)
}

func (W _github_com_danicc097_openapi_go_gin_postgres_sqlc_internal_repos_postgresql_gen_db_Querier) GetUser(ctx context.Context, db db.DBTX, arg db.GetUserParams) (db.GetUserRow, error) {
	return W.WGetUser(ctx, db, arg)
}
func (W _github_com_danicc097_openapi_go_gin_postgres_sqlc_internal_repos_postgresql_gen_db_Querier) GetUserNotifications(ctx context.Context, db db.DBTX, arg db.GetUserNotificationsParams) ([]db.GetUserNotificationsRow, error) {
	return W.WGetUserNotifications(ctx, db, arg)
}
func (W _github_com_danicc097_openapi_go_gin_postgres_sqlc_internal_repos_postgresql_gen_db_Querier) IsUserInProject(ctx context.Context, db db.DBTX, arg db.IsUserInProjectParams) (bool, error) {
	return W.WIsUserInProject(ctx, db, arg)
}
