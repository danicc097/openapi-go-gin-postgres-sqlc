package v

// Code generated by xo. DO NOT EDIT.

import (
	"fmt"
	"strings"
	"time"

	"github.com/google/uuid"
)

// UserPublic represents fields that may be exposed from 'v.users'
// and embedded in other response models.
type UserPublic struct {
	UserID     *uuid.UUID `json:"userID"`     // user_id
	Username   *string    `json:"username"`   // username
	Email      *string    `json:"email"`      // email
	FirstName  *string    `json:"firstName"`  // first_name
	LastName   *string    `json:"lastName"`   // last_name
	FullName   *string    `json:"fullName"`   // full_name
	ExternalID *string    `json:"externalID"` // external_id
	APIKeyID   *int       `json:"apiKeyID"`   // api_key_id
	Scopes     []string   `json:"scopes"`     // scopes
	RoleRank   *int16     `json:"roleRank"`   // role_rank
	CreatedAt  *time.Time `json:"createdAt"`  // created_at
	UpdatedAt  *time.Time `json:"updatedAt"`  // updated_at
	DeletedAt  *time.Time `json:"deletedAt"`  // deleted_at
	Teams      []any      `json:"teams"`      // teams
}

// User represents a row from 'v.users'.
type User struct {
	UserID     *uuid.UUID `json:"user_id" db:"user_id" openapi-json:"userID"`             // user_id
	Username   *string    `json:"username" db:"username" openapi-json:"username"`         // username
	Email      *string    `json:"email" db:"email" openapi-json:"email"`                  // email
	FirstName  *string    `json:"first_name" db:"first_name" openapi-json:"firstName"`    // first_name
	LastName   *string    `json:"last_name" db:"last_name" openapi-json:"lastName"`       // last_name
	FullName   *string    `json:"full_name" db:"full_name" openapi-json:"fullName"`       // full_name
	ExternalID *string    `json:"external_id" db:"external_id" openapi-json:"externalID"` // external_id
	APIKeyID   *int       `json:"api_key_id" db:"api_key_id" openapi-json:"apiKeyID"`     // api_key_id
	Scopes     []string   `json:"scopes" db:"scopes" openapi-json:"scopes"`               // scopes
	RoleRank   *int16     `json:"role_rank" db:"role_rank" openapi-json:"roleRank"`       // role_rank
	CreatedAt  *time.Time `json:"created_at" db:"created_at" openapi-json:"createdAt"`    // created_at
	UpdatedAt  *time.Time `json:"updated_at" db:"updated_at" openapi-json:"updatedAt"`    // updated_at
	DeletedAt  *time.Time `json:"deleted_at" db:"deleted_at" openapi-json:"deletedAt"`    // deleted_at
	Teams      []any      `json:"teams" db:"teams" openapi-json:"teams"`                  // teams
}

type UserSelectConfig struct {
	limit     string
	orderBy   string
	joins     UserJoins
	deletedAt string
}
type UserSelectConfigOption func(*UserSelectConfig)

// WithUserLimit limits row selection.
func WithUserLimit(limit int) UserSelectConfigOption {
	return func(s *UserSelectConfig) {
		s.limit = fmt.Sprintf(" limit %d ", limit)
	}
}

// WithDeletedUserOnly limits result to records marked as deleted.
func WithDeletedUserOnly() UserSelectConfigOption {
	return func(s *UserSelectConfig) {
		s.deletedAt = " not null "
	}
}

type UserOrderBy = string

const (
	UserCreatedAtDescNullsFirst UserOrderBy = " created_at DESC NULLS FIRST "
	UserCreatedAtDescNullsLast  UserOrderBy = " created_at DESC NULLS LAST "
	UserCreatedAtAscNullsFirst  UserOrderBy = " created_at ASC NULLS FIRST "
	UserCreatedAtAscNullsLast   UserOrderBy = " created_at ASC NULLS LAST "
	UserUpdatedAtDescNullsFirst UserOrderBy = " updated_at DESC NULLS FIRST "
	UserUpdatedAtDescNullsLast  UserOrderBy = " updated_at DESC NULLS LAST "
	UserUpdatedAtAscNullsFirst  UserOrderBy = " updated_at ASC NULLS FIRST "
	UserUpdatedAtAscNullsLast   UserOrderBy = " updated_at ASC NULLS LAST "
	UserDeletedAtDescNullsFirst UserOrderBy = " deleted_at DESC NULLS FIRST "
	UserDeletedAtDescNullsLast  UserOrderBy = " deleted_at DESC NULLS LAST "
	UserDeletedAtAscNullsFirst  UserOrderBy = " deleted_at ASC NULLS FIRST "
	UserDeletedAtAscNullsLast   UserOrderBy = " deleted_at ASC NULLS LAST "
)

// WithUserOrderBy orders results by the given columns.
func WithUserOrderBy(rows ...UserOrderBy) UserSelectConfigOption {
	return func(s *UserSelectConfig) {
		if len(rows) == 0 {
			s.orderBy = ""
			return
		}
		s.orderBy = " order by "
		s.orderBy += strings.Join(rows, ", ")
	}
}

type UserJoins struct{}

// WithUserJoin orders results by the given columns.
func WithUserJoin(joins UserJoins) UserSelectConfigOption {
	return func(s *UserSelectConfig) {
		s.joins = joins
	}
}
