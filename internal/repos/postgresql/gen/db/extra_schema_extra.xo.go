package db

// Code generated by xo. DO NOT EDIT.

type ExtraSchemaTableEntity string

const (
	ExtraSchemaTableEntityExtraSchemaBook                    ExtraSchemaTableEntity = "extraSchemaBook"
	ExtraSchemaTableEntityExtraSchemaBookAuthor              ExtraSchemaTableEntity = "extraSchemaBookAuthor"
	ExtraSchemaTableEntityExtraSchemaBookAuthorsSurrogateKey ExtraSchemaTableEntity = "extraSchemaBookAuthorsSurrogateKey"
	ExtraSchemaTableEntityExtraSchemaBookReview              ExtraSchemaTableEntity = "extraSchemaBookReview"
	ExtraSchemaTableEntityExtraSchemaBookSeller              ExtraSchemaTableEntity = "extraSchemaBookSeller"
	ExtraSchemaTableEntityExtraSchemaDemoWorkItem            ExtraSchemaTableEntity = "extraSchemaDemoWorkItem"
	ExtraSchemaTableEntityExtraSchemaDummyJoin               ExtraSchemaTableEntity = "extraSchemaDummyJoin"
	ExtraSchemaTableEntityExtraSchemaNotification            ExtraSchemaTableEntity = "extraSchemaNotification"
	ExtraSchemaTableEntityExtraSchemaPagElement              ExtraSchemaTableEntity = "extraSchemaPagElement"
	ExtraSchemaTableEntityExtraSchemaUser                    ExtraSchemaTableEntity = "extraSchemaUser"
	ExtraSchemaTableEntityExtraSchemaUserAPIKey              ExtraSchemaTableEntity = "extraSchemaUserAPIKey"
	ExtraSchemaTableEntityExtraSchemaWorkItem                ExtraSchemaTableEntity = "extraSchemaWorkItem"
	ExtraSchemaTableEntityExtraSchemaWorkItemAdmin           ExtraSchemaTableEntity = "extraSchemaWorkItemAdmin"
	ExtraSchemaTableEntityExtraSchemaWorkItemAssignee        ExtraSchemaTableEntity = "extraSchemaWorkItemAssignee"
)

var ExtraSchemaEntityFilters = map[ExtraSchemaTableEntity]map[string]Filter{
	ExtraSchemaTableEntityExtraSchemaBook: {
		"bookID": Filter{Type: "integer", Db: "book_id", Nullable: false},
		"name":   Filter{Type: "string", Db: "name", Nullable: false},
	},
	ExtraSchemaTableEntityExtraSchemaBookAuthor: {
		"bookID":    Filter{Type: "integer", Db: "book_id", Nullable: false},
		"pseudonym": Filter{Type: "string", Db: "pseudonym", Nullable: true},
	},
	ExtraSchemaTableEntityExtraSchemaBookAuthorsSurrogateKey: {
		"bookAuthorsSurrogateKeyID": Filter{Type: "integer", Db: "book_authors_surrogate_key_id", Nullable: false},
		"bookID":                    Filter{Type: "integer", Db: "book_id", Nullable: false},
		"pseudonym":                 Filter{Type: "string", Db: "pseudonym", Nullable: true},
	},
	ExtraSchemaTableEntityExtraSchemaBookReview: {
		"bookID":       Filter{Type: "integer", Db: "book_id", Nullable: false},
		"bookReviewID": Filter{Type: "integer", Db: "book_review_id", Nullable: false},
	},
	ExtraSchemaTableEntityExtraSchemaBookSeller: {
		"bookID": Filter{Type: "integer", Db: "book_id", Nullable: false},
	},
	ExtraSchemaTableEntityExtraSchemaDemoWorkItem: {
		"checked":    Filter{Type: "boolean", Db: "checked", Nullable: false},
		"workItemID": Filter{Type: "integer", Db: "work_item_id", Nullable: false},
	},
	ExtraSchemaTableEntityExtraSchemaDummyJoin: {
		"dummyJoinID": Filter{Type: "integer", Db: "dummy_join_id", Nullable: false},
		"name":        Filter{Type: "string", Db: "name", Nullable: true},
	},
	ExtraSchemaTableEntityExtraSchemaNotification: {
		"notificationID": Filter{Type: "integer", Db: "notification_id", Nullable: false},
	},
	ExtraSchemaTableEntityExtraSchemaPagElement: {
		"createdAt": Filter{Type: "date-time", Db: "created_at", Nullable: false},
		"dummy":     Filter{Type: "integer", Db: "dummy", Nullable: true},
		"name":      Filter{Type: "string", Db: "name", Nullable: false},
	},
	ExtraSchemaTableEntityExtraSchemaUser: {
		"apiKeyID":  Filter{Type: "integer", Db: "api_key_id", Nullable: true},
		"createdAt": Filter{Type: "date-time", Db: "created_at", Nullable: false},
		"deletedAt": Filter{Type: "date-time", Db: "deleted_at", Nullable: true},
		"name":      Filter{Type: "string", Db: "name", Nullable: false},
	},
	ExtraSchemaTableEntityExtraSchemaUserAPIKey: {
		"apiKey":    Filter{Type: "string", Db: "api_key", Nullable: false},
		"expiresOn": Filter{Type: "date-time", Db: "expires_on", Nullable: false},
	},
	ExtraSchemaTableEntityExtraSchemaWorkItem: {
		"description": Filter{Type: "string", Db: "description", Nullable: true},
		"title":       Filter{Type: "string", Db: "title", Nullable: true},
		"workItemID":  Filter{Type: "integer", Db: "work_item_id", Nullable: false},
	},
	ExtraSchemaTableEntityExtraSchemaWorkItemAdmin: {
		"workItemID": Filter{Type: "integer", Db: "work_item_id", Nullable: false},
	},
	ExtraSchemaTableEntityExtraSchemaWorkItemAssignee: {
		"workItemID": Filter{Type: "integer", Db: "work_item_id", Nullable: false},
	},
}

var ExtraSchemaEntityFields = map[ExtraSchemaTableEntity]map[string]DbField{
	ExtraSchemaTableEntityExtraSchemaBook: {
		"bookID": DbField{Db: "book_id"},
		"name":   DbField{Db: "name"},
	},
	ExtraSchemaTableEntityExtraSchemaBookAuthor: {
		"bookID":    DbField{Db: "book_id"},
		"pseudonym": DbField{Db: "pseudonym"},
	},
	ExtraSchemaTableEntityExtraSchemaBookAuthorsSurrogateKey: {
		"bookAuthorsSurrogateKeyID": DbField{Db: "book_authors_surrogate_key_id"},
		"bookID":                    DbField{Db: "book_id"},
		"pseudonym":                 DbField{Db: "pseudonym"},
	},
	ExtraSchemaTableEntityExtraSchemaBookReview: {
		"bookID":       DbField{Db: "book_id"},
		"bookReviewID": DbField{Db: "book_review_id"},
	},
	ExtraSchemaTableEntityExtraSchemaBookSeller: {
		"bookID": DbField{Db: "book_id"},
	},
	ExtraSchemaTableEntityExtraSchemaDemoWorkItem: {
		"checked":    DbField{Db: "checked"},
		"workItemID": DbField{Db: "work_item_id"},
	},
	ExtraSchemaTableEntityExtraSchemaDummyJoin: {
		"dummyJoinID": DbField{Db: "dummy_join_id"},
		"name":        DbField{Db: "name"},
	},
	ExtraSchemaTableEntityExtraSchemaNotification: {
		"body":           DbField{Db: "body"},
		"notificationID": DbField{Db: "notification_id"},
	},
	ExtraSchemaTableEntityExtraSchemaPagElement: {
		"createdAt": DbField{Db: "created_at"},
		"dummy":     DbField{Db: "dummy"},
		"name":      DbField{Db: "name"},
	},
	ExtraSchemaTableEntityExtraSchemaUser: {
		"apiKeyID":  DbField{Db: "api_key_id"},
		"createdAt": DbField{Db: "created_at"},
		"deletedAt": DbField{Db: "deleted_at"},
		"name":      DbField{Db: "name"},
	},
	ExtraSchemaTableEntityExtraSchemaUserAPIKey: {
		"apiKey":       DbField{Db: "api_key"},
		"expiresOn":    DbField{Db: "expires_on"},
		"userAPIKeyID": DbField{Db: "user_api_key_id"},
	},
	ExtraSchemaTableEntityExtraSchemaWorkItem: {
		"description": DbField{Db: "description"},
		"title":       DbField{Db: "title"},
		"workItemID":  DbField{Db: "work_item_id"},
	},
	ExtraSchemaTableEntityExtraSchemaWorkItemAdmin: {
		"workItemID": DbField{Db: "work_item_id"},
	},
	ExtraSchemaTableEntityExtraSchemaWorkItemAssignee: {
		"workItemID": DbField{Db: "work_item_id"},
	},
}
