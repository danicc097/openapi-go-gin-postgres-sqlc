package db

// Code generated by xo. DO NOT EDIT.

import (
	"fmt"
)

func newPointer[T any](v T) *T {
	return &v
}

type XoError struct {
	Entity string
	Err    error
}

// Error satisfies the error interface.
func (e *XoError) Error() string {
	return fmt.Sprintf("%s %v", e.Entity, e.Err)
}

// Unwrap satisfies the unwrap interface.
func (err *XoError) Unwrap() error {
	return err.Err
}

type Entity string

const (
	DemoWorkItemEntity         Entity = "DemoWorkItem"
	UserTeamEntity             Entity = "UserTeam"
	WorkItemAssignedUserEntity Entity = "WorkItemAssignedUser"
	MovieEntity                Entity = "Movie"
	TeamEntity                 Entity = "Team"
	UserNotificationEntity     Entity = "UserNotification"
	WorkItemTagEntity          Entity = "WorkItemTag"
	WorkItemTypeEntity         Entity = "WorkItemType"
	WorkItemEntity             Entity = "WorkItem"
	UserEntity                 Entity = "User"
	WorkItemWorkItemTagEntity  Entity = "WorkItemWorkItemTag"
	ActivityEntity             Entity = "Activity"
	KanbanStepEntity           Entity = "KanbanStep"
	NotificationEntity         Entity = "Notification"
	ProjectEntity              Entity = "Project"
	SchemaMigrationEntity      Entity = "SchemaMigration"
	UserAPIKeyEntity           Entity = "UserAPIKey"
	DemoTwoWorkItemEntity      Entity = "DemoTwoWorkItem"
	EntityNotificationEntity   Entity = "EntityNotification"
	TimeEntryEntity            Entity = "TimeEntry"
	WorkItemCommentEntity      Entity = "WorkItemComment"
)
