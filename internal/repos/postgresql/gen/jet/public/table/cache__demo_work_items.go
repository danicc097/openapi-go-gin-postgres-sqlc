//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var CacheDemoWorkItems = newCacheDemoWorkItemsTable("public", "cache__demo_work_items", "")

type cacheDemoWorkItemsTable struct {
	postgres.Table

	// Columns
	Ref            postgres.ColumnString
	Line           postgres.ColumnString
	LastMessageAt  postgres.ColumnTimestampz
	Reopened       postgres.ColumnBool
	WorkItemID     postgres.ColumnInteger
	Title          postgres.ColumnString
	Description    postgres.ColumnString
	WorkItemTypeID postgres.ColumnInteger
	Metadata       postgres.ColumnString
	TeamID         postgres.ColumnInteger
	KanbanStepID   postgres.ColumnInteger
	ClosedAt       postgres.ColumnTimestampz
	TargetDate     postgres.ColumnTimestampz
	CreatedAt      postgres.ColumnTimestampz
	UpdatedAt      postgres.ColumnTimestampz
	DeletedAt      postgres.ColumnTimestampz

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type CacheDemoWorkItemsTable struct {
	cacheDemoWorkItemsTable

	EXCLUDED cacheDemoWorkItemsTable
}

// AS creates new CacheDemoWorkItemsTable with assigned alias
func (a CacheDemoWorkItemsTable) AS(alias string) *CacheDemoWorkItemsTable {
	return newCacheDemoWorkItemsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new CacheDemoWorkItemsTable with assigned schema name
func (a CacheDemoWorkItemsTable) FromSchema(schemaName string) *CacheDemoWorkItemsTable {
	return newCacheDemoWorkItemsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new CacheDemoWorkItemsTable with assigned table prefix
func (a CacheDemoWorkItemsTable) WithPrefix(prefix string) *CacheDemoWorkItemsTable {
	return newCacheDemoWorkItemsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new CacheDemoWorkItemsTable with assigned table suffix
func (a CacheDemoWorkItemsTable) WithSuffix(suffix string) *CacheDemoWorkItemsTable {
	return newCacheDemoWorkItemsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newCacheDemoWorkItemsTable(schemaName, tableName, alias string) *CacheDemoWorkItemsTable {
	return &CacheDemoWorkItemsTable{
		cacheDemoWorkItemsTable: newCacheDemoWorkItemsTableImpl(schemaName, tableName, alias),
		EXCLUDED:                newCacheDemoWorkItemsTableImpl("", "excluded", ""),
	}
}

func newCacheDemoWorkItemsTableImpl(schemaName, tableName, alias string) cacheDemoWorkItemsTable {
	var (
		RefColumn            = postgres.StringColumn("ref")
		LineColumn           = postgres.StringColumn("line")
		LastMessageAtColumn  = postgres.TimestampzColumn("last_message_at")
		ReopenedColumn       = postgres.BoolColumn("reopened")
		WorkItemIDColumn     = postgres.IntegerColumn("work_item_id")
		TitleColumn          = postgres.StringColumn("title")
		DescriptionColumn    = postgres.StringColumn("description")
		WorkItemTypeIDColumn = postgres.IntegerColumn("work_item_type_id")
		MetadataColumn       = postgres.StringColumn("metadata")
		TeamIDColumn         = postgres.IntegerColumn("team_id")
		KanbanStepIDColumn   = postgres.IntegerColumn("kanban_step_id")
		ClosedAtColumn       = postgres.TimestampzColumn("closed_at")
		TargetDateColumn     = postgres.TimestampzColumn("target_date")
		CreatedAtColumn      = postgres.TimestampzColumn("created_at")
		UpdatedAtColumn      = postgres.TimestampzColumn("updated_at")
		DeletedAtColumn      = postgres.TimestampzColumn("deleted_at")
		allColumns           = postgres.ColumnList{RefColumn, LineColumn, LastMessageAtColumn, ReopenedColumn, WorkItemIDColumn, TitleColumn, DescriptionColumn, WorkItemTypeIDColumn, MetadataColumn, TeamIDColumn, KanbanStepIDColumn, ClosedAtColumn, TargetDateColumn, CreatedAtColumn, UpdatedAtColumn, DeletedAtColumn}
		mutableColumns       = postgres.ColumnList{RefColumn, LineColumn, LastMessageAtColumn, ReopenedColumn, TitleColumn, DescriptionColumn, WorkItemTypeIDColumn, MetadataColumn, TeamIDColumn, KanbanStepIDColumn, ClosedAtColumn, TargetDateColumn, CreatedAtColumn, UpdatedAtColumn, DeletedAtColumn}
	)

	return cacheDemoWorkItemsTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		Ref:            RefColumn,
		Line:           LineColumn,
		LastMessageAt:  LastMessageAtColumn,
		Reopened:       ReopenedColumn,
		WorkItemID:     WorkItemIDColumn,
		Title:          TitleColumn,
		Description:    DescriptionColumn,
		WorkItemTypeID: WorkItemTypeIDColumn,
		Metadata:       MetadataColumn,
		TeamID:         TeamIDColumn,
		KanbanStepID:   KanbanStepIDColumn,
		ClosedAt:       ClosedAtColumn,
		TargetDate:     TargetDateColumn,
		CreatedAt:      CreatedAtColumn,
		UpdatedAt:      UpdatedAtColumn,
		DeletedAt:      DeletedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
