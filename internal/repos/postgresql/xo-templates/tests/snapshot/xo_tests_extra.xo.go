package got

// Code generated by xo. DO NOT EDIT.

type XoTestsTableEntity string

const (
	XoTestsTableEntityXoTestsBook                    XoTestsTableEntity = "xo_tests.books"
	XoTestsTableEntityXoTestsBookAuthor              XoTestsTableEntity = "xo_tests.book_authors"
	XoTestsTableEntityXoTestsBookAuthorsSurrogateKey XoTestsTableEntity = "xo_tests.book_authors_surrogate_key"
	XoTestsTableEntityXoTestsBookReview              XoTestsTableEntity = "xo_tests.book_reviews"
	XoTestsTableEntityXoTestsBookSeller              XoTestsTableEntity = "xo_tests.book_sellers"
	XoTestsTableEntityXoTestsCacheDemoWorkItem       XoTestsTableEntity = "xo_tests.cache__demo_work_items"
	XoTestsTableEntityXoTestsDemoWorkItem            XoTestsTableEntity = "xo_tests.demo_work_items"
	XoTestsTableEntityXoTestsDummyJoin               XoTestsTableEntity = "xo_tests.dummy_join"
	XoTestsTableEntityXoTestsNotification            XoTestsTableEntity = "xo_tests.notifications"
	XoTestsTableEntityXoTestsPagElement              XoTestsTableEntity = "xo_tests.pag_element"
	XoTestsTableEntityXoTestsTeam                    XoTestsTableEntity = "xo_tests.teams"
	XoTestsTableEntityXoTestsTimeEntry               XoTestsTableEntity = "xo_tests.time_entries"
	XoTestsTableEntityXoTestsUser                    XoTestsTableEntity = "xo_tests.users"
	XoTestsTableEntityXoTestsUserAPIKey              XoTestsTableEntity = "xo_tests.user_api_keys"
	XoTestsTableEntityXoTestsWorkItem                XoTestsTableEntity = "xo_tests.work_items"
	XoTestsTableEntityXoTestsWorkItemAssignee        XoTestsTableEntity = "xo_tests.work_item_assignee"
	XoTestsTableEntityXoTestsWorkItemComment         XoTestsTableEntity = "xo_tests.work_item_comments"
)

var XoTestsEntityFilters = map[XoTestsTableEntity]map[string]Filter{
	XoTestsTableEntityXoTestsBook: {
		"bookID": Filter{Type: ColumnSimpleTypeInteger, Db: "book_id", Nullable: false},
		"name":   Filter{Type: ColumnSimpleTypeString, Db: "name", Nullable: false},
	},
	XoTestsTableEntityXoTestsBookAuthor: {
		"authorID":  Filter{Type: ColumnSimpleTypeString, Db: "author_id", Nullable: false},
		"bookID":    Filter{Type: ColumnSimpleTypeInteger, Db: "book_id", Nullable: false},
		"pseudonym": Filter{Type: ColumnSimpleTypeString, Db: "pseudonym", Nullable: true},
	},
	XoTestsTableEntityXoTestsBookAuthorsSurrogateKey: {
		"authorID":                  Filter{Type: ColumnSimpleTypeString, Db: "author_id", Nullable: false},
		"bookAuthorsSurrogateKeyID": Filter{Type: ColumnSimpleTypeInteger, Db: "book_authors_surrogate_key_id", Nullable: false},
		"bookID":                    Filter{Type: ColumnSimpleTypeInteger, Db: "book_id", Nullable: false},
		"pseudonym":                 Filter{Type: ColumnSimpleTypeString, Db: "pseudonym", Nullable: true},
	},
	XoTestsTableEntityXoTestsBookReview: {
		"bookID":       Filter{Type: ColumnSimpleTypeInteger, Db: "book_id", Nullable: false},
		"bookReviewID": Filter{Type: ColumnSimpleTypeInteger, Db: "book_review_id", Nullable: false},
		"reviewer":     Filter{Type: ColumnSimpleTypeString, Db: "reviewer", Nullable: false},
	},
	XoTestsTableEntityXoTestsBookSeller: {
		"bookID": Filter{Type: ColumnSimpleTypeInteger, Db: "book_id", Nullable: false},
		"seller": Filter{Type: ColumnSimpleTypeString, Db: "seller", Nullable: false},
	},
	XoTestsTableEntityXoTestsCacheDemoWorkItem: {
		"teamID":     Filter{Type: ColumnSimpleTypeInteger, Db: "team_id", Nullable: false},
		"title":      Filter{Type: ColumnSimpleTypeString, Db: "title", Nullable: true},
		"workItemID": Filter{Type: ColumnSimpleTypeInteger, Db: "work_item_id", Nullable: false},
	},
	XoTestsTableEntityXoTestsDemoWorkItem: {
		"checked":    Filter{Type: ColumnSimpleTypeBoolean, Db: "checked", Nullable: false},
		"workItemID": Filter{Type: ColumnSimpleTypeInteger, Db: "work_item_id", Nullable: false},
	},
	XoTestsTableEntityXoTestsDummyJoin: {
		"dummyJoinID": Filter{Type: ColumnSimpleTypeInteger, Db: "dummy_join_id", Nullable: false},
		"name":        Filter{Type: ColumnSimpleTypeString, Db: "name", Nullable: true},
	},
	XoTestsTableEntityXoTestsNotification: {
		"notificationID": Filter{Type: ColumnSimpleTypeInteger, Db: "notification_id", Nullable: false},
		"receiver":       Filter{Type: ColumnSimpleTypeString, Db: "receiver", Nullable: true},
		"sender":         Filter{Type: ColumnSimpleTypeString, Db: "sender", Nullable: false},
	},
	XoTestsTableEntityXoTestsPagElement: {
		"createdAt":          Filter{Type: ColumnSimpleTypeDateTime, Db: "created_at", Nullable: false},
		"dummy":              Filter{Type: ColumnSimpleTypeInteger, Db: "dummy", Nullable: true},
		"name":               Filter{Type: ColumnSimpleTypeString, Db: "name", Nullable: false},
		"paginatedElementID": Filter{Type: ColumnSimpleTypeString, Db: "paginated_element_id", Nullable: false},
	},
	XoTestsTableEntityXoTestsTeam: {
		"name":   Filter{Type: ColumnSimpleTypeString, Db: "name", Nullable: false},
		"teamID": Filter{Type: ColumnSimpleTypeInteger, Db: "team_id", Nullable: false},
	},
	XoTestsTableEntityXoTestsTimeEntry: {
		"start":       Filter{Type: ColumnSimpleTypeDateTime, Db: "start", Nullable: false},
		"timeEntryID": Filter{Type: ColumnSimpleTypeInteger, Db: "time_entry_id", Nullable: false},
		"workItemID":  Filter{Type: ColumnSimpleTypeInteger, Db: "work_item_id", Nullable: true},
	},
	XoTestsTableEntityXoTestsUser: {
		"apiKeyID":  Filter{Type: ColumnSimpleTypeInteger, Db: "api_key_id", Nullable: true},
		"createdAt": Filter{Type: ColumnSimpleTypeDateTime, Db: "created_at", Nullable: false},
		"deletedAt": Filter{Type: ColumnSimpleTypeDateTime, Db: "deleted_at", Nullable: true},
		"name":      Filter{Type: ColumnSimpleTypeString, Db: "name", Nullable: false},
		"userID":    Filter{Type: ColumnSimpleTypeString, Db: "user_id", Nullable: false},
	},
	XoTestsTableEntityXoTestsUserAPIKey: {
		"apiKey":    Filter{Type: ColumnSimpleTypeString, Db: "api_key", Nullable: false},
		"expiresOn": Filter{Type: ColumnSimpleTypeDateTime, Db: "expires_on", Nullable: false},
		"userID":    Filter{Type: ColumnSimpleTypeString, Db: "user_id", Nullable: false},
	},
	XoTestsTableEntityXoTestsWorkItem: {
		"description": Filter{Type: ColumnSimpleTypeString, Db: "description", Nullable: true},
		"teamID":      Filter{Type: ColumnSimpleTypeInteger, Db: "team_id", Nullable: false},
		"title":       Filter{Type: ColumnSimpleTypeString, Db: "title", Nullable: true},
		"workItemID":  Filter{Type: ColumnSimpleTypeInteger, Db: "work_item_id", Nullable: false},
	},
	XoTestsTableEntityXoTestsWorkItemAssignee: {
		"assignee":   Filter{Type: ColumnSimpleTypeString, Db: "assignee", Nullable: false},
		"workItemID": Filter{Type: ColumnSimpleTypeInteger, Db: "work_item_id", Nullable: false},
	},
	XoTestsTableEntityXoTestsWorkItemComment: {
		"createdAt":         Filter{Type: ColumnSimpleTypeDateTime, Db: "created_at", Nullable: false},
		"message":           Filter{Type: ColumnSimpleTypeString, Db: "message", Nullable: false},
		"updatedAt":         Filter{Type: ColumnSimpleTypeDateTime, Db: "updated_at", Nullable: false},
		"userID":            Filter{Type: ColumnSimpleTypeString, Db: "user_id", Nullable: false},
		"workItemCommentID": Filter{Type: ColumnSimpleTypeInteger, Db: "work_item_comment_id", Nullable: false},
		"workItemID":        Filter{Type: ColumnSimpleTypeInteger, Db: "work_item_id", Nullable: false},
	},
}

var XoTestsEntityFields = map[XoTestsTableEntity]map[string]DbField{
	XoTestsTableEntityXoTestsBook: {
		"bookID": DbField{Type: ColumnSimpleTypeInteger, Db: "book_id"},
		"name":   DbField{Type: ColumnSimpleTypeString, Db: "name"},
	},
	XoTestsTableEntityXoTestsBookAuthor: {
		"authorID":  DbField{Type: ColumnSimpleTypeString, Db: "author_id"},
		"bookID":    DbField{Type: ColumnSimpleTypeInteger, Db: "book_id"},
		"pseudonym": DbField{Type: ColumnSimpleTypeString, Db: "pseudonym"},
	},
	XoTestsTableEntityXoTestsBookAuthorsSurrogateKey: {
		"authorID":                  DbField{Type: ColumnSimpleTypeString, Db: "author_id"},
		"bookAuthorsSurrogateKeyID": DbField{Type: ColumnSimpleTypeInteger, Db: "book_authors_surrogate_key_id"},
		"bookID":                    DbField{Type: ColumnSimpleTypeInteger, Db: "book_id"},
		"pseudonym":                 DbField{Type: ColumnSimpleTypeString, Db: "pseudonym"},
	},
	XoTestsTableEntityXoTestsBookReview: {
		"bookID":       DbField{Type: ColumnSimpleTypeInteger, Db: "book_id"},
		"bookReviewID": DbField{Type: ColumnSimpleTypeInteger, Db: "book_review_id"},
		"reviewer":     DbField{Type: ColumnSimpleTypeString, Db: "reviewer"},
	},
	XoTestsTableEntityXoTestsBookSeller: {
		"bookID": DbField{Type: ColumnSimpleTypeInteger, Db: "book_id"},
		"seller": DbField{Type: ColumnSimpleTypeString, Db: "seller"},
	},
	XoTestsTableEntityXoTestsCacheDemoWorkItem: {
		"teamID":     DbField{Type: ColumnSimpleTypeInteger, Db: "team_id"},
		"title":      DbField{Type: ColumnSimpleTypeString, Db: "title"},
		"workItemID": DbField{Type: ColumnSimpleTypeInteger, Db: "work_item_id"},
	},
	XoTestsTableEntityXoTestsDemoWorkItem: {
		"checked":    DbField{Type: ColumnSimpleTypeBoolean, Db: "checked"},
		"workItemID": DbField{Type: ColumnSimpleTypeInteger, Db: "work_item_id"},
	},
	XoTestsTableEntityXoTestsDummyJoin: {
		"dummyJoinID": DbField{Type: ColumnSimpleTypeInteger, Db: "dummy_join_id"},
		"name":        DbField{Type: ColumnSimpleTypeString, Db: "name"},
	},
	XoTestsTableEntityXoTestsNotification: {
		"body":           DbField{Type: ColumnSimpleTypeString, Db: "body"},
		"notificationID": DbField{Type: ColumnSimpleTypeInteger, Db: "notification_id"},
		"receiver":       DbField{Type: ColumnSimpleTypeString, Db: "receiver"},
		"sender":         DbField{Type: ColumnSimpleTypeString, Db: "sender"},
	},
	XoTestsTableEntityXoTestsPagElement: {
		"createdAt":          DbField{Type: ColumnSimpleTypeDateTime, Db: "created_at"},
		"dummy":              DbField{Type: ColumnSimpleTypeInteger, Db: "dummy"},
		"name":               DbField{Type: ColumnSimpleTypeString, Db: "name"},
		"paginatedElementID": DbField{Type: ColumnSimpleTypeString, Db: "paginated_element_id"},
	},
	XoTestsTableEntityXoTestsTeam: {
		"name":   DbField{Type: ColumnSimpleTypeString, Db: "name"},
		"teamID": DbField{Type: ColumnSimpleTypeInteger, Db: "team_id"},
	},
	XoTestsTableEntityXoTestsTimeEntry: {
		"start":       DbField{Type: ColumnSimpleTypeDateTime, Db: "start"},
		"timeEntryID": DbField{Type: ColumnSimpleTypeInteger, Db: "time_entry_id"},
		"workItemID":  DbField{Type: ColumnSimpleTypeInteger, Db: "work_item_id"},
	},
	XoTestsTableEntityXoTestsUser: {
		"apiKeyID":  DbField{Type: ColumnSimpleTypeInteger, Db: "api_key_id"},
		"createdAt": DbField{Type: ColumnSimpleTypeDateTime, Db: "created_at"},
		"deletedAt": DbField{Type: ColumnSimpleTypeDateTime, Db: "deleted_at"},
		"name":      DbField{Type: ColumnSimpleTypeString, Db: "name"},
		"userID":    DbField{Type: ColumnSimpleTypeString, Db: "user_id"},
	},
	XoTestsTableEntityXoTestsUserAPIKey: {
		"apiKey":       DbField{Type: ColumnSimpleTypeString, Db: "api_key"},
		"expiresOn":    DbField{Type: ColumnSimpleTypeDateTime, Db: "expires_on"},
		"userAPIKeyID": DbField{Type: ColumnSimpleTypeInteger, Db: "user_api_key_id"},
		"userID":       DbField{Type: ColumnSimpleTypeString, Db: "user_id"},
	},
	XoTestsTableEntityXoTestsWorkItem: {
		"description": DbField{Type: ColumnSimpleTypeString, Db: "description"},
		"teamID":      DbField{Type: ColumnSimpleTypeInteger, Db: "team_id"},
		"title":       DbField{Type: ColumnSimpleTypeString, Db: "title"},
		"workItemID":  DbField{Type: ColumnSimpleTypeInteger, Db: "work_item_id"},
	},
	XoTestsTableEntityXoTestsWorkItemAssignee: {
		"assignee":   DbField{Type: ColumnSimpleTypeString, Db: "assignee"},
		"workItemID": DbField{Type: ColumnSimpleTypeInteger, Db: "work_item_id"},
	},
	XoTestsTableEntityXoTestsWorkItemComment: {
		"createdAt":         DbField{Type: ColumnSimpleTypeDateTime, Db: "created_at"},
		"message":           DbField{Type: ColumnSimpleTypeString, Db: "message"},
		"updatedAt":         DbField{Type: ColumnSimpleTypeDateTime, Db: "updated_at"},
		"userID":            DbField{Type: ColumnSimpleTypeString, Db: "user_id"},
		"workItemCommentID": DbField{Type: ColumnSimpleTypeInteger, Db: "work_item_comment_id"},
		"workItemID":        DbField{Type: ColumnSimpleTypeInteger, Db: "work_item_id"},
	},
}
