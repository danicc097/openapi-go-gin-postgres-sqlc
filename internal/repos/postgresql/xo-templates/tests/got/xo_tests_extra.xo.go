package got

// Code generated by xo. DO NOT EDIT.

type XoTestsTableEntity string

const (
	XoTestsTableEntityXoTestsBook                    XoTestsTableEntity = "xoTestsBook"
	XoTestsTableEntityXoTestsBookAuthor              XoTestsTableEntity = "xoTestsBookAuthor"
	XoTestsTableEntityXoTestsBookAuthorsSurrogateKey XoTestsTableEntity = "xoTestsBookAuthorsSurrogateKey"
	XoTestsTableEntityXoTestsBookReview              XoTestsTableEntity = "xoTestsBookReview"
	XoTestsTableEntityXoTestsBookSeller              XoTestsTableEntity = "xoTestsBookSeller"
	XoTestsTableEntityXoTestsCacheDemoWorkItem       XoTestsTableEntity = "xoTestsCacheDemoWorkItem"
	XoTestsTableEntityXoTestsDemoWorkItem            XoTestsTableEntity = "xoTestsDemoWorkItem"
	XoTestsTableEntityXoTestsDummyJoin               XoTestsTableEntity = "xoTestsDummyJoin"
	XoTestsTableEntityXoTestsNotification            XoTestsTableEntity = "xoTestsNotification"
	XoTestsTableEntityXoTestsPagElement              XoTestsTableEntity = "xoTestsPagElement"
	XoTestsTableEntityXoTestsTeam                    XoTestsTableEntity = "xoTestsTeam"
	XoTestsTableEntityXoTestsTimeEntry               XoTestsTableEntity = "xoTestsTimeEntry"
	XoTestsTableEntityXoTestsUser                    XoTestsTableEntity = "xoTestsUser"
	XoTestsTableEntityXoTestsUserAPIKey              XoTestsTableEntity = "xoTestsUserAPIKey"
	XoTestsTableEntityXoTestsWorkItem                XoTestsTableEntity = "xoTestsWorkItem"
	XoTestsTableEntityXoTestsWorkItemAssignee        XoTestsTableEntity = "xoTestsWorkItemAssignee"
	XoTestsTableEntityXoTestsWorkItemComment         XoTestsTableEntity = "xoTestsWorkItemComment"
)

var XoTestsEntityFilters = map[XoTestsTableEntity]map[string]Filter{
	XoTestsTableEntityXoTestsBook: {
		"bookID": Filter{Type: "integer", Db: "book_id", Nullable: false},
		"name":   Filter{Type: "string", Db: "name", Nullable: false},
	},
	XoTestsTableEntityXoTestsBookAuthor: {
		"bookID":    Filter{Type: "integer", Db: "book_id", Nullable: false},
		"pseudonym": Filter{Type: "string", Db: "pseudonym", Nullable: true},
	},
	XoTestsTableEntityXoTestsBookAuthorsSurrogateKey: {
		"bookAuthorsSurrogateKeyID": Filter{Type: "integer", Db: "book_authors_surrogate_key_id", Nullable: false},
		"bookID":                    Filter{Type: "integer", Db: "book_id", Nullable: false},
		"pseudonym":                 Filter{Type: "string", Db: "pseudonym", Nullable: true},
	},
	XoTestsTableEntityXoTestsBookReview: {
		"bookID":       Filter{Type: "integer", Db: "book_id", Nullable: false},
		"bookReviewID": Filter{Type: "integer", Db: "book_review_id", Nullable: false},
	},
	XoTestsTableEntityXoTestsBookSeller: {
		"bookID": Filter{Type: "integer", Db: "book_id", Nullable: false},
	},
	XoTestsTableEntityXoTestsCacheDemoWorkItem: {
		"teamID":     Filter{Type: "integer", Db: "team_id", Nullable: false},
		"title":      Filter{Type: "string", Db: "title", Nullable: true},
		"workItemID": Filter{Type: "integer", Db: "work_item_id", Nullable: false},
	},
	XoTestsTableEntityXoTestsDemoWorkItem: {
		"checked":    Filter{Type: "boolean", Db: "checked", Nullable: false},
		"workItemID": Filter{Type: "integer", Db: "work_item_id", Nullable: false},
	},
	XoTestsTableEntityXoTestsDummyJoin: {
		"dummyJoinID": Filter{Type: "integer", Db: "dummy_join_id", Nullable: false},
		"name":        Filter{Type: "string", Db: "name", Nullable: true},
	},
	XoTestsTableEntityXoTestsNotification: {
		"notificationID": Filter{Type: "integer", Db: "notification_id", Nullable: false},
	},
	XoTestsTableEntityXoTestsPagElement: {
		"createdAt": Filter{Type: "date-time", Db: "created_at", Nullable: false},
		"dummy":     Filter{Type: "integer", Db: "dummy", Nullable: true},
		"name":      Filter{Type: "string", Db: "name", Nullable: false},
	},
	XoTestsTableEntityXoTestsTeam: {
		"name":   Filter{Type: "string", Db: "name", Nullable: false},
		"teamID": Filter{Type: "integer", Db: "team_id", Nullable: false},
	},
	XoTestsTableEntityXoTestsTimeEntry: {
		"start":       Filter{Type: "date-time", Db: "start", Nullable: false},
		"timeEntryID": Filter{Type: "integer", Db: "time_entry_id", Nullable: false},
		"workItemID":  Filter{Type: "integer", Db: "work_item_id", Nullable: true},
	},
	XoTestsTableEntityXoTestsUser: {
		"apiKeyID":  Filter{Type: "integer", Db: "api_key_id", Nullable: true},
		"createdAt": Filter{Type: "date-time", Db: "created_at", Nullable: false},
		"deletedAt": Filter{Type: "date-time", Db: "deleted_at", Nullable: true},
		"name":      Filter{Type: "string", Db: "name", Nullable: false},
	},
	XoTestsTableEntityXoTestsUserAPIKey: {
		"apiKey":    Filter{Type: "string", Db: "api_key", Nullable: false},
		"expiresOn": Filter{Type: "date-time", Db: "expires_on", Nullable: false},
	},
	XoTestsTableEntityXoTestsWorkItem: {
		"description": Filter{Type: "string", Db: "description", Nullable: true},
		"teamID":      Filter{Type: "integer", Db: "team_id", Nullable: false},
		"title":       Filter{Type: "string", Db: "title", Nullable: true},
		"workItemID":  Filter{Type: "integer", Db: "work_item_id", Nullable: false},
	},
	XoTestsTableEntityXoTestsWorkItemAssignee: {
		"workItemID": Filter{Type: "integer", Db: "work_item_id", Nullable: false},
	},
	XoTestsTableEntityXoTestsWorkItemComment: {
		"createdAt":         Filter{Type: "date-time", Db: "created_at", Nullable: false},
		"message":           Filter{Type: "string", Db: "message", Nullable: false},
		"updatedAt":         Filter{Type: "date-time", Db: "updated_at", Nullable: false},
		"workItemCommentID": Filter{Type: "integer", Db: "work_item_comment_id", Nullable: false},
		"workItemID":        Filter{Type: "integer", Db: "work_item_id", Nullable: false},
	},
}

var XoTestsEntityFields = map[XoTestsTableEntity]map[string]DbField{
	XoTestsTableEntityXoTestsBook: {
		"bookID": DbField{},
		"name":   DbField{},
	},
	XoTestsTableEntityXoTestsBookAuthor: {
		"bookID":    DbField{},
		"pseudonym": DbField{},
	},
	XoTestsTableEntityXoTestsBookAuthorsSurrogateKey: {
		"bookAuthorsSurrogateKeyID": DbField{},
		"bookID":                    DbField{},
		"pseudonym":                 DbField{},
	},
	XoTestsTableEntityXoTestsBookReview: {
		"bookID":       DbField{},
		"bookReviewID": DbField{},
	},
	XoTestsTableEntityXoTestsBookSeller: {
		"bookID": DbField{},
	},
	XoTestsTableEntityXoTestsCacheDemoWorkItem: {
		"teamID":     DbField{},
		"title":      DbField{},
		"workItemID": DbField{},
	},
	XoTestsTableEntityXoTestsDemoWorkItem: {
		"checked":    DbField{},
		"workItemID": DbField{},
	},
	XoTestsTableEntityXoTestsDummyJoin: {
		"dummyJoinID": DbField{},
		"name":        DbField{},
	},
	XoTestsTableEntityXoTestsNotification: {
		"body":           DbField{},
		"notificationID": DbField{},
	},
	XoTestsTableEntityXoTestsPagElement: {
		"createdAt": DbField{},
		"dummy":     DbField{},
		"name":      DbField{},
	},
	XoTestsTableEntityXoTestsTeam: {
		"name":   DbField{},
		"teamID": DbField{},
	},
	XoTestsTableEntityXoTestsTimeEntry: {
		"start":       DbField{},
		"timeEntryID": DbField{},
		"workItemID":  DbField{},
	},
	XoTestsTableEntityXoTestsUser: {
		"apiKeyID":  DbField{},
		"createdAt": DbField{},
		"deletedAt": DbField{},
		"name":      DbField{},
	},
	XoTestsTableEntityXoTestsUserAPIKey: {
		"apiKey":       DbField{},
		"expiresOn":    DbField{},
		"userAPIKeyID": DbField{},
	},
	XoTestsTableEntityXoTestsWorkItem: {
		"description": DbField{},
		"teamID":      DbField{},
		"title":       DbField{},
		"workItemID":  DbField{},
	},
	XoTestsTableEntityXoTestsWorkItemAssignee: {
		"workItemID": DbField{},
	},
	XoTestsTableEntityXoTestsWorkItemComment: {
		"createdAt":         DbField{},
		"message":           DbField{},
		"updatedAt":         DbField{},
		"workItemCommentID": DbField{},
		"workItemID":        DbField{},
	},
}
