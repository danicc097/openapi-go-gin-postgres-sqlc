# https://docs.sqlc.dev/en/stable/reference/config.html
version: "2"
sql:
  - schema: "../../../db/migrations/"
    queries: "./queries/"
    engine: "postgresql"
    gen:
      go:
        sql_package: "pgx/v5"
        package: "db"
        out: "gen/db"
        emit_json_tags: true
        emit_db_tags: true
        emit_interface: true # Querier
        emit_exact_table_names: true
        emit_empty_slices: true
        emit_exported_queries: true
        emit_enum_valid_method: true
        emit_all_enum_values: true
        emit_methods_with_db_argument: true
        output_files_suffix: .sqlc
        # only necessary for stdlib, pgx automatically prepares and caches statements by default
        # emit_prepared_queries: true # mutually exclusive with emit_methods_with_db_argument
        # TODO camel when xo and sqlc using pgx v5 -> db tag to unmarshal and json tag camel
        json_tags_case_style: snake
        # TODO new flag on main branch to not use sql.Null when using pgx
        emit_pointers_for_null_types: true
        # rename:
        # Customize the name of generated struct fields.
        # https://docs.sqlc.dev/en/stable/reference/config.html?highlight=Renaming%20fields#renaming-fields
        overrides:
          - db_type: "uuid"
            go_type:
              import: "github.com/google/uuid"
              type: UUID
          - db_type: "uuid"
            go_type:
              import: "github.com/google/uuid"
              type: UUID
              pointer: true
            nullable: true
          - db_type: pg_catalog.timestamptz
            go_type:
              import: time
              type: Time
              pointer: true
            nullable: true
          - db_type: pg_catalog.timestamptz
            go_type:
              import: time
              type: Time
          # we can override enums and columns in sqlc queries that include other schemas.
          # NOTE: cannot override table types.
          # also accepts patterns, see internal/endtoend/testdata/overrides_go_types/postgresql/pgx/v5/sqlc.json
          # by default sqlc prepends the schema name to enums but in case of clash use this:
          # TODO: just have xo gen mimic sqlc output (prefixes enums and tables with camel schema)
          # - db_type: "extra_schema.notification_type" # | "schema.table.column"
          #   go_type:
          #     import: "github.com/danicc097/openapi-go-gin-postgres-sqlc/internal/repos/postgresql/gen/db/extra_schema"
          #     type: "NotificationType"
        # It is a collection of definitions that dictates which types are used to map a database types.
        # https://docs.sqlc.dev/en/stable/reference/config.html?highlight=Renaming%20fields#renaming-fields
