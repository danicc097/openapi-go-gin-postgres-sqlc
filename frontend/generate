#!/bin/bash

SCHEMA_OUT="src/types/schema.d.ts"
export ENV_REPLACE_GLOB=config.json

# ensure config has all k-v as "<KEY>": "$<KEY>"
jq \
  'to_entries | map_values({ (.key) : ("$" + .key) }) | reduce .[] as $item ({}; . + $item)' \
  ./config.template.json >./config.tmp.json && mv ./config.tmp.json ./config.json
envvars=$(printenv | awk -F= '{print $1}' | sed 's/^/\$/g' | paste -sd,)
./nginx/replace-envvars.sh "$envvars"

mkdir -p src/redux/slices/gen
mkdir -p src/types

rtk-query-codegen-openapi openapi-config.json &
node generate-client-validator.js &
openapi-typescript ../openapi.yaml --output "$SCHEMA_OUT" --path-params-as-types --prettier-config .prettierrc &
wait

echo "/* eslint-disable @typescript-eslint/ban-ts-comment */
/* eslint-disable */
// @ts-nocheck
export type schemas = components['schemas']
" | cat - "$SCHEMA_OUT" >/tmp/out && mv /tmp/out "$SCHEMA_OUT"
# TODO allow custom validate.ts baked into fork
rm src/client-validator/gen/validate.ts
find src/client-validator/gen/ -type f -exec \
  sed -i "s/from '.\/validate'/from '..\/validate'/g" {} \;
