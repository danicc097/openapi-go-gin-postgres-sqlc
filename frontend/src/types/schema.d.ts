/* eslint-disable @typescript-eslint/ban-ts-comment */
/* eslint-disable */
// @ts-nocheck
export type schemas = components['schemas']
/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/ping': {
    get: operations['ping']
  }
  '/openapi.yaml': {
    get: operations['OpenapiYamlGet']
  }
  '/admin/ping': {
    get: operations['adminPing']
  }
  '/user/me': {
    get: operations['getCurrentUser']
  }
  [key: `/user/${string}`]: {
    delete: operations['deleteUser']
  }
}

export interface components {
  schemas: {
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: components['schemas']['ValidationError'][]
    }
    /**
     * a User
     * @description represents a user.
     */
    User: {
      /** Format: int64 */
      userID?: number
      username?: string
      firstName?: string
      lastName?: string
      email?: string
      password?: string
      phone?: string
      /**
       * @description User role
       * @enum {string}
       */
      role?: 'user' | 'manager' | 'admin'
    }
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: string[]
      /** Message */
      msg: string
      /** Error Type */
      type: string
    }
  }
}

export interface operations {
  ping: {
    responses: {
      /** OK */
      200: {
        content: {
          'text/plain': string
        }
      }
      /** Validation Error */
      422: {
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  OpenapiYamlGet: {
    responses: {
      /** OpenAPI YAML file. */
      200: {
        content: {
          'text/yaml': string
        }
      }
    }
  }
  adminPing: {
    responses: {
      /** OK */
      200: {
        content: {
          'text/plain': string
        }
      }
      /** Validation Error */
      422: {
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  getCurrentUser: {
    responses: {
      /** successful operation */
      200: {
        content: {
          'application/json': components['schemas']['User']
        }
      }
    }
  }
  deleteUser: {
    parameters: {
      path: {
        /** userID that needs to be deleted */
        id: string
      }
    }
    responses: {
      /** User not found */
      404: unknown
    }
  }
}

export interface external {}
