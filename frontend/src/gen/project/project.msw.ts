/**
 * Generated by orval v6.10.3 🍺
 * Do not edit manually.
 * OpenAPI openapi-go-gin-postgres-sqlc
 * openapi-go-gin-postgres-sqlc
 * OpenAPI spec version: 2.0.0
 */
import {
  rest
} from 'msw'
import {
  faker
} from '@faker-js/faker'

export const getGetProjectMock = () => ({activities: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), isProductive: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined])})), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), initialized: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), kanbanSteps: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), stepOrder: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeTrackable: faker.helpers.arrayElement([faker.datatype.boolean(), undefined])})), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), teams: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), users: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined]), workItems: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItem: faker.helpers.arrayElement([{closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), members: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), members: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItem: faker.helpers.arrayElement([{closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), members: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItem: faker.helpers.arrayElement([{closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), members: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined]), workItems: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItem: faker.helpers.arrayElement([{closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), members: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), members: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItem: faker.helpers.arrayElement([{closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), members: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItem: faker.helpers.arrayElement([{closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), members: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined])})), undefined])})), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItems: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItem: faker.helpers.arrayElement([{closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), members: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), teams: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), users: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined])})), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), teams: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), users: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined])})), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), members: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), teams: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), users: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined])})), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), teams: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), users: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined])})), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItem: faker.helpers.arrayElement([{closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), members: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), teams: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), users: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined])})), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), teams: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), users: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined])})), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItem: faker.helpers.arrayElement([{closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), members: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), teams: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), users: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined])})), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), teams: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), users: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined])})), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined])})), undefined]), workItemTypes: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItem: faker.helpers.arrayElement([{closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), members: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), teams: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), users: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined]), workItems: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined]), workItems: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined])})), undefined])})), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), teams: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), users: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined]), workItems: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined])})), undefined])})), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined]), workItems: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined]), workItems: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined])})), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItems: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), members: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), teams: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), users: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined])})), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), teams: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), users: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined])})), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined])})

export const getGetProjectConfigMock = () => ({fields: Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({isEditable: faker.datatype.boolean(), isVisible: faker.datatype.boolean(), name: faker.random.word(), path: faker.random.word(), showCollapsed: faker.datatype.boolean()})), header: Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => (faker.random.word()))})

export const getGetProjectBoardMock = () => ({project: faker.helpers.arrayElement([{activities: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), isProductive: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined])})), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), initialized: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), kanbanSteps: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), stepOrder: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeTrackable: faker.helpers.arrayElement([faker.datatype.boolean(), undefined])})), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), teams: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), users: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined]), workItems: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItem: faker.helpers.arrayElement([{closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), members: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), members: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItem: faker.helpers.arrayElement([{closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), members: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItem: faker.helpers.arrayElement([{closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), members: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined]), workItems: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItem: faker.helpers.arrayElement([{closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), members: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), members: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItem: faker.helpers.arrayElement([{closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), members: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItem: faker.helpers.arrayElement([{closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), members: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined])})), undefined])})), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItems: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItem: faker.helpers.arrayElement([{closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), members: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), teams: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), users: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined])})), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), teams: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), users: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined])})), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), members: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), teams: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), users: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined])})), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), teams: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), users: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined])})), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItem: faker.helpers.arrayElement([{closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), members: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), teams: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), users: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined])})), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), teams: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), users: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined])})), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItem: faker.helpers.arrayElement([{closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), members: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), teams: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), users: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined])})), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), teams: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), users: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined])})), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined])})), undefined]), workItemTypes: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItem: faker.helpers.arrayElement([{closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), members: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), teams: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), users: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined]), workItems: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined]), workItems: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined])})), undefined])})), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), teams: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), users: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined]), workItems: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined])})), undefined])})), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined]), workItems: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined]), workItems: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined])})), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItems: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), members: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), teams: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), users: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined])})), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), teams: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), users: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined])})), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined])}, undefined])})

export const getGetProjectWorkitemsMock = () => (faker.helpers.arrayElement([{closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: {lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItem: faker.helpers.arrayElement([{closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), members: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), teams: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), users: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined]), workItems: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined]), workItems: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined])})), undefined])})), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), teams: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), users: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined]), workItems: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined])})), undefined])})), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined]), workItems: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined]), workItems: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined])})), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItems: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), members: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), teams: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), users: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined])})), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), teams: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), users: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined])})), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), members: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), teams: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), users: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined]), workItems: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItem: faker.helpers.arrayElement([{closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItem: faker.helpers.arrayElement([{closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItem: faker.helpers.arrayElement([{closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined]), workItems: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItem: faker.helpers.arrayElement([{closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItem: faker.helpers.arrayElement([{closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItem: faker.helpers.arrayElement([{closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined])})), undefined])})), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), teams: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), users: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined]), workItems: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItem: faker.helpers.arrayElement([{closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItem: faker.helpers.arrayElement([{closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItem: faker.helpers.arrayElement([{closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined])})), undefined])})), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined]), workItems: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItem: faker.helpers.arrayElement([{closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItem: faker.helpers.arrayElement([{closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItem: faker.helpers.arrayElement([{closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined]), workItems: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItem: faker.helpers.arrayElement([{closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItem: faker.helpers.arrayElement([{closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItem: faker.helpers.arrayElement([{closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined])})), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItem: faker.helpers.arrayElement([{closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), members: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), teams: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), users: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined]), workItems: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined]), workItems: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined])})), undefined])})), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), teams: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), users: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined]), workItems: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined])})), undefined])})), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined]), workItems: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined]), workItems: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined])})), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItems: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), members: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), teams: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), users: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined])})), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), teams: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), users: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined])})), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItems: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItem: faker.helpers.arrayElement([{closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), members: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), teams: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), users: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined])})), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), teams: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), users: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined])})), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), members: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), teams: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), users: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined])})), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), teams: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), users: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined])})), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItem: faker.helpers.arrayElement([{closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), members: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), teams: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), users: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined])})), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), teams: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), users: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined])})), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItem: faker.helpers.arrayElement([{closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), members: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), teams: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), users: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined])})), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), teams: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), users: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined])})), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined])})), undefined]), workItemType: faker.helpers.arrayElement([{color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItem: faker.helpers.arrayElement([{closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), members: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), teams: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), users: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined]), workItems: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined]), workItems: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined])})), undefined])})), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), teams: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), users: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined]), workItems: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined])})), undefined])})), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined]), workItems: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined]), workItems: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined])})), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTags: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({color: faker.helpers.arrayElement([faker.random.word(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTagID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItems: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({closed: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), demoProjectWorkItem: faker.helpers.arrayElement([{lastMessageAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), line: faker.helpers.arrayElement([faker.random.word(), undefined]), ref: faker.helpers.arrayElement([faker.random.word(), undefined]), reopened: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), kanbanStepID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), members: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), teams: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), users: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined])})), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userAPIKey: faker.helpers.arrayElement([{apiKey: faker.helpers.arrayElement([faker.random.word(), undefined]), expiresOn: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), user: faker.helpers.arrayElement([{createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), teams: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), description: faker.helpers.arrayElement([faker.random.word(), undefined]), name: faker.helpers.arrayElement([faker.random.word(), undefined]), projectID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), users: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), deletedAt: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), email: faker.helpers.arrayElement([faker.random.word(), undefined]), firstName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), fullName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), hasGlobalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), hasPersonalNotifications: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), lastName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.random.word(), null]), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined])})), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined])}, undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), username: faker.helpers.arrayElement([faker.random.word(), undefined])})), undefined]), metadata: faker.helpers.arrayElement([{}, undefined]), project2workItem: faker.helpers.arrayElement([{customDateForProject2: faker.helpers.arrayElement([faker.helpers.arrayElement([(()=>faker.date.past())(), null]), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), targetDate: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timeEntries: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({activityID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([faker.random.word(), undefined]), durationMinutes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), start: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), teamID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined]), timeEntryID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemID: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), null]), undefined])})), undefined]), title: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), workItemComments: faker.helpers.arrayElement([Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({createdAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), message: faker.helpers.arrayElement([faker.random.word(), undefined]), updatedAt: faker.helpers.arrayElement([(()=>faker.date.past())(), undefined]), userID: faker.helpers.arrayElement([faker.random.word(), undefined]), workItemCommentID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined]), workItemID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})), undefined])})), undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}, undefined]), workItemTypeID: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])}]))

export const getProjectMSW = () => [
rest.post('*/project/:id/initialize', (_req, res, ctx) => {
        return res(
          ctx.delay(1000),
          ctx.status(200, 'Mocked status'),
        )
      }),rest.get('*/project/:id/', (_req, res, ctx) => {
        return res(
          ctx.delay(1000),
          ctx.status(200, 'Mocked status'),
ctx.json(getGetProjectMock()),
        )
      }),rest.get('*/project/:id/config', (_req, res, ctx) => {
        return res(
          ctx.delay(1000),
          ctx.status(200, 'Mocked status'),
ctx.json(getGetProjectConfigMock()),
        )
      }),rest.put('*/project/:id/config', (_req, res, ctx) => {
        return res(
          ctx.delay(1000),
          ctx.status(200, 'Mocked status'),
        )
      }),rest.get('*/project/:id/board', (_req, res, ctx) => {
        return res(
          ctx.delay(1000),
          ctx.status(200, 'Mocked status'),
ctx.json(getGetProjectBoardMock()),
        )
      }),rest.get('*/project/:id/workitems', (_req, res, ctx) => {
        return res(
          ctx.delay(1000),
          ctx.status(200, 'Mocked status'),
ctx.json(getGetProjectWorkitemsMock()),
        )
      }),]
