{
  "type": "object",
  "title": "Schema",
  "definitions": {
    "HTTPValidationError": {
      "title": "HTTPValidationError",
      "type": "object",
      "properties": {
        "detail": {
          "title": "Detail",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationError"
          }
        }
      },
      "$schema": "http://json-schema.org/draft-04/schema#"
    },
    "UpdateUserRequest": {
      "description": "represents User data to update",
      "properties": {
        "role": {
          "$ref": "#/definitions/Role"
        },
        "first_name": {
          "type": "string",
          "pattern": "^[ a-zA-Z0-9_-]+$"
        },
        "last_name": {
          "type": "string",
          "pattern": "^[ a-zA-Z0-9_-]+$"
        }
      },
      "title": "a User",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema#"
    },
    "Scope": {
      "title": "Scope",
      "type": "string",
      "x-db-enum": "scope",
      "enum": [
        "scope1",
        "scope2"
      ],
      "$schema": "http://json-schema.org/draft-04/schema#"
    },
    "Role": {
      "title": "Role",
      "description": "User role.",
      "type": "string",
      "x-db-enum": "role",
      "enum": [
        "user",
        "manager",
        "admin"
      ],
      "$schema": "http://json-schema.org/draft-04/schema#"
    },
    "Organization": {
      "title": "Organization",
      "description": "Organization a user belongs to.",
      "type": "string",
      "x-db-enum": "org",
      "enum": [
        "team 1",
        "team 2",
        "team 3"
      ],
      "$schema": "http://json-schema.org/draft-04/schema#"
    },
    "GetCurrentUserRes": {
      "description": "represents a user",
      "properties": {
        "user_id": {
          "format": "int64",
          "type": "integer",
          "minimum": -9223372036854776000,
          "maximum": 9223372036854776000
        },
        "username": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/Role"
        },
        "orgs": {
          "description": "are organizations a user belongs to",
          "items": {
            "$ref": "#/definitions/Organization"
          }
        }
      },
      "title": "a User",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema#"
    },
    "ValidationError": {
      "title": "ValidationError",
      "required": [
        "loc",
        "msg",
        "type"
      ],
      "type": "object",
      "properties": {
        "loc": {
          "title": "Location",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "msg": {
          "title": "Message",
          "type": "string"
        },
        "type": {
          "title": "Error Type",
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-04/schema#"
    }
  },
  "properties": {
    "HTTPValidationError": {
      "$ref": "#/definitions/HTTPValidationError"
    },
    "UpdateUserRequest": {
      "$ref": "#/definitions/UpdateUserRequest"
    },
    "Scope": {
      "$ref": "#/definitions/Scope"
    },
    "Role": {
      "$ref": "#/definitions/Role"
    },
    "Organization": {
      "$ref": "#/definitions/Organization"
    },
    "GetCurrentUserRes": {
      "$ref": "#/definitions/GetCurrentUserRes"
    },
    "ValidationError": {
      "$ref": "#/definitions/ValidationError"
    }
  }
}