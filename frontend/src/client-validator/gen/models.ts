/* eslint-disable */
/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Location = string[]
export type Message = string
export type ErrorType = string
export type Detail = ValidationError[]
export type Role = 'guest' | 'user' | 'advancedUser' | 'manager' | 'admin' | 'superAdmin'
export type Scope =
  | 'test-scope'
  | 'users:read'
  | 'users:write'
  | 'scopes:write'
  | 'team-settings:write'
  | 'project-settings:write'
  | 'work-item:review'
/**
 * Role in work item for a member.
 */
export type WorkItemRole = 'preparer' | 'reviewer'
export type UuidUUID = string
export type TaskType = {
  color?: string
  description?: string
  name?: string
  taskTypeID?: number
  teamID?: number
} & TaskType1
export type TaskType1 = {
  color?: string
  description?: string
  name?: string
  taskTypeID?: number
  teamID?: number
} | null
export type UserAPIKey = {
  api_key?: string
  expires_on?: string
  user_api_key_id?: number
  user_id?: UuidUUID
} & UserAPIKey1
export type UserAPIKey1 = {
  api_key?: string
  expires_on?: string
  user_api_key_id?: number
  user_id?: UuidUUID
} | null

export interface HTTPValidationError {
  detail?: Detail
}
export interface ValidationError {
  loc: Location
  msg: Message
  type: ErrorType
}
/**
 * represents User data to update
 */
export interface AUser {
  /**
   * originally from auth server but updatable
   */
  first_name?: string
  /**
   * originally from auth server but updatable
   */
  last_name?: string
  role?: Role
  scopes?: Scope[]
}
export interface User {
  apiKeyID?: number | null
  createdAt?: string
  deletedAt?: string | null
  email?: string
  externalID?: string
  firstName?: string | null
  fullName?: string | null
  lastName?: string | null
  roleRank?: number
  scopes?: string[] | null
  teams?: Team[] | null
  time_entries?: TimeEntry[] | null
  updatedAt?: string
  userID?: UuidUUID
  username?: string
  work_items?: WorkItem[] | null
}
export interface Team {
  createdAt?: string
  description?: string
  metadata?: PgtypeJSONB
  name?: string
  projectID?: number
  teamID?: number
  time_entries?: TimeEntry[] | null
  updatedAt?: string
  users?: User[] | null
}
export interface PgtypeJSONB {}
export interface TimeEntry {
  activityID?: number
  comment?: string
  durationMinutes?: number | null
  start?: string
  teamID?: number | null
  timeEntryID?: number
  userID?: UuidUUID
  workItemID?: number | null
}
export interface WorkItem {
  closed?: boolean
  createdAt?: string
  deletedAt?: string | null
  kanbanStepID?: number
  metadata?: PgtypeJSONB
  tasks?: Task[] | null
  teamID?: number
  time_entries?: TimeEntry[] | null
  title?: string
  updatedAt?: string
  users?: User[] | null
  work_item_comments?: WorkItemComment[] | null
  workItemID?: number
  workItemTypeID?: number
}
export interface Task {
  createdAt?: string
  deletedAt?: string | null
  finished?: boolean | null
  metadata?: PgtypeJSONB
  task_type?: TaskType
  taskID?: number
  taskTypeID?: number
  title?: string
  updatedAt?: string
  workItemID?: number
}
export interface WorkItemComment {
  createdAt?: string
  message?: string
  updatedAt?: string
  userID?: UuidUUID
  workItemCommentID?: number
  workItemID?: number
}
